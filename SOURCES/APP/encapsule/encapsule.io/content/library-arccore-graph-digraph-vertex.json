{
    "library.arccore.graph.digraph.vertices": {
        "content": {
            "data": {
                "holisticView_Markdown": {
                    "markdownSource": [

                        "See also: [API Objects](./conventions), [Edge Methods](./edges), [Container Methods](./container-methods), [Serialization](./serialize)",
                        "\n",
                        "Vertex methods allow you to add and remove vertices from a `DirectedGraph` container instance, attach, query, and remove",
                        "application-specific properties from vertices, and determine which other vertices are adjacent to a specific vertex.",
                        "Generally, vertex methods accept _vertex read_ and _vertex write_ objects as input parameters. These objects are explained",
                        "in the [API Objects](./conventions) section.",
                        "\n",

                        "### DirectedGraph.isVertex",
                        "```javascript",
                        "digraph.isVertex(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Boolean true iff the vertex exists in the container. Otherwise false.",
                        "\n",
                        "**Notes**",
                        "\n",
                        "If you pass the ID of a non-existent vertex, or bad input the response will be false.",
                        "\n",



                        "### DirectedGraph.addVertex",
                        "```javascript",
                        "var response = digraph.addVertex({ u: string, p: data});",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex write request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "JavaScript object with the following properties:",
                        "\n",
                        "- **error**: null or a string explaining what went wrong",
                        "- **result**: the unique string identifier of the vertex added to the container or null if an error occurred",
                        "\n",
                        "**Notes**",
                        "\n",
                        "If specified, property data should be serializable to JSON. If you need to associate non-serializable data with",
                        "a vertex, use an external dictionary indexed by vertex identifier.",
                        "\n",
                        "If the vertex already exists in the container and property data was specified, then `addVertex` updates the vertex's",
                        "property data in the container.",
                        "\n",
                        "If the vertex already exists and no property data is specified, `addVertex` does nothing.",
                        "\n",
                        "If your intention is to disassociate the vertex from property data, call `clearVertexProperty` method.",
                        "\n",
                        "The `setVertexProperty` method is a convenience alias for the `addVertex` and their behavior is identical in all respects.",
                        "\n",


                        "### DirectedGraph.removeVertex",
                        "```javascript",
                        "digraph.removeVertex(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Returns true if the vertex was removed. Otherwise, false.",
                        "\n",
                        "**Notes**",
                        "If the response is true, then all edges (both in and out-edges) directed towards and away from the removed vertex are automatically removed as well.",
                        "\n",
                        "If you pass bad input, or the vertex doesn't exist in the container the call returns false.",
                        "\n",



                        "### DirectedGraph.getVertexProperty",
                        "```javascript",
                        "var response = digraph.getVertexProperty(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Returns a reference to data associated with the vertex in the container. If the vertex has no associated property data, the call returns undefined.",
                        "\n",
                        "**Notes**",
                        "\n",
                        "`getVertexProperty` will return undefined if passed bad input.",
                        "\n",


                        "### DirectedGraph.setVertexProperty",
                        "`setVertexProperty` is an alias for method `addVertex`.",


                        "### DirectedGraph.hasVertexProperty",
                        "```javascript",
                        "var response = digraph.hasVertexProperty(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Returns true if the vertex has associated property data. Otherwise, false.",
                        "\n",
                        "**Notes:**",
                        "\n",
                        "`hasVertexProperty` will return false if the request is invalid, or the vertex does not exist in the graph,",
                        "or the vertex exists and does not have associated property data.",
                        "\n",


                        "### DirectedGraph.clearVertexProperty",
                        "```javascript",
                        "var response = digraph.clearVertexProperty(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "_vertex read request_",
                        "\n",
                        "**Return**",
                        "\n",
                        "Returns true to indicate that the vertex property data has been cleared. Otherwise, false.",
                        "\n",
                        "**Notes**",
                        "\n",
                        "`clearVertexProperty` will return false if the request is invalid, or if the vertex does not exist in the graph.",
                        "\n",

                        "### DirectedGraph.inDegree",
                        "```javascript",
                        "var response = digraph.inDegree(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Integer indicating the in-degree of the specific vertex.",
                        "\n",
                        "**Notes**",
                        "`inDegree` will return minus one (-1) if the request is invalid.",
                        "\n",


                        "### DirectedGraph.inEdges",
                        "```javascript",
                        "var response = digraph.inEdges(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Array of edge descriptor objects specifying the source and sink vertex ID's of each of the specified vertex's in-edges.",
                        "\n",
                        "```javascript",
                        "response = [",
                        "    { u: string, v: string },",
                        "    //...",
                        "];",
                        "```",
                        "\n",
                        "**Notes**",
                        "\n",
                        "`inEdges` will return an empty array if the request is invalid, or if the vertex has no in-edges.",
                        "\n",


                        "### DirectedGraph.outDegree",
                        "```javascript",
                        "var response = digraph.outDegree(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Integer indicating the out-degree of the specific vertex.",
                        "\n",
                        "**Notes**",
                        "\n",
                        "`outDegree` will return minus one (-1) if the request is invalid.",
                        "\n",



                        "### DirectedGraph.outEdges",
                        "```javascript",
                        "var response = digraph.outEdges(string);",
                        "```",
                        "\n",
                        "**Request**",
                        "\n",
                        "_vertex read request_",
                        "\n",
                        "**Response**",
                        "\n",
                        "Array of edge descriptor objects specifying the source and sink vertex ID's of each of the specified vertex's out-edges.",
                        "\n",
                        "```javascript",
                        "response = [",
                        "    { u: string, v: string },",
                        "    // ...",
                        "]",
                        "```",
                        "\n",
                        "**Notes**",
                        "\n",
                        "`outEdges` will return an empty array if the request is invalid, or if the vertex has no in-edges.",
                        "\n"


                    ]
                }
            },
            "metadata": {
                "icons": { "svg": "/images/encapsule-arccore-graph.svg" },
                "pageTitle": "ARCcore.graph DirectedGraph Vertex Methods",
                "pageDescription": "ARCcore.graph DirectedGraph vertex methods documentation.",
                "contentTitle": "DirectedGraph Vertex Methods Documentation",
                "contentSubtitle": "DirectedGraph container class vertex access methods.",
                "name": "Vertex Methods",
                "tooltip": "DirectedGraph vertex methods..."
            }
        },
        "relations": {
        },
        "projection": {
            "page": {
                "uriToken": "vertices",
                "serviceFilterVIID": "uwNtsiqzTzSi9-fqHqk0bw"
            }
        }
    }
}
