{
  "dosRgxmiR66ongCbJB78ow": {
    "c65zrhI3Ejco_Sj9nPKc8g": {
      "y3Jy2d56QI63admJOy1tZw": {
        "harnessRequest": {
          "id": "y3Jy2d56QI63admJOy1tZw",
          "name": "DOM Location Processor APM #1",
          "description": "Attempt to instantiate the current DOM Location Processor APM via our test harness.",
          "vectorRequest": {
            "holistic": {
              "holarchy": {
                "CellModel": {
                  "constructorRequest": {
                    "id": "qzMWhMstQ4Ki06O75y5hMA",
                    "vdid": "1A8O_o7a4B1w_KWyL_LQaQ",
                    "name": "DOM Location Processor",
                    "description": "Abstracts monitoring and setting the window.location and hashroute.",
                    "cmat": {
                      "error": null,
                      "result": {
                        "INDEX_CM": {
                          "type": "INDEX",
                          "qzMWhMstQ4Ki06O75y5hMA": {
                            "id": "qzMWhMstQ4Ki06O75y5hMA",
                            "vdid": "1A8O_o7a4B1w_KWyL_LQaQ",
                            "name": "DOM Location Processor",
                            "description": "Abstracts monitoring and setting the window.location and hashroute.",
                            "type": "CM",
                            "-1Ptaq_zTUa8Gfv_3ODtDg": {
                              "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                              "vdid": "rUyFIUkDsTq_--p1alJJdw",
                              "name": "Holistic App Client Kernel: DOM Location Processor",
                              "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                              "type": "APM"
                            },
                            "TlGPCf7uSf2cZMGZCcU85A": {
                              "id": "TlGPCf7uSf2cZMGZCcU85A",
                              "vdid": "134XV9KkzwK2X1tD0xJbBA",
                              "name": "DOM Client Location Proccessor: Initialize",
                              "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj.",
                              "type": "ACT"
                            },
                            "peTmTek_SB64-ofd_PSGjg": {
                              "id": "peTmTek_SB64-ofd_PSGjg",
                              "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                              "name": "DOM Client Location Processor: 'hashchange'",
                              "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details.",
                              "type": "ACT"
                            },
                            "RyMcv3MpTI-Co1EyVOIvlw": {
                              "id": "RyMcv3MpTI-Co1EyVOIvlw",
                              "vdid": "6Oat2CPw6kIm-sG7Mezkhg",
                              "name": "Holarchy CML",
                              "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                              "type": "CM",
                              "c2cq2OE9SiaLKahL3Mk0KA": {
                                "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                "vdid": "Z1cm66QPdtZ1N7PZw-FU_w",
                                "name": "Holarchy Base Cell Model",
                                "description": "A collection of low-level building blocks.",
                                "type": "CM",
                                "U5iIpgd8SHCk7pvaciVLTQ": {
                                  "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                  "vdid": "1oddR4AAuAJb5MBrqckdzQ",
                                  "name": "Holarchy Base Memory Mailbox Flag",
                                  "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                  "type": "CM",
                                  "z_mTe02hSWmaM1iRO1pBeA": {
                                    "id": "z_mTe02hSWmaM1iRO1pBeA",
                                    "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                    "name": "Abstract Frame Latch",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "type": "APM"
                                  },
                                  "iyvk_9vhRn2qvrjOes5v7Q": {
                                    "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                    "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                    "name": "Frame Latch: Write",
                                    "description": "Writes the value made observable by frame latch APM instance.",
                                    "type": "ACT"
                                  },
                                  "MDVBKW89TvO9T62Ge7GmNg": {
                                    "id": "MDVBKW89TvO9T62Ge7GmNg",
                                    "vdid": "e_0rmtOonaXDWo3oekmQsA",
                                    "name": "Holarchy Core",
                                    "description": "Low-level glue models, actions, and operators for building re-usable infrastructure for execution within an ObservableProcessController (OPC) runtime host instance.",
                                    "type": "CM",
                                    "orTbEFR_Q-u-qqEqP8OUBA": {
                                      "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                      "vdid": "uvllVSSpQeMfNj6urucS8Q",
                                      "name": "Holarchy Core Cell",
                                      "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                      "type": "CM",
                                      "9tNY7o5GTUGH_xda2GhP-w": {
                                        "id": "9tNY7o5GTUGH_xda2GhP-w",
                                        "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                        "name": "Cell Process In Step Operator",
                                        "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                        "type": "TOP"
                                      }
                                    },
                                    "RW8Y2O-kRNSv87yXT962wQ": {
                                      "id": "RW8Y2O-kRNSv87yXT962wQ",
                                      "vdid": "e4dxj77HMqe_v4l_aOzwwA",
                                      "name": "Holarchy Core Logic",
                                      "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                      "type": "CM",
                                      "YgABX95wR86GCYrYaDLISA": {
                                        "id": "YgABX95wR86GCYrYaDLISA",
                                        "vdid": "5Ebtc8mARWrvCY6U_wzdDA",
                                        "name": "Logical AND",
                                        "description": "Returns Boolean true iff all suboperations return true.",
                                        "type": "TOP"
                                      },
                                      "0JIva4IFSm6Xm7i38g8uUA": {
                                        "id": "0JIva4IFSm6Xm7i38g8uUA",
                                        "vdid": "FAh08f8CZQHnj-Pkilu-rw",
                                        "name": "Logical OR",
                                        "description": "Returns Boolean true iff any suboperations return true.",
                                        "type": "TOP"
                                      },
                                      "TLSHkl73SO-utuzM7dyN2g": {
                                        "id": "TLSHkl73SO-utuzM7dyN2g",
                                        "vdid": "ASh3z9ynLmUqRJElxWHVjQ",
                                        "name": "Logical NOT",
                                        "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                        "type": "TOP"
                                      },
                                      "e89cwnP4Qd6MocAhzdOJgw": {
                                        "id": "e89cwnP4Qd6MocAhzdOJgw",
                                        "vdid": "NmKPVm8o5IAXQE-GgWcCDA",
                                        "name": "Logical TRUE",
                                        "description": "Always returns Boolean true. Used typically to unilaterally transition a cell process from one step to another (e.g. always, or as a default after many other transition rules).",
                                        "type": "TOP"
                                      }
                                    },
                                    "jQxlhOe-RDilxY0sNIierQ": {
                                      "id": "jQxlhOe-RDilxY0sNIierQ",
                                      "vdid": "la9u8vIGh_WglwTdEwbNZg",
                                      "name": "Holarchy Core Memory Actions & Operators",
                                      "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                      "type": "CM",
                                      "oaF3-dXwQkusjD3I2o9-8g": {
                                        "id": "oaF3-dXwQkusjD3I2o9-8g",
                                        "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                        "name": "OCD Array Length Equal to Value",
                                        "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                        "type": "TOP"
                                      },
                                      "2w7n6KxdR8mdIliePJesLQ": {
                                        "id": "2w7n6KxdR8mdIliePJesLQ",
                                        "vdid": "LxdR4ZycXiKfJOoUpmcnUg",
                                        "name": "OCD Namespace A ? B Value Comparison",
                                        "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator. Note either A and/or B may be specified by value or path.",
                                        "type": "TOP"
                                      },
                                      "UeLs9PcASwuC7KR190eYhA": {
                                        "id": "UeLs9PcASwuC7KR190eYhA",
                                        "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                        "name": "OCD Boolean Flag Is Set",
                                        "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                        "type": "TOP"
                                      },
                                      "ggsavKiARsq7rjwn-lxdfA": {
                                        "id": "ggsavKiARsq7rjwn-lxdfA",
                                        "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                        "name": "OCD Namespace Is Greater Than Value",
                                        "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                        "type": "TOP"
                                      },
                                      "k7THIKKDQMKOac1Rxh9tEQ": {
                                        "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                        "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                        "name": "OCD Namespace Is Identical To Value",
                                        "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                        "type": "TOP"
                                      },
                                      "XxX_a1sQS1OlJbWAYfx6tQ": {
                                        "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                        "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                        "name": "OCD Namespace Is Less Than Value",
                                        "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                        "type": "TOP"
                                      },
                                      "kD1PcgqYQlm7fJatNG2ZsA": {
                                        "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                        "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                        "name": "OCD Namespace Is Truthy",
                                        "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                        "type": "TOP"
                                      },
                                      "pj9a6tQpSXWp7WZZ8VbKLQ": {
                                        "id": "pj9a6tQpSXWp7WZZ8VbKLQ",
                                        "vdid": "zquEh0gwCPP_d9hmBD3uAQ",
                                        "name": "OCD Namespace Is Array Empty",
                                        "description": "Returns Boolean true iff the indicated OCD namespace value is an array AND value.length !== 0.",
                                        "type": "TOP"
                                      },
                                      "fS5liuD1RBSdaPBEhsoxXw": {
                                        "id": "fS5liuD1RBSdaPBEhsoxXw",
                                        "vdid": "DmRYzsWPhe-U6ZWFhMH9-w",
                                        "name": "OCD Namespace Is Map Keyless",
                                        "description": "Returns Boolean true iff the indicated OCD namespace is declared as a map in the OCD filter spec AND the OCD value is an object AND Object.key(value) !== 0.",
                                        "type": "TOP"
                                      },
                                      "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                        "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                        "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                        "name": "OCD Read Namespace Indirect",
                                        "description": "Reads and returns the value of OCD namespace via path indirection.",
                                        "type": "ACT"
                                      },
                                      "5rFEDGLYRSiZCeChMnkCHQ": {
                                        "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                        "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                        "name": "OCD Boolean Flag Set",
                                        "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                        "type": "ACT"
                                      },
                                      "_yxWfFLnTqqN-UxRdd7W5w": {
                                        "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                        "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                        "name": "OCD Boolean Flag Clear",
                                        "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                        "type": "ACT"
                                      },
                                      "aXju3wSBQnufe0r51Y04wg": {
                                        "id": "aXju3wSBQnufe0r51Y04wg",
                                        "vdid": "1cu2zJ4iw9XB4K-RljVPPQ",
                                        "name": "Write Sub-Action Response",
                                        "description": "A low-level utility action that dispatches a subaction returning the response to the caller and writing it also to the indicated OCD response namespace.",
                                        "type": "ACT"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "harnessResponse": {
          "error": null,
          "result": {
            "harnessOptions": {
              "idempotent": true,
              "gitDiffHunkSize": 0
            },
            "harnessDispatch": {
              "FAvFLw0XQN6yomNs13r21g": {
                "y3Jy2d56QI63admJOy1tZw": {
                  "isValid": true,
                  "summary": {
                    "counts": {
                      "vertices": 35,
                      "edges": 61,
                      "artifacts": {
                        "cm": 8,
                        "apm": 2,
                        "top": 14,
                        "act": 7
                      }
                    }
                  },
                  "opcConfig": {
                    "error": null,
                    "result": {
                      "apm": [
                        {
                          "id": "z_mTe02hSWmaM1iRO1pBeA",
                          "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                          "name": "Abstract Frame Latch",
                          "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it."
                        },
                        {
                          "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                          "vdid": "rUyFIUkDsTq_--p1alJJdw",
                          "name": "Holistic App Client Kernel: DOM Location Processor",
                          "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location."
                        }
                      ],
                      "top": [
                        {
                          "id": "9tNY7o5GTUGH_xda2GhP-w",
                          "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                          "name": "Cell Process In Step Operator",
                          "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                        },
                        {
                          "id": "YgABX95wR86GCYrYaDLISA",
                          "vdid": "5Ebtc8mARWrvCY6U_wzdDA",
                          "name": "Logical AND",
                          "description": "Returns Boolean true iff all suboperations return true."
                        },
                        {
                          "id": "TLSHkl73SO-utuzM7dyN2g",
                          "vdid": "ASh3z9ynLmUqRJElxWHVjQ",
                          "name": "Logical NOT",
                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                        },
                        {
                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                          "vdid": "FAh08f8CZQHnj-Pkilu-rw",
                          "name": "Logical OR",
                          "description": "Returns Boolean true iff any suboperations return true."
                        },
                        {
                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                          "vdid": "NmKPVm8o5IAXQE-GgWcCDA",
                          "name": "Logical TRUE",
                          "description": "Always returns Boolean true. Used typically to unilaterally transition a cell process from one step to another (e.g. always, or as a default after many other transition rules)."
                        },
                        {
                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                          "name": "OCD Array Length Equal to Value",
                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                        },
                        {
                          "id": "UeLs9PcASwuC7KR190eYhA",
                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                          "name": "OCD Boolean Flag Is Set",
                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                        },
                        {
                          "id": "2w7n6KxdR8mdIliePJesLQ",
                          "vdid": "LxdR4ZycXiKfJOoUpmcnUg",
                          "name": "OCD Namespace A ? B Value Comparison",
                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator. Note either A and/or B may be specified by value or path."
                        },
                        {
                          "id": "pj9a6tQpSXWp7WZZ8VbKLQ",
                          "vdid": "zquEh0gwCPP_d9hmBD3uAQ",
                          "name": "OCD Namespace Is Array Empty",
                          "description": "Returns Boolean true iff the indicated OCD namespace value is an array AND value.length !== 0."
                        },
                        {
                          "id": "ggsavKiARsq7rjwn-lxdfA",
                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                          "name": "OCD Namespace Is Greater Than Value",
                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                        },
                        {
                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                          "name": "OCD Namespace Is Identical To Value",
                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                        },
                        {
                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                          "name": "OCD Namespace Is Less Than Value",
                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                        },
                        {
                          "id": "fS5liuD1RBSdaPBEhsoxXw",
                          "vdid": "DmRYzsWPhe-U6ZWFhMH9-w",
                          "name": "OCD Namespace Is Map Keyless",
                          "description": "Returns Boolean true iff the indicated OCD namespace is declared as a map in the OCD filter spec AND the OCD value is an object AND Object.key(value) !== 0."
                        },
                        {
                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                          "name": "OCD Namespace Is Truthy",
                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                        }
                      ],
                      "act": [
                        {
                          "id": "TlGPCf7uSf2cZMGZCcU85A",
                          "vdid": "134XV9KkzwK2X1tD0xJbBA",
                          "name": "DOM Client Location Proccessor: Initialize",
                          "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj."
                        },
                        {
                          "id": "peTmTek_SB64-ofd_PSGjg",
                          "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                          "name": "DOM Client Location Processor: 'hashchange'",
                          "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details."
                        },
                        {
                          "id": "iyvk_9vhRn2qvrjOes5v7Q",
                          "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                          "name": "Frame Latch: Write",
                          "description": "Writes the value made observable by frame latch APM instance."
                        },
                        {
                          "id": "_yxWfFLnTqqN-UxRdd7W5w",
                          "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                          "name": "OCD Boolean Flag Clear",
                          "description": "Set the Boolean-type OCD namespace specified by path to value false."
                        },
                        {
                          "id": "5rFEDGLYRSiZCeChMnkCHQ",
                          "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                          "name": "OCD Boolean Flag Set",
                          "description": "Set the Boolean-type OCD namespace specified by path to value true."
                        },
                        {
                          "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                          "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                          "name": "OCD Read Namespace Indirect",
                          "description": "Reads and returns the value of OCD namespace via path indirection."
                        },
                        {
                          "id": "aXju3wSBQnufe0r51Y04wg",
                          "vdid": "1cu2zJ4iw9XB4K-RljVPPQ",
                          "name": "Write Sub-Action Response",
                          "description": "A low-level utility action that dispatches a subaction returning the response to the caller and writing it also to the indicated OCD response namespace."
                        }
                      ]
                    }
                  },
                  "cmat": {
                    "error": null,
                    "result": {
                      "INDEX_CM": {
                        "type": "INDEX",
                        "qzMWhMstQ4Ki06O75y5hMA": {
                          "id": "qzMWhMstQ4Ki06O75y5hMA",
                          "vdid": "1A8O_o7a4B1w_KWyL_LQaQ",
                          "name": "DOM Location Processor",
                          "description": "Abstracts monitoring and setting the window.location and hashroute.",
                          "type": "CM",
                          "-1Ptaq_zTUa8Gfv_3ODtDg": {
                            "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                            "vdid": "rUyFIUkDsTq_--p1alJJdw",
                            "name": "Holistic App Client Kernel: DOM Location Processor",
                            "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                            "type": "APM"
                          },
                          "TlGPCf7uSf2cZMGZCcU85A": {
                            "id": "TlGPCf7uSf2cZMGZCcU85A",
                            "vdid": "134XV9KkzwK2X1tD0xJbBA",
                            "name": "DOM Client Location Proccessor: Initialize",
                            "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj.",
                            "type": "ACT"
                          },
                          "peTmTek_SB64-ofd_PSGjg": {
                            "id": "peTmTek_SB64-ofd_PSGjg",
                            "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                            "name": "DOM Client Location Processor: 'hashchange'",
                            "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details.",
                            "type": "ACT"
                          },
                          "RyMcv3MpTI-Co1EyVOIvlw": {
                            "id": "RyMcv3MpTI-Co1EyVOIvlw",
                            "vdid": "6Oat2CPw6kIm-sG7Mezkhg",
                            "name": "Holarchy CML",
                            "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                            "type": "CM",
                            "c2cq2OE9SiaLKahL3Mk0KA": {
                              "id": "c2cq2OE9SiaLKahL3Mk0KA",
                              "vdid": "Z1cm66QPdtZ1N7PZw-FU_w",
                              "name": "Holarchy Base Cell Model",
                              "description": "A collection of low-level building blocks.",
                              "type": "CM",
                              "U5iIpgd8SHCk7pvaciVLTQ": {
                                "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                "vdid": "1oddR4AAuAJb5MBrqckdzQ",
                                "name": "Holarchy Base Memory Mailbox Flag",
                                "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                "type": "CM",
                                "z_mTe02hSWmaM1iRO1pBeA": {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "type": "APM"
                                },
                                "iyvk_9vhRn2qvrjOes5v7Q": {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance.",
                                  "type": "ACT"
                                },
                                "MDVBKW89TvO9T62Ge7GmNg": {
                                  "id": "MDVBKW89TvO9T62Ge7GmNg",
                                  "vdid": "e_0rmtOonaXDWo3oekmQsA",
                                  "name": "Holarchy Core",
                                  "description": "Low-level glue models, actions, and operators for building re-usable infrastructure for execution within an ObservableProcessController (OPC) runtime host instance.",
                                  "type": "CM",
                                  "orTbEFR_Q-u-qqEqP8OUBA": {
                                    "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                    "vdid": "uvllVSSpQeMfNj6urucS8Q",
                                    "name": "Holarchy Core Cell",
                                    "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                    "type": "CM",
                                    "9tNY7o5GTUGH_xda2GhP-w": {
                                      "id": "9tNY7o5GTUGH_xda2GhP-w",
                                      "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                      "name": "Cell Process In Step Operator",
                                      "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                      "type": "TOP"
                                    }
                                  },
                                  "RW8Y2O-kRNSv87yXT962wQ": {
                                    "id": "RW8Y2O-kRNSv87yXT962wQ",
                                    "vdid": "e4dxj77HMqe_v4l_aOzwwA",
                                    "name": "Holarchy Core Logic",
                                    "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                    "type": "CM",
                                    "YgABX95wR86GCYrYaDLISA": {
                                      "id": "YgABX95wR86GCYrYaDLISA",
                                      "vdid": "5Ebtc8mARWrvCY6U_wzdDA",
                                      "name": "Logical AND",
                                      "description": "Returns Boolean true iff all suboperations return true.",
                                      "type": "TOP"
                                    },
                                    "0JIva4IFSm6Xm7i38g8uUA": {
                                      "id": "0JIva4IFSm6Xm7i38g8uUA",
                                      "vdid": "FAh08f8CZQHnj-Pkilu-rw",
                                      "name": "Logical OR",
                                      "description": "Returns Boolean true iff any suboperations return true.",
                                      "type": "TOP"
                                    },
                                    "TLSHkl73SO-utuzM7dyN2g": {
                                      "id": "TLSHkl73SO-utuzM7dyN2g",
                                      "vdid": "ASh3z9ynLmUqRJElxWHVjQ",
                                      "name": "Logical NOT",
                                      "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                      "type": "TOP"
                                    },
                                    "e89cwnP4Qd6MocAhzdOJgw": {
                                      "id": "e89cwnP4Qd6MocAhzdOJgw",
                                      "vdid": "NmKPVm8o5IAXQE-GgWcCDA",
                                      "name": "Logical TRUE",
                                      "description": "Always returns Boolean true. Used typically to unilaterally transition a cell process from one step to another (e.g. always, or as a default after many other transition rules).",
                                      "type": "TOP"
                                    }
                                  },
                                  "jQxlhOe-RDilxY0sNIierQ": {
                                    "id": "jQxlhOe-RDilxY0sNIierQ",
                                    "vdid": "la9u8vIGh_WglwTdEwbNZg",
                                    "name": "Holarchy Core Memory Actions & Operators",
                                    "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                    "type": "CM",
                                    "oaF3-dXwQkusjD3I2o9-8g": {
                                      "id": "oaF3-dXwQkusjD3I2o9-8g",
                                      "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                      "name": "OCD Array Length Equal to Value",
                                      "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                      "type": "TOP"
                                    },
                                    "2w7n6KxdR8mdIliePJesLQ": {
                                      "id": "2w7n6KxdR8mdIliePJesLQ",
                                      "vdid": "LxdR4ZycXiKfJOoUpmcnUg",
                                      "name": "OCD Namespace A ? B Value Comparison",
                                      "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator. Note either A and/or B may be specified by value or path.",
                                      "type": "TOP"
                                    },
                                    "UeLs9PcASwuC7KR190eYhA": {
                                      "id": "UeLs9PcASwuC7KR190eYhA",
                                      "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                      "name": "OCD Boolean Flag Is Set",
                                      "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                      "type": "TOP"
                                    },
                                    "ggsavKiARsq7rjwn-lxdfA": {
                                      "id": "ggsavKiARsq7rjwn-lxdfA",
                                      "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                      "name": "OCD Namespace Is Greater Than Value",
                                      "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                      "type": "TOP"
                                    },
                                    "k7THIKKDQMKOac1Rxh9tEQ": {
                                      "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                      "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                      "name": "OCD Namespace Is Identical To Value",
                                      "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                      "type": "TOP"
                                    },
                                    "XxX_a1sQS1OlJbWAYfx6tQ": {
                                      "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                      "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                      "name": "OCD Namespace Is Less Than Value",
                                      "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                      "type": "TOP"
                                    },
                                    "kD1PcgqYQlm7fJatNG2ZsA": {
                                      "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                      "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                      "name": "OCD Namespace Is Truthy",
                                      "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                      "type": "TOP"
                                    },
                                    "pj9a6tQpSXWp7WZZ8VbKLQ": {
                                      "id": "pj9a6tQpSXWp7WZZ8VbKLQ",
                                      "vdid": "zquEh0gwCPP_d9hmBD3uAQ",
                                      "name": "OCD Namespace Is Array Empty",
                                      "description": "Returns Boolean true iff the indicated OCD namespace value is an array AND value.length !== 0.",
                                      "type": "TOP"
                                    },
                                    "fS5liuD1RBSdaPBEhsoxXw": {
                                      "id": "fS5liuD1RBSdaPBEhsoxXw",
                                      "vdid": "DmRYzsWPhe-U6ZWFhMH9-w",
                                      "name": "OCD Namespace Is Map Keyless",
                                      "description": "Returns Boolean true iff the indicated OCD namespace is declared as a map in the OCD filter spec AND the OCD value is an object AND Object.key(value) !== 0.",
                                      "type": "TOP"
                                    },
                                    "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                      "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                      "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                      "name": "OCD Read Namespace Indirect",
                                      "description": "Reads and returns the value of OCD namespace via path indirection.",
                                      "type": "ACT"
                                    },
                                    "5rFEDGLYRSiZCeChMnkCHQ": {
                                      "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                      "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                      "name": "OCD Boolean Flag Set",
                                      "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                      "type": "ACT"
                                    },
                                    "_yxWfFLnTqqN-UxRdd7W5w": {
                                      "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                      "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                      "name": "OCD Boolean Flag Clear",
                                      "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                      "type": "ACT"
                                    },
                                    "aXju3wSBQnufe0r51Y04wg": {
                                      "id": "aXju3wSBQnufe0r51Y04wg",
                                      "vdid": "1cu2zJ4iw9XB4K-RljVPPQ",
                                      "name": "Write Sub-Action Response",
                                      "description": "A low-level utility action that dispatches a subaction returning the response to the caller and writing it also to the indicated OCD response namespace.",
                                      "type": "ACT"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
