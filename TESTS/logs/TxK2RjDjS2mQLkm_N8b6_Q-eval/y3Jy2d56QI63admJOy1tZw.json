{
  "dosRgxmiR66ongCbJB78ow": {
    "XsWRwtrxCUvzPsiaQrCA6Q": {
      "y3Jy2d56QI63admJOy1tZw": {
        "harnessRequest": {
          "id": "y3Jy2d56QI63admJOy1tZw",
          "name": "DOM Location Processor APM #1",
          "description": "Attempt to instantiate the current DOM Location Processor APM via our test harness.",
          "vectorRequest": {
            "holistic": {
              "holarchy": {
                "AbstractProcessModel": {
                  "constructorRequest": {
                    "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                    "name": "DOM Location Processor",
                    "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                    "ocdDataSpec": {
                      "____label": "Client Hash Route Location Processor",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "inputs": {
                        "____types": "jsObject",
                        "____defaultValue": {}
                      },
                      "_private": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "routerEventCount": {
                          "____label": "Router Event Count",
                          "____description": "A count of the total number of observed changes of the DOM location object induced by all actors.",
                          "____accept": "jsNumber",
                          "____defaultValue": 0
                        },
                        "lastOutputEventIndex": {
                          "____label": "Last Output Index",
                          "____description": "A count of the total number of routerEventDescriptor objects written to the model's output.",
                          "____accept": "jsNumber",
                          "____defaultValue": 0
                        },
                        "locationHistory": {
                          "____label": "Location History Array",
                          "____description": "Array written by the sink hashchange event action for every observed change in location.",
                          "____types": "jsArray",
                          "____defaultValue": [],
                          "routerEventDescriptor": {
                            "____types": "jsObject",
                            "actor": {
                              "____accept": "jsString",
                              "____inValueSet": [
                                "server",
                                "user",
                                "app"
                              ]
                            },
                            "href": {
                              "____accept": "jsString"
                            },
                            "routerEventNumber": {
                              "____accept": "jsNumber"
                            }
                          }
                        },
                        "updateObservers": {
                          "____label": "Update Observers Flag",
                          "____description": "A Boolean flag set by DOM Location Processor actions to indicate to the DOM Location Processor model that it should transition to update step.",
                          "____accept": "jsBoolean",
                          "____defaultValue": false
                        }
                      },
                      "outputs": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "currentRoute": {
                          "____types": [
                            "jsNull",
                            "jsObject"
                          ],
                          "actor": {
                            "____accept": "jsString",
                            "____inValueSet": [
                              "server",
                              "user",
                              "app"
                            ]
                          },
                          "href": {
                            "____accept": "jsString"
                          },
                          "routerEventNumber": {
                            "____accept": "jsNumber"
                          },
                          "____defaultValue": null
                        }
                      }
                    },
                    "steps": {
                      "uninitialized": {
                        "description": "Default starting process step.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "initialize"
                          }
                        ]
                      },
                      "initialize": {
                        "description": "Registering hashchange DOM event callback.",
                        "actions": {
                          "enter": [
                            {
                              "holistic": {
                                "app": {
                                  "client": {
                                    "sml": {
                                      "actions": {
                                        "DOMLocationProcessor": {
                                          "initialize": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "exit": [
                            {
                              "holistic": {
                                "app": {
                                  "client": {
                                    "sml": {
                                      "actions": {
                                        "DOMLocationProcessor": {
                                          "notifyEvent": {
                                            "hashchange": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "wait"
                          }
                        ]
                      },
                      "wait": {
                        "description": "Waiting for DOM hashchange event.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isBooleanFlagSet": {
                                        "path": "#._private.updateObservers"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "update"
                          }
                        ]
                      },
                      "update": {
                        "description": "The observable browser location has been updated. Information about the current location, and who set it is available in this model's output namespace.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "wait"
                          }
                        ],
                        "actions": {
                          "exit": [
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "ocd": {
                                      "clearBooleanFlag": {
                                        "path": "#._private.updateObservers"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "harnessResponse": {
          "error": null,
          "result": {
            "harnessOptions": {
              "idempotent": true,
              "gitDiffHunkSize": 0
            },
            "harnessDispatch": {
              "mC3pPO5wS3SxvhgZgMjsJQ": {
                "y3Jy2d56QI63admJOy1tZw": {
                  "isValid": true,
                  "toJSON": {
                    "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                    "name": "DOM Location Processor",
                    "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                    "ocdDataSpec": {
                      "____label": "Client Hash Route Location Processor",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "inputs": {
                        "____types": "jsObject",
                        "____defaultValue": {}
                      },
                      "_private": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "routerEventCount": {
                          "____label": "Router Event Count",
                          "____description": "A count of the total number of observed changes of the DOM location object induced by all actors.",
                          "____accept": "jsNumber",
                          "____defaultValue": 0
                        },
                        "lastOutputEventIndex": {
                          "____label": "Last Output Index",
                          "____description": "A count of the total number of routerEventDescriptor objects written to the model's output.",
                          "____accept": "jsNumber",
                          "____defaultValue": 0
                        },
                        "locationHistory": {
                          "____label": "Location History Array",
                          "____description": "Array written by the sink hashchange event action for every observed change in location.",
                          "____types": "jsArray",
                          "____defaultValue": [],
                          "routerEventDescriptor": {
                            "____types": "jsObject",
                            "actor": {
                              "____accept": "jsString",
                              "____inValueSet": [
                                "server",
                                "user",
                                "app"
                              ]
                            },
                            "href": {
                              "____accept": "jsString"
                            },
                            "routerEventNumber": {
                              "____accept": "jsNumber"
                            }
                          }
                        },
                        "updateObservers": {
                          "____label": "Update Observers Flag",
                          "____description": "A Boolean flag set by DOM Location Processor actions to indicate to the DOM Location Processor model that it should transition to update step.",
                          "____accept": "jsBoolean",
                          "____defaultValue": false
                        }
                      },
                      "outputs": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "currentRoute": {
                          "____types": [
                            "jsNull",
                            "jsObject"
                          ],
                          "actor": {
                            "____accept": "jsString",
                            "____inValueSet": [
                              "server",
                              "user",
                              "app"
                            ]
                          },
                          "href": {
                            "____accept": "jsString"
                          },
                          "routerEventNumber": {
                            "____accept": "jsNumber"
                          },
                          "____defaultValue": null
                        }
                      }
                    },
                    "steps": {
                      "uninitialized": {
                        "description": "Default starting process step.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "initialize"
                          }
                        ]
                      },
                      "initialize": {
                        "description": "Registering hashchange DOM event callback.",
                        "actions": {
                          "enter": [
                            {
                              "holistic": {
                                "app": {
                                  "client": {
                                    "sml": {
                                      "actions": {
                                        "DOMLocationProcessor": {
                                          "initialize": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "exit": [
                            {
                              "holistic": {
                                "app": {
                                  "client": {
                                    "sml": {
                                      "actions": {
                                        "DOMLocationProcessor": {
                                          "notifyEvent": {
                                            "hashchange": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "wait"
                          }
                        ]
                      },
                      "wait": {
                        "description": "Waiting for DOM hashchange event.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isBooleanFlagSet": {
                                        "path": "#._private.updateObservers"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "update"
                          }
                        ]
                      },
                      "update": {
                        "description": "The observable browser location has been updated. Information about the current location, and who set it is available in this model's output namespace.",
                        "actions": {
                          "enter": [],
                          "exit": [
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "ocd": {
                                      "clearBooleanFlag": {
                                        "path": "#._private.updateObservers"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "wait"
                          }
                        ]
                      }
                    }
                  },
                  "getID": "-1Ptaq_zTUa8Gfv_3ODtDg",
                  "getName": "DOM Location Processor",
                  "getDescription": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                  "getDataSpec": {
                    "____label": "Client Hash Route Location Processor",
                    "____types": "jsObject",
                    "____defaultValue": {},
                    "inputs": {
                      "____types": "jsObject",
                      "____defaultValue": {}
                    },
                    "_private": {
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "routerEventCount": {
                        "____label": "Router Event Count",
                        "____description": "A count of the total number of observed changes of the DOM location object induced by all actors.",
                        "____accept": "jsNumber",
                        "____defaultValue": 0
                      },
                      "lastOutputEventIndex": {
                        "____label": "Last Output Index",
                        "____description": "A count of the total number of routerEventDescriptor objects written to the model's output.",
                        "____accept": "jsNumber",
                        "____defaultValue": 0
                      },
                      "locationHistory": {
                        "____label": "Location History Array",
                        "____description": "Array written by the sink hashchange event action for every observed change in location.",
                        "____types": "jsArray",
                        "____defaultValue": [],
                        "routerEventDescriptor": {
                          "____types": "jsObject",
                          "actor": {
                            "____accept": "jsString",
                            "____inValueSet": [
                              "server",
                              "user",
                              "app"
                            ]
                          },
                          "href": {
                            "____accept": "jsString"
                          },
                          "routerEventNumber": {
                            "____accept": "jsNumber"
                          }
                        }
                      },
                      "updateObservers": {
                        "____label": "Update Observers Flag",
                        "____description": "A Boolean flag set by DOM Location Processor actions to indicate to the DOM Location Processor model that it should transition to update step.",
                        "____accept": "jsBoolean",
                        "____defaultValue": false
                      }
                    },
                    "outputs": {
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "currentRoute": {
                        "____types": [
                          "jsNull",
                          "jsObject"
                        ],
                        "actor": {
                          "____accept": "jsString",
                          "____inValueSet": [
                            "server",
                            "user",
                            "app"
                          ]
                        },
                        "href": {
                          "____accept": "jsString"
                        },
                        "routerEventNumber": {
                          "____accept": "jsNumber"
                        },
                        "____defaultValue": null
                      }
                    }
                  },
                  "getDigraph": {
                    "name": "[-1Ptaq_zTUa8Gfv_3ODtDg::DOM Location Processor] APM Digraph",
                    "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                    "vlist": [
                      {
                        "u": "uninitialized",
                        "p": {
                          "description": "Default starting process step.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "initialize",
                        "p": {
                          "description": "Registering hashchange DOM event callback.",
                          "actions": {
                            "enter": [
                              {
                                "holistic": {
                                  "app": {
                                    "client": {
                                      "sml": {
                                        "actions": {
                                          "DOMLocationProcessor": {
                                            "initialize": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "exit": [
                              {
                                "holistic": {
                                  "app": {
                                    "client": {
                                      "sml": {
                                        "actions": {
                                          "DOMLocationProcessor": {
                                            "notifyEvent": {
                                              "hashchange": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "u": "wait",
                        "p": {
                          "description": "Waiting for DOM hashchange event.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "update",
                        "p": {
                          "description": "The observable browser location has been updated. Information about the current location, and who set it is available in this model's output namespace.",
                          "actions": {
                            "enter": [],
                            "exit": [
                              {
                                "holarchy": {
                                  "sml": {
                                    "actions": {
                                      "ocd": {
                                        "clearBooleanFlag": {
                                          "path": "#._private.updateObservers"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "elist": [
                      {
                        "e": {
                          "u": "uninitialized",
                          "v": "initialize"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "always": true
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "initialize",
                          "v": "wait"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "always": true
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "wait",
                          "v": "update"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "holarchy": {
                              "sml": {
                                "operators": {
                                  "ocd": {
                                    "isBooleanFlagSet": {
                                      "path": "#._private.updateObservers"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "update",
                          "v": "wait"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "always": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
