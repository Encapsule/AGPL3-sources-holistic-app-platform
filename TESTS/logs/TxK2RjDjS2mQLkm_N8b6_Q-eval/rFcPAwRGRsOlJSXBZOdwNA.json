{
  "dosRgxmiR66ongCbJB78ow": {
    "bvj2u51Uw5_SD1TRZNpwXA": {
      "rFcPAwRGRsOlJSXBZOdwNA": {
        "harnessRequest": {
          "id": "rFcPAwRGRsOlJSXBZOdwNA",
          "name": "OPC Evaluate Operator Test #4",
          "description": "Test transition operator failure (bad operator throws exception from bodyFunction).",
          "vectorRequest": {
            "holistic": {
              "holarchy": {
                "ObservableProcessController": {
                  "constructorRequest": {
                    "id": "rFcPAwRGRsOlJSXBZOdwNA",
                    "name": "OPC Evaluate Operator Test #4",
                    "description": "Test transition operator failure (bad operator throws exception from bodyFunction).",
                    "ocdTemplateSpec": {
                      "____types": "jsObject",
                      "test": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "____appdsl": {
                          "opm": "Pkr1EErLSiiHQRt8gCaO0Q"
                        }
                      }
                    },
                    "observableProcessModelSets": [
                      [
                        {
                          "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                          "name": "OPM Test A",
                          "description": "A simple test OPM (force transition operator error - no registered actions/no-plug-in for request).",
                          "opmDataSpec": {
                            "____types": "jsObject"
                          },
                          "steps": {
                            "uninitialized": {
                              "description": "Default starting process step.",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": [
                                {
                                  "transitionIf": {
                                    "noneSuchOperator": true
                                  },
                                  "nextStep": "goal"
                                }
                              ]
                            },
                            "goal": {
                              "description": "Test goal state (never reached).",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": []
                            }
                          }
                        },
                        {
                          "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                          "name": "OPM Test B",
                          "description": "A simple test OPM (force transition operator error - operator returns transport error)",
                          "opmDataSpec": {
                            "____types": "jsObject"
                          },
                          "steps": {
                            "uninitialized": {
                              "description": "Default starting process step.",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": [
                                {
                                  "transitionIf": {
                                    "badTransitionOperatorResponseError": true
                                  },
                                  "nextStep": "goal"
                                }
                              ]
                            },
                            "goal": {
                              "description": "Test goal state (never reached).",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": []
                            }
                          }
                        },
                        {
                          "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                          "name": "OPM Test C",
                          "description": "A simple test OPM (force transition operator error - operator throws an Error)",
                          "opmDataSpec": {
                            "____types": "jsObject"
                          },
                          "steps": {
                            "uninitialized": {
                              "description": "Default starting process step.",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": [
                                {
                                  "transitionIf": {
                                    "badTransitionOperatorThrowError": true
                                  },
                                  "nextStep": "goal"
                                }
                              ]
                            },
                            "goal": {
                              "description": "Test goal state (never reached).",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": []
                            }
                          }
                        },
                        {
                          "id": "ZFpRfMRETDqavS3EqEuv1Q",
                          "name": "OPC Test D",
                          "description": "A simple test OPM",
                          "opmDataSpec": {
                            "____types": "jsObject"
                          },
                          "steps": {}
                        }
                      ]
                    ],
                    "transitionOperatorSets": [
                      [
                        {
                          "operationID": "YgABX95wR86GCYrYaDLISA",
                          "operationName": "AND Transition Expression Operator",
                          "operationDescription": "Returns Boolean true iff all suboperations return true.",
                          "inputFilterSpec": {
                            "____label": "AND Transition Expression Operator Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "and": {
                                "____types": "jsArray",
                                "operandOperatorVariant": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                          "inputTypeVDID": "pYRwJ3zquyIbe0yt63Q8dw",
                          "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "9j-nRLaS-JMBy9-cqL8Kcg"
                        },
                        {
                          "operationID": "TLSHkl73SO-utuzM7dyN2g",
                          "operationName": "NOT Transition Expression Operator",
                          "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                          "inputFilterSpec": {
                            "____label": "NOT Transition Expression Operator Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "not": {
                                "____accept": "jsObject"
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                          "inputTypeVDID": "7rkXI0u1RdtrPeFJ0bjOSw",
                          "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "MXTORHRQZJPICJmcBCA2cg"
                        },
                        {
                          "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                          "operationName": "OR Transition Expression Operator",
                          "operationDescription": "Returns Boolean true iff any suboperations return true.",
                          "inputFilterSpec": {
                            "____label": "OR Transition Expression Operator Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "or": {
                                "____types": "jsArray",
                                "operandOperatorVariant": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                          "inputTypeVDID": "y8pAS_QoDfOJJoTJrPplgg",
                          "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "4DXKRIX3-pNmkjScOMOQcg"
                        },
                        {
                          "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                          "operationName": "Always returns Boolean true unconditionally.",
                          "operationDescription": "Always returns true.",
                          "inputFilterSpec": {
                            "____label": "Always returns Boolean true unconditionally. Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "always": {
                                "____accept": "jsBoolean",
                                "____inValueSet": [
                                  true
                                ]
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                          "inputTypeVDID": "MVI7xMFrPoUf0pOqxHaYCw",
                          "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "7vuERObo1JP8xkCc1Ew-cg"
                        },
                        {
                          "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                          "operationName": "OPM In Step Expression Operator",
                          "operationDescription": "Returns Boolean true iff the indicated OPM instance is in the indicated process step.",
                          "inputFilterSpec": {
                            "____label": "OPM In Step Expression Operator Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "encapsule": {
                                "____types": "jsObject",
                                "holarchySML": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "opmi": {
                                      "____types": "jsObject",
                                      "inStep": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        },
                                        "step": {
                                          "____accept": "jsString"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                          "inputTypeVDID": "PQ7btHai6LpYh0qzhGFTEw",
                          "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "wuHfRFbQk5O6LmCctPVfcg"
                        },
                        {
                          "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                          "operationName": "OCD Namespace Is Truthy",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Truthy Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "encapsule": {
                                "____types": "jsObject",
                                "holarchySML": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocdi": {
                                      "____types": "jsObject",
                                      "isTruthy": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                          "inputTypeVDID": "YB7ONfnX5VY4uFHlMvJmJA",
                          "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "vuhHROKrX5P3XLqc3Khkcg"
                        }
                      ],
                      [
                        {
                          "operationID": "AODn0L3GQLK_21Msl1W8-g",
                          "operationName": "Bad Transition Operator #1",
                          "operationDescription": "A TransitionOperator instance that is hard-wired to return a transport error (i.e. sets response.error).",
                          "inputFilterSpec": {
                            "____label": "Bad Transition Operator #1 Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "badTransitionOperatorResponseError": {
                                "____accept": "jsBoolean",
                                "____inValueSet": [
                                  true
                                ]
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "fcGtxyvuqlkqDpUA1XVQaw",
                          "inputTypeVDID": "Ei-Ov12VpDg2k8BKExNf_Q",
                          "outputTypeVIID": "x1HY9UsShOVVJgsxt0rzRg",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "Zr0nRD6XjZM3ykucwiBRcg"
                        },
                        {
                          "operationID": "ZdpLuggZRVaMI6aPW1mmUw",
                          "operationName": "Bad Transition Operator #2",
                          "operationDescription": "A TransitionOperator instance that is hard-wired to throw and exception.",
                          "inputFilterSpec": {
                            "____label": "Bad Transition Operator #2 Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "namespace": {
                                "____label": "OPM Binding Namespace",
                                "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operator": {
                              "____types": "jsObject",
                              "badTransitionOperatorThrowError": {
                                "____accept": "jsBoolean",
                                "____inValueSet": [
                                  true
                                ]
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "LHEwWfMqQsfOeqyFrPJi0w",
                          "inputTypeVDID": "dSpUrq5UWvhUVQlG-GhM6A",
                          "outputTypeVIID": "CNg4lV4XH5Z6CrL5wgOs_g",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "a_FsRKEn8ZOwr9ucfPpJcg"
                        }
                      ]
                    ]
                  }
                }
              }
            }
          }
        },
        "harnessResponse": {
          "error": null,
          "result": {
            "harnessOptions": {
              "idempotent": true,
              "gitDiffHunkSize": 0
            },
            "harnessDispatch": {
              "54MiSgQdSiukMX4fIZJimg": {
                "rFcPAwRGRsOlJSXBZOdwNA": {
                  "opcToJSON": {
                    "id": "rFcPAwRGRsOlJSXBZOdwNA",
                    "name": "OPC Evaluate Operator Test #4",
                    "description": "Test transition operator failure (bad operator throws exception from bodyFunction).",
                    "options": {
                      "evaluate": {
                        "maxFrames": 16,
                        "firstEvaluation": "constructor"
                      }
                    },
                    "opmMap": {
                      "_vC2O7DGTZ22R5hvxpy0WQ": {
                        "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                        "name": "OPM Test A",
                        "description": "A simple test OPM (force transition operator error - no registered actions/no-plug-in for request).",
                        "opmDataSpec": {
                          "____types": "jsObject"
                        },
                        "steps": {
                          "uninitialized": {
                            "description": "Default starting process step.",
                            "actions": {
                              "enter": [],
                              "exit": []
                            },
                            "transitions": [
                              {
                                "transitionIf": {
                                  "noneSuchOperator": true
                                },
                                "nextStep": "goal"
                              }
                            ]
                          },
                          "goal": {
                            "description": "Test goal state (never reached).",
                            "actions": {
                              "enter": [],
                              "exit": []
                            },
                            "transitions": []
                          }
                        }
                      },
                      "SyCUD3kpQ8mtYbV5A_4BPA": {
                        "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                        "name": "OPM Test B",
                        "description": "A simple test OPM (force transition operator error - operator returns transport error)",
                        "opmDataSpec": {
                          "____types": "jsObject"
                        },
                        "steps": {
                          "uninitialized": {
                            "description": "Default starting process step.",
                            "actions": {
                              "enter": [],
                              "exit": []
                            },
                            "transitions": [
                              {
                                "transitionIf": {
                                  "badTransitionOperatorResponseError": true
                                },
                                "nextStep": "goal"
                              }
                            ]
                          },
                          "goal": {
                            "description": "Test goal state (never reached).",
                            "actions": {
                              "enter": [],
                              "exit": []
                            },
                            "transitions": []
                          }
                        }
                      },
                      "Pkr1EErLSiiHQRt8gCaO0Q": {
                        "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                        "name": "OPM Test C",
                        "description": "A simple test OPM (force transition operator error - operator throws an Error)",
                        "opmDataSpec": {
                          "____types": "jsObject"
                        },
                        "steps": {
                          "uninitialized": {
                            "description": "Default starting process step.",
                            "actions": {
                              "enter": [],
                              "exit": []
                            },
                            "transitions": [
                              {
                                "transitionIf": {
                                  "badTransitionOperatorThrowError": true
                                },
                                "nextStep": "goal"
                              }
                            ]
                          },
                          "goal": {
                            "description": "Test goal state (never reached).",
                            "actions": {
                              "enter": [],
                              "exit": []
                            },
                            "transitions": []
                          }
                        }
                      },
                      "ZFpRfMRETDqavS3EqEuv1Q": {
                        "id": "ZFpRfMRETDqavS3EqEuv1Q",
                        "name": "OPC Test D",
                        "description": "A simple test OPM",
                        "opmDataSpec": {
                          "____types": "jsObject"
                        },
                        "steps": {}
                      }
                    },
                    "opmiSpecPaths": [
                      {
                        "specPath": "~.test",
                        "opmiRef": {
                          "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                          "name": "OPM Test C",
                          "description": "A simple test OPM (force transition operator error - operator throws an Error)",
                          "opmDataSpec": {
                            "____types": "jsObject"
                          },
                          "steps": {
                            "uninitialized": {
                              "description": "Default starting process step.",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": [
                                {
                                  "transitionIf": {
                                    "badTransitionOperatorThrowError": true
                                  },
                                  "nextStep": "goal"
                                }
                              ]
                            },
                            "goal": {
                              "description": "Test goal state (never reached).",
                              "actions": {
                                "enter": [],
                                "exit": []
                              },
                              "transitions": []
                            }
                          }
                        }
                      }
                    ],
                    "ocdTemplateSpec": {
                      "____types": "jsObject",
                      "test": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "____appdsl": {
                          "opm": "Pkr1EErLSiiHQRt8gCaO0Q"
                        }
                      }
                    },
                    "ocdRuntimeSpec": {
                      "____label": "OPC [rFcPAwRGRsOlJSXBZOdwNA::OPC Evaluate Operator Test #4] Observable Controller Data Store",
                      "____description": "OPC [rFcPAwRGRsOlJSXBZOdwNA::OPC Evaluate Operator Test #4] system process runtime state data managed by OPC instance.",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "test": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "____appdsl": {
                          "opm": "Pkr1EErLSiiHQRt8gCaO0Q"
                        },
                        "__opmiStep": {
                          "____accept": "jsString",
                          "____defaultValue": "uninitialized"
                        }
                      }
                    },
                    "ocdi": {
                      "test": {
                        "__opmiStep": "uninitialized"
                      }
                    },
                    "transitionDispatcher": {
                      "filterDescriptor": {
                        "operationID": "hrrsmdvOtyIZlfPnC9GK3Q",
                        "operationName": "Discriminator Filter",
                        "operationDescription": "Routes the request to one of N subfilters based on request signature analysis.",
                        "inputTypeVIID": "eQz5YA1wjQOwsaaAUJLRAA",
                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                        "outputTypeVIID": "JFIPZh3oi4WEMRSdo9TXaA",
                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                        "operationVDID": "3GX0E7mfNVdwCI7t190UtA"
                      },
                      "supportedFilters": [
                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                        "[9tNY7o5GTUGH_xda2GhP-w::OPM In Step Expression Operator]",
                        "[AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1]",
                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                        "[ZdpLuggZRVaMI6aPW1mmUw::Bad Transition Operator #2]",
                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]"
                      ],
                      "options": {
                        "action": "routeRequest"
                      }
                    },
                    "actionDispatcher": {},
                    "opcActorStack": [],
                    "evalCount": 1,
                    "lastEvalResponse": {
                      "error": null,
                      "result": {
                        "evalNumber": 0,
                        "summary": {
                          "counts": {
                            "bindings": 1,
                            "frames": 1,
                            "errors": 1,
                            "transitions": 0
                          }
                        },
                        "evalFrames": [
                          {
                            "summary": {
                              "counts": {
                                "bindings": 1,
                                "transitions": 0,
                                "errors": 1
                              },
                              "reports": {
                                "transitions": [],
                                "errors": [
                                  "yHP1RrAjDF9FH_9LhtLPEw"
                                ]
                              }
                            },
                            "bindings": {
                              "yHP1RrAjDF9FH_9LhtLPEw": {
                                "evalRequest": {
                                  "dataBinding": {
                                    "dataPath": "~.test",
                                    "specPath": "~.test"
                                  },
                                  "initialStep": "uninitialized",
                                  "opmRef": {
                                    "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                    "name": "OPM Test C",
                                    "description": "A simple test OPM (force transition operator error - operator throws an Error)",
                                    "opmDataSpec": {
                                      "____types": "jsObject"
                                    },
                                    "steps": {
                                      "uninitialized": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "badTransitionOperatorThrowError": true
                                            },
                                            "nextStep": "goal"
                                          }
                                        ]
                                      },
                                      "goal": {
                                        "description": "Test goal state (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        },
                                        "transitions": []
                                      }
                                    }
                                  }
                                },
                                "evalResponse": {
                                  "status": "error",
                                  "finishStep": "uninitialized",
                                  "phases": {
                                    "p1_toperator": [
                                      {
                                        "request": {
                                          "context": {
                                            "namespace": "~.test",
                                            "ocdi": {
                                              "test": {
                                                "__opmiStep": "uninitialized"
                                              }
                                            },
                                            "transitionDispatcher": {
                                              "filterDescriptor": {
                                                "operationID": "hrrsmdvOtyIZlfPnC9GK3Q",
                                                "operationName": "Discriminator Filter",
                                                "operationDescription": "Routes the request to one of N subfilters based on request signature analysis.",
                                                "inputTypeVIID": "eQz5YA1wjQOwsaaAUJLRAA",
                                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                "outputTypeVIID": "JFIPZh3oi4WEMRSdo9TXaA",
                                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                "operationVDID": "3GX0E7mfNVdwCI7t190UtA"
                                              },
                                              "supportedFilters": [
                                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                "[9tNY7o5GTUGH_xda2GhP-w::OPM In Step Expression Operator]",
                                                "[AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1]",
                                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                "[ZdpLuggZRVaMI6aPW1mmUw::Bad Transition Operator #2]",
                                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]"
                                              ],
                                              "options": {
                                                "action": "routeRequest"
                                              }
                                            }
                                          },
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        },
                                        "response": {
                                          "error": "TransitionOperator threw an illegal exception that was handled by OPC: Error: This is a forced exception thrown from a transition operator's body function.\n    at Object.bodyFunction (/home/cdr/code/encapsule/holistic/TESTS/holarchy-package-tests/fixture-top-examples.js:34:19)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38496)\n    at Object.bodyFunction (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:65238)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38496)\n    at Object.bodyFunction (/home/cdr/code/encapsule/holistic/PLATFORM/holarchy/lib/filters/opc-method-evaluate-filter.js:346:74)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38496)\n    at ObservableProcessController._evaluate (/home/cdr/code/encapsule/holistic/PLATFORM/holarchy/lib/ObservableProcessController.js:231:47)\n    at new ObservableProcessController (/home/cdr/code/encapsule/holistic/PLATFORM/holarchy/lib/ObservableProcessController.js:68:31)\n    at Object.harnessBodyFunction [as bodyFunction] (/home/cdr/code/encapsule/holistic/PLATFORM/holodeck-assets/holarchy/harnesses/harness-ObservableProcessController.js:76:23)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38496)"
                                        }
                                      }
                                    ],
                                    "p2_exit": [],
                                    "p3_enter": [],
                                    "p4_finalize": null
                                  },
                                  "errors": {
                                    "p1_toperator": 1,
                                    "p2_exit": 0,
                                    "p3_enter": 0,
                                    "p4_finalize": 0,
                                    "total": 1
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "constructionWarnings": [
                      "WARNING: No ControllerAction class instances have been registered!"
                    ]
                  },
                  "actionEvaluations": []
                }
              }
            }
          }
        }
      }
    }
  }
}
