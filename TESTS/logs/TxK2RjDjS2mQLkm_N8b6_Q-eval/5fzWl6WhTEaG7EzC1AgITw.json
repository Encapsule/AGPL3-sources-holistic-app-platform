{
  "dosRgxmiR66ongCbJB78ow": {
    "bvj2u51Uw5_SD1TRZNpwXA": {
      "5fzWl6WhTEaG7EzC1AgITw": {
        "harnessRequest": {
          "id": "5fzWl6WhTEaG7EzC1AgITw",
          "name": "OPC Evaluate Exit Action Test #2",
          "description": "Test controller action failure (bad request message).",
          "vectorRequest": {
            "holistic": {
              "holarchy": {
                "ObservableProcessController": {
                  "constructorRequest": {
                    "id": "5fzWl6WhTEaG7EzC1AgITw",
                    "name": "OPC Evaluate Exit Action Test #2",
                    "description": "Test controller action failure (bad request message).",
                    "ocdTemplateSpec": {
                      "____types": "jsObject",
                      "test": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "____appdsl": {
                          "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                        }
                      }
                    },
                    "abstractProcessModelSets": [
                      [
                        {
                          "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                          "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                          "name": "OPM Eval P2 Test #1",
                          "description": "A simple test OPM (force controller action exit error - bad message)"
                        },
                        {
                          "id": "P-uhpNlrTseMNDG3D9ahRA",
                          "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                          "name": "OPM Eval P2 Test #2",
                          "description": "A simple test OPM (force controller action exit error - action transport error)"
                        },
                        {
                          "id": "alBMdhnYSbijGj64jxm92g",
                          "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                          "name": "OPM Eval P2 Test #3",
                          "description": "A simple test OPM (force controller action exit - action exception)"
                        }
                      ]
                    ],
                    "transitionOperatorSets": [
                      [
                        {
                          "id": "YgABX95wR86GCYrYaDLISA",
                          "vdid": "5Ebtc8mARWrvCY6U_wzdDA",
                          "name": "Logical AND",
                          "description": "Returns Boolean true iff all suboperations return true."
                        },
                        {
                          "id": "TLSHkl73SO-utuzM7dyN2g",
                          "vdid": "ASh3z9ynLmUqRJElxWHVjQ",
                          "name": "Logical NOT",
                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                        },
                        {
                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                          "vdid": "FAh08f8CZQHnj-Pkilu-rw",
                          "name": "Logical OR",
                          "description": "Returns Boolean true iff any suboperations return true."
                        },
                        {
                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                          "vdid": "NmKPVm8o5IAXQE-GgWcCDA",
                          "name": "Logical TRUE",
                          "description": "Always returns Boolean true. Used typically to unilaterally transition a cell process from one step to another (e.g. always, or as a default after many other transition rules)."
                        },
                        {
                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                          "name": "OCD Array Length Equal to Value",
                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                        },
                        {
                          "id": "UeLs9PcASwuC7KR190eYhA",
                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                          "name": "OCD Boolean Flag Is Set",
                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                        },
                        {
                          "id": "2w7n6KxdR8mdIliePJesLQ",
                          "vdid": "LxdR4ZycXiKfJOoUpmcnUg",
                          "name": "OCD Namespace A ? B Value Comparison",
                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator. Note either A and/or B may be specified by value or path."
                        },
                        {
                          "id": "pj9a6tQpSXWp7WZZ8VbKLQ",
                          "vdid": "zquEh0gwCPP_d9hmBD3uAQ",
                          "name": "OCD Namespace Is Array Empty",
                          "description": "Returns Boolean true iff the indicated OCD namespace value is an array AND value.length !== 0."
                        },
                        {
                          "id": "ggsavKiARsq7rjwn-lxdfA",
                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                          "name": "OCD Namespace Is Greater Than Value",
                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                        },
                        {
                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                          "name": "OCD Namespace Is Identical To Value",
                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                        },
                        {
                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                          "name": "OCD Namespace Is Less Than Value",
                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                        },
                        {
                          "id": "fS5liuD1RBSdaPBEhsoxXw",
                          "vdid": "DmRYzsWPhe-U6ZWFhMH9-w",
                          "name": "OCD Namespace Is Map Keyless",
                          "description": "Returns Boolean true iff the indicated OCD namespace is declared as a map in the OCD filter spec AND the OCD value is an object AND Object.key(value) !== 0."
                        },
                        {
                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                          "name": "OCD Namespace Is Truthy",
                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                        }
                      ]
                    ],
                    "controllerActionSets": [
                      [
                        {
                          "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                          "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                          "name": "Bad Controller Action #1",
                          "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                        },
                        {
                          "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                          "vdid": "cZ9sErkaqoN650lg48aVxg",
                          "name": "Bad Controller Action #2",
                          "description": "A ControllerAction instance that is hard-wired to throw an exception."
                        }
                      ]
                    ]
                  }
                }
              }
            }
          }
        },
        "harnessResponse": {
          "error": null,
          "result": {
            "harnessOptions": {
              "idempotent": true,
              "gitDiffHunkSize": 0
            },
            "harnessDispatch": {
              "54MiSgQdSiukMX4fIZJimg": {
                "5fzWl6WhTEaG7EzC1AgITw": {
                  "opcToJSON": {
                    "id": "5fzWl6WhTEaG7EzC1AgITw",
                    "name": "OPC Evaluate Exit Action Test #2",
                    "description": "Test controller action failure (bad request message).",
                    "options": {
                      "evaluate": {
                        "maxFrames": 64,
                        "firstEvaluation": "constructor"
                      }
                    },
                    "apmMap": {
                      "Rgt3dz-6Ra-zqpbnpBrJDg": {
                        "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                        "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                        "name": "OPM Eval P2 Test #1",
                        "description": "A simple test OPM (force controller action exit error - bad message)"
                      },
                      "P-uhpNlrTseMNDG3D9ahRA": {
                        "id": "P-uhpNlrTseMNDG3D9ahRA",
                        "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                        "name": "OPM Eval P2 Test #2",
                        "description": "A simple test OPM (force controller action exit error - action transport error)"
                      },
                      "alBMdhnYSbijGj64jxm92g": {
                        "id": "alBMdhnYSbijGj64jxm92g",
                        "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                        "name": "OPM Eval P2 Test #3",
                        "description": "A simple test OPM (force controller action exit - action exception)"
                      }
                    },
                    "opmiSpecPaths": [
                      {
                        "specPath": "~.test",
                        "opmiRef": {
                          "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                          "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                          "name": "OPM Eval P2 Test #1",
                          "description": "A simple test OPM (force controller action exit error - bad message)"
                        }
                      }
                    ],
                    "ocdTemplateSpec": {
                      "____types": "jsObject",
                      "test": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "____appdsl": {
                          "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                        }
                      }
                    },
                    "ocdRuntimeSpec": {
                      "____label": "OPC [5fzWl6WhTEaG7EzC1AgITw::OPC Evaluate Exit Action Test #2] Observable Controller Data Store",
                      "____description": "OPC [5fzWl6WhTEaG7EzC1AgITw::OPC Evaluate Exit Action Test #2] system process runtime state data managed by OPC instance.",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "test": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "____appdsl": {
                          "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                        },
                        "__apmiStep": {
                          "____accept": "jsString",
                          "____defaultValue": "uninitialized"
                        }
                      }
                    },
                    "ocdi": {
                      "test": {
                        "__apmiStep": "uninitialized"
                      }
                    },
                    "transitionDispatcher": {
                      "filterDescriptor": {
                        "operationID": "LzxF6VceaAZvMbNFR5pKIQ",
                        "operationName": "Discriminator Filter",
                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                        "inputTypeVIID": "nkaNiXrYBBFc4RBJeA-Rqg",
                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                        "outputTypeVIID": "4DQl6vA8cSzzh516dO8Wwg",
                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                        "operationVDID": "Ndb0E63yNVd42Y7tBrEUtA"
                      },
                      "supportedFilters": [
                        "[YgABX95wR86GCYrYaDLISA::Logical AND]",
                        "[TLSHkl73SO-utuzM7dyN2g::Logical NOT]",
                        "[0JIva4IFSm6Xm7i38g8uUA::Logical OR]",
                        "[e89cwnP4Qd6MocAhzdOJgw::Logical TRUE]",
                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]",
                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                        "[2w7n6KxdR8mdIliePJesLQ::OCD Namespace A ? B Value Comparison]",
                        "[pj9a6tQpSXWp7WZZ8VbKLQ::OCD Namespace Is Array Empty]",
                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                        "[fS5liuD1RBSdaPBEhsoxXw::OCD Namespace Is Map Keyless]",
                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]"
                      ],
                      "requestSpace": {
                        "name": "Discriminator Decission Tree Model",
                        "description": "Models the combined input filter specifications of Filter ID's: [YgABX95wR86GCYrYaDLISA, TLSHkl73SO-utuzM7dyN2g, 0JIva4IFSm6Xm7i38g8uUA, e89cwnP4Qd6MocAhzdOJgw, oaF3-dXwQkusjD3I2o9-8g, UeLs9PcASwuC7KR190eYhA, 2w7n6KxdR8mdIliePJesLQ, pj9a6tQpSXWp7WZZ8VbKLQ, ggsavKiARsq7rjwn-lxdfA, k7THIKKDQMKOac1Rxh9tEQ, XxX_a1sQS1OlJbWAYfx6tQ, fS5liuD1RBSdaPBEhsoxXw, kD1PcgqYQlm7fJatNG2ZsA].",
                        "vlist": [
                          {
                            "u": "request",
                            "p": {
                              "color": "green",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "filters1": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject)",
                            "p": {
                              "filterSpecPath": "request",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject)",
                            "p": {
                              "filterSpecPath": "request.context",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsObject",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject).apmBindingPath(jsString)",
                            "p": {
                              "filterSpecPath": "request.context.apmBindingPath",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsString",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject).ocdi(jsObject)",
                            "p": {
                              "filterSpecPath": "request.context.ocdi",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsObject",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject).transitionDispatcher(jsObject)",
                            "p": {
                              "filterSpecPath": "request.context.transitionDispatcher",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA",
                                "2w7n6KxdR8mdIliePJesLQ",
                                "TLSHkl73SO-utuzM7dyN2g",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "YgABX95wR86GCYrYaDLISA",
                                "e89cwnP4Qd6MocAhzdOJgw",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsObject",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).and(jsArray)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.and",
                              "filters": [
                                "YgABX95wR86GCYrYaDLISA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsArray",
                              "filters1": [
                                "YgABX95wR86GCYrYaDLISA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).not(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.not",
                              "filters": [
                                "TLSHkl73SO-utuzM7dyN2g"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "TLSHkl73SO-utuzM7dyN2g"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).or(jsArray)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.or",
                              "filters": [
                                "0JIva4IFSm6Xm7i38g8uUA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsArray",
                              "filters1": [
                                "0JIva4IFSm6Xm7i38g8uUA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).always(jsBoolean)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.always",
                              "filters": [
                                "e89cwnP4Qd6MocAhzdOJgw"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsBoolean",
                              "filters1": [
                                "e89cwnP4Qd6MocAhzdOJgw"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ",
                                "UeLs9PcASwuC7KR190eYhA",
                                "XxX_a1sQS1OlJbWAYfx6tQ",
                                "fS5liuD1RBSdaPBEhsoxXw",
                                "ggsavKiARsq7rjwn-lxdfA",
                                "k7THIKKDQMKOac1Rxh9tEQ",
                                "kD1PcgqYQlm7fJatNG2ZsA",
                                "oaF3-dXwQkusjD3I2o9-8g",
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.array",
                              "filters": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.array.path",
                              "filters": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.array.length",
                              "filters": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject).equalToValue(jsNumber)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.array.length.equalToValue",
                              "filters": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsNumber",
                              "filters1": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject).equalToValue(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.array.length.equalToValue",
                              "filters": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "oaF3-dXwQkusjD3I2o9-8g"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isBooleanFlagSet(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isBooleanFlagSet",
                              "filters": [
                                "UeLs9PcASwuC7KR190eYhA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "UeLs9PcASwuC7KR190eYhA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isBooleanFlagSet(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isBooleanFlagSet.path",
                              "filters": [
                                "UeLs9PcASwuC7KR190eYhA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "UeLs9PcASwuC7KR190eYhA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.compare",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.compare.values",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject).a(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.compare.values.a",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject).b(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.compare.values.b",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject).operator(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.compare.values.operator",
                              "filters": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "2w7n6KxdR8mdIliePJesLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).arrayIsEmpty(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.arrayIsEmpty",
                              "filters": [
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).arrayIsEmpty(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.arrayIsEmpty.path",
                              "filters": [
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "pj9a6tQpSXWp7WZZ8VbKLQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceGreaterThanValue",
                              "filters": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceGreaterThanValue.path",
                              "filters": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject).value(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceGreaterThanValue.value",
                              "filters": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject).value(jsNumber)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceGreaterThanValue.value",
                              "filters": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsNumber",
                              "filters1": [
                                "ggsavKiARsq7rjwn-lxdfA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceIdenticalToValue",
                              "filters": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceIdenticalToValue.path",
                              "filters": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject).value(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceIdenticalToValue.value",
                              "filters": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject).value(jsNumber)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceIdenticalToValue.value",
                              "filters": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsNumber",
                              "filters1": [
                                "k7THIKKDQMKOac1Rxh9tEQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceLessThanValue",
                              "filters": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceLessThanValue.path",
                              "filters": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject).value(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceLessThanValue.value",
                              "filters": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject).value(jsNumber)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceLessThanValue.value",
                              "filters": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsNumber",
                              "filters1": [
                                "XxX_a1sQS1OlJbWAYfx6tQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).mapIsKeyless(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.mapIsKeyless",
                              "filters": [
                                "fS5liuD1RBSdaPBEhsoxXw"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "fS5liuD1RBSdaPBEhsoxXw"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).mapIsKeyless(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.mapIsKeyless.path",
                              "filters": [
                                "fS5liuD1RBSdaPBEhsoxXw"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "fS5liuD1RBSdaPBEhsoxXw"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceTruthy(jsObject)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceTruthy",
                              "filters": [
                                "kD1PcgqYQlm7fJatNG2ZsA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "kD1PcgqYQlm7fJatNG2ZsA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceTruthy(jsObject).path(jsString)",
                            "p": {
                              "filterSpecPath": "request.operatorRequest.holarchy.cm.operators.ocd.isNamespaceTruthy.path",
                              "filters": [
                                "kD1PcgqYQlm7fJatNG2ZsA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsString",
                              "filters1": [
                                "kD1PcgqYQlm7fJatNG2ZsA"
                              ]
                            }
                          }
                        ],
                        "elist": [
                          {
                            "e": {
                              "u": "request",
                              "v": "request(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject)",
                              "v": "request(jsObject).context(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).context(jsObject)",
                              "v": "request(jsObject).context(jsObject).apmBindingPath(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).context(jsObject)",
                              "v": "request(jsObject).context(jsObject).ocdi(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).context(jsObject)",
                              "v": "request(jsObject).context(jsObject).transitionDispatcher(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).and(jsArray)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).not(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).or(jsArray)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).always(jsBoolean)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isBooleanFlagSet(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).arrayIsEmpty(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).mapIsKeyless(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceTruthy(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject).equalToValue(jsNumber)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).array(jsObject).length(jsObject).equalToValue(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isBooleanFlagSet(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isBooleanFlagSet(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject).a(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject).b(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).compare(jsObject).values(jsObject).operator(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).arrayIsEmpty(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).arrayIsEmpty(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject).value(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceGreaterThanValue(jsObject).value(jsNumber)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject).value(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceIdenticalToValue(jsObject).value(jsNumber)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject).value(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceLessThanValue(jsObject).value(jsNumber)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).mapIsKeyless(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).mapIsKeyless(jsObject).path(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceTruthy(jsObject)",
                              "v": "request(jsObject).operatorRequest(jsObject).holarchy(jsObject).cm(jsObject).operators(jsObject).ocd(jsObject).isNamespaceTruthy(jsObject).path(jsString)"
                            }
                          }
                        ]
                      },
                      "options": {
                        "action": "getFilter"
                      }
                    },
                    "transitionDispatcherFilterMap": {
                      "YgABX95wR86GCYrYaDLISA": {
                        "filterDescriptor": {
                          "operationID": "YgABX95wR86GCYrYaDLISA",
                          "operationName": "Logical AND",
                          "operationDescription": "Returns Boolean true iff all suboperations return true.",
                          "inputFilterSpec": {
                            "____label": "Logical AND Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "and": {
                                "____types": "jsArray",
                                "operandOperatorVariant": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                          "inputTypeVDID": "aZ0313jYspKqFYbxLUobFA",
                          "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "9jcTRLaZgJMBefycqJ3Wcg"
                        }
                      },
                      "TLSHkl73SO-utuzM7dyN2g": {
                        "filterDescriptor": {
                          "operationID": "TLSHkl73SO-utuzM7dyN2g",
                          "operationName": "Logical NOT",
                          "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                          "inputFilterSpec": {
                            "____label": "Logical NOT Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "not": {
                                "____accept": "jsObject"
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                          "inputTypeVDID": "b3mPoTvLTsPNNEE5vSl4Ig",
                          "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "MSNYRHRjqZPIbkKcBH-Scg"
                        }
                      },
                      "0JIva4IFSm6Xm7i38g8uUA": {
                        "filterDescriptor": {
                          "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                          "operationName": "Logical OR",
                          "operationDescription": "Returns Boolean true iff any suboperations return true.",
                          "inputFilterSpec": {
                            "____label": "Logical OR Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "or": {
                                "____types": "jsArray",
                                "operandOperatorVariant": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                          "inputTypeVDID": "-JaOoCpSpMXUBcCaKY9fVw",
                          "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "4CecRIW4PJNmp1qcOG6ncg"
                        }
                      },
                      "e89cwnP4Qd6MocAhzdOJgw": {
                        "filterDescriptor": {
                          "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                          "operationName": "Logical TRUE",
                          "operationDescription": "Always returns Boolean true. Used typically to unilaterally transition a cell process from one step to another (e.g. always, or as a default after many other transition rules).",
                          "inputFilterSpec": {
                            "____label": "Logical TRUE Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "always": {
                                "____accept": "jsBoolean",
                                "____inValueSet": [
                                  true
                                ]
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                          "inputTypeVDID": "C5XIeECWu2mxDmCCOEFunQ",
                          "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "7g4dROZHqpP8SX2c1AJhcg"
                        }
                      },
                      "oaF3-dXwQkusjD3I2o9-8g": {
                        "filterDescriptor": {
                          "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                          "operationName": "OCD Array Length Equal to Value",
                          "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                          "inputFilterSpec": {
                            "____label": "OCD Array Length Equal to Value Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "array": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        },
                                        "length": {
                                          "____types": "jsObject",
                                          "equalToValue": {
                                            "____accept": [
                                              "jsNumber",
                                              "jsString"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                          "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                          "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                        }
                      },
                      "UeLs9PcASwuC7KR190eYhA": {
                        "filterDescriptor": {
                          "operationID": "UeLs9PcASwuC7KR190eYhA",
                          "operationName": "OCD Boolean Flag Is Set",
                          "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                          "inputFilterSpec": {
                            "____label": "OCD Boolean Flag Is Set Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "isBooleanFlagSet": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                          "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                          "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                        }
                      },
                      "2w7n6KxdR8mdIliePJesLQ": {
                        "filterDescriptor": {
                          "operationID": "2w7n6KxdR8mdIliePJesLQ",
                          "operationName": "OCD Namespace A ? B Value Comparison",
                          "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator. Note either A and/or B may be specified by value or path.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace A ? B Value Comparison Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "compare": {
                                        "____types": "jsObject",
                                        "values": {
                                          "____types": "jsObject",
                                          "a": {
                                            "____label": "Operand A",
                                            "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                            "____types": "jsObject",
                                            "value": {
                                              "____accept": [
                                                "jsUndefined",
                                                "jsNull",
                                                "jsString",
                                                "jsNumber",
                                                "jsBoolean"
                                              ]
                                            },
                                            "path": {
                                              "____accept": [
                                                "jsUndefined",
                                                "jsString"
                                              ]
                                            }
                                          },
                                          "b": {
                                            "____label": "Operand B",
                                            "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                            "____types": "jsObject",
                                            "value": {
                                              "____accept": [
                                                "jsUndefined",
                                                "jsNull",
                                                "jsString",
                                                "jsNumber",
                                                "jsBoolean"
                                              ]
                                            },
                                            "path": {
                                              "____accept": [
                                                "jsUndefined",
                                                "jsString"
                                              ]
                                            }
                                          },
                                          "operator": {
                                            "____label": "Comparison Operator",
                                            "____description": "A string enum indicating the comparison operator to use.",
                                            "____accept": "jsString",
                                            "____inValueSet": [
                                              "===",
                                              "==",
                                              "<",
                                              "<=",
                                              ">",
                                              ">="
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                          "inputTypeVDID": "we4gsONAq8XLVofHZjgx5w",
                          "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "l60yRNc4cZMrOtqcKqP9cg"
                        }
                      },
                      "pj9a6tQpSXWp7WZZ8VbKLQ": {
                        "filterDescriptor": {
                          "operationID": "pj9a6tQpSXWp7WZZ8VbKLQ",
                          "operationName": "OCD Namespace Is Array Empty",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace value is an array AND value.length !== 0.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Array Empty Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "arrayIsEmpty": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "8WDm-CC4lQnnKYro89MK2g",
                          "inputTypeVDID": "Q-Htr-yHRojgL8p4HkS4bw",
                          "outputTypeVIID": "lcDQLsyLvx_9RfG-kyHwhA",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "53cpRDV7MZOYdMOcMW07cg"
                        }
                      },
                      "ggsavKiARsq7rjwn-lxdfA": {
                        "filterDescriptor": {
                          "operationID": "ggsavKiARsq7rjwn-lxdfA",
                          "operationName": "OCD Namespace Is Greater Than Value",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Greater Than Value Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "isNamespaceGreaterThanValue": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        },
                                        "value": {
                                          "____accept": [
                                            "jsString",
                                            "jsNumber"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                          "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                          "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                        }
                      },
                      "k7THIKKDQMKOac1Rxh9tEQ": {
                        "filterDescriptor": {
                          "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                          "operationName": "OCD Namespace Is Identical To Value",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Identical To Value Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "isNamespaceIdenticalToValue": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        },
                                        "value": {
                                          "____accept": [
                                            "jsString",
                                            "jsNumber"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                          "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                          "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                        }
                      },
                      "XxX_a1sQS1OlJbWAYfx6tQ": {
                        "filterDescriptor": {
                          "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                          "operationName": "OCD Namespace Is Less Than Value",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Less Than Value Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "isNamespaceLessThanValue": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        },
                                        "value": {
                                          "____accept": [
                                            "jsString",
                                            "jsNumber"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                          "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                          "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                        }
                      },
                      "fS5liuD1RBSdaPBEhsoxXw": {
                        "filterDescriptor": {
                          "operationID": "fS5liuD1RBSdaPBEhsoxXw",
                          "operationName": "OCD Namespace Is Map Keyless",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace is declared as a map in the OCD filter spec AND the OCD value is an object AND Object.key(value) !== 0.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Map Keyless Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "mapIsKeyless": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "AhSGTfAi0eXWxin8HSY6dA",
                          "inputTypeVDID": "JOHtpQqHRiCYL8pNDES4Rg",
                          "outputTypeVIID": "D2SJBJGJrPn0GyV2XgoWJw",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "U6xLRDGfAJP2ayWcc4jWcg"
                        }
                      },
                      "kD1PcgqYQlm7fJatNG2ZsA": {
                        "filterDescriptor": {
                          "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                          "operationName": "OCD Namespace Is Truthy",
                          "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                          "inputFilterSpec": {
                            "____label": "OCD Namespace Is Truthy Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "transitionDispatcher": {
                                "____label": "OPC Transition Dispatcher",
                                "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                "____accept": "jsObject"
                              }
                            },
                            "operatorRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "cm": {
                                  "____types": "jsObject",
                                  "operators": {
                                    "____types": "jsObject",
                                    "ocd": {
                                      "____types": "jsObject",
                                      "isNamespaceTruthy": {
                                        "____types": "jsObject",
                                        "path": {
                                          "____accept": "jsString"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____accept": "jsBoolean"
                          },
                          "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                          "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                          "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                          "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                          "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                        }
                      }
                    },
                    "actionDispatcher": {
                      "filterDescriptor": {
                        "operationID": "2sVDyMo_uJ_9ZgBnJIgpcw",
                        "operationName": "Discriminator Filter",
                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                        "inputTypeVIID": "HfsHiVBkFA5Or5ZnX8-WLA",
                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                        "outputTypeVIID": "anTzTx-5cOwbrT0XLTf0dw",
                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                        "operationVDID": "Rb30E1ITNVcx3Y7t-DIUtA"
                      },
                      "supportedFilters": [
                        "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                        "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]",
                        "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                        "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                      ],
                      "requestSpace": {
                        "name": "Discriminator Decission Tree Model",
                        "description": "Models the combined input filter specifications of Filter ID's: [NpfrgiF1QTS6qp9vAMv4Dw, V4-doRzDTVyYFtHMM8Z2jQ, KX0V_aQ3RzG01tzBS24MGw, S1GqYjTtSQazSxkIL9vtpA].",
                        "vlist": [
                          {
                            "u": "request",
                            "p": {
                              "color": "green",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "filters1": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject)",
                            "p": {
                              "filterSpecPath": "request",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject)",
                            "p": {
                              "filterSpecPath": "request.context",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsObject",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject)",
                            "p": {
                              "filterSpecPath": "request.actionRequest",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject).apmBindingPath(jsString)",
                            "p": {
                              "filterSpecPath": "request.context.apmBindingPath",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsString",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject).ocdi(jsObject)",
                            "p": {
                              "filterSpecPath": "request.context.ocdi",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsObject",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).context(jsObject).act(jsFunction)",
                            "p": {
                              "filterSpecPath": "request.context.act",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "NpfrgiF1QTS6qp9vAMv4Dw",
                                "S1GqYjTtSQazSxkIL9vtpA",
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "black",
                              "typeConstraint": "jsFunction",
                              "filters1": []
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject).badControllerActionResponseError(jsBoolean)",
                            "p": {
                              "filterSpecPath": "request.actionRequest.badControllerActionResponseError",
                              "filters": [
                                "NpfrgiF1QTS6qp9vAMv4Dw"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsBoolean",
                              "filters1": [
                                "NpfrgiF1QTS6qp9vAMv4Dw"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject).badControllerActionThrowError(jsBoolean)",
                            "p": {
                              "filterSpecPath": "request.actionRequest.badControllerActionThrowError",
                              "filters": [
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsBoolean",
                              "filters1": [
                                "V4-doRzDTVyYFtHMM8Z2jQ"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject)",
                            "p": {
                              "filterSpecPath": "request.actionRequest.holarchy",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "S1GqYjTtSQazSxkIL9vtpA"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "S1GqYjTtSQazSxkIL9vtpA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject)",
                            "p": {
                              "filterSpecPath": "request.actionRequest.holarchy.opc",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "S1GqYjTtSQazSxkIL9vtpA"
                              ],
                              "color": "green",
                              "typeConstraint": "jsObject",
                              "filters1": [
                                "KX0V_aQ3RzG01tzBS24MGw",
                                "S1GqYjTtSQazSxkIL9vtpA"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject).noop(jsBoolean)",
                            "p": {
                              "filterSpecPath": "request.actionRequest.holarchy.opc.noop",
                              "filters": [
                                "KX0V_aQ3RzG01tzBS24MGw"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsBoolean",
                              "filters1": [
                                "KX0V_aQ3RzG01tzBS24MGw"
                              ]
                            }
                          },
                          {
                            "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject).status(jsBoolean)",
                            "p": {
                              "filterSpecPath": "request.actionRequest.holarchy.opc.status",
                              "filters": [
                                "S1GqYjTtSQazSxkIL9vtpA"
                              ],
                              "color": "gold",
                              "typeConstraint": "jsBoolean",
                              "filters1": [
                                "S1GqYjTtSQazSxkIL9vtpA"
                              ]
                            }
                          }
                        ],
                        "elist": [
                          {
                            "e": {
                              "u": "request",
                              "v": "request(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject)",
                              "v": "request(jsObject).context(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).context(jsObject)",
                              "v": "request(jsObject).context(jsObject).apmBindingPath(jsString)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).context(jsObject)",
                              "v": "request(jsObject).context(jsObject).ocdi(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).context(jsObject)",
                              "v": "request(jsObject).context(jsObject).act(jsFunction)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).actionRequest(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject).badControllerActionResponseError(jsBoolean)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).actionRequest(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject).badControllerActionThrowError(jsBoolean)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).actionRequest(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject).holarchy(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject).noop(jsBoolean)"
                            }
                          },
                          {
                            "e": {
                              "u": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject)",
                              "v": "request(jsObject).actionRequest(jsObject).holarchy(jsObject).opc(jsObject).status(jsBoolean)"
                            }
                          }
                        ]
                      },
                      "options": {
                        "action": "getFilter"
                      }
                    },
                    "actionDispatcherFilterMap": {
                      "NpfrgiF1QTS6qp9vAMv4Dw": {
                        "filterDescriptor": {
                          "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                          "operationName": "Bad Controller Action #1",
                          "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                          "inputFilterSpec": {
                            "____label": "Bad Controller Action #1 Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "act": {
                                "____label": "OPC.act Method",
                                "____description": "A reference to ObservableProcessController.act method.",
                                "____accept": "jsFunction"
                              }
                            },
                            "actionRequest": {
                              "____types": "jsObject",
                              "badControllerActionResponseError": {
                                "____accept": "jsBoolean",
                                "____inValueSet": [
                                  true
                                ]
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____label": "No Result (Default)",
                            "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                            "____accept": "jsUndefined"
                          },
                          "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                          "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                          "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                          "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                          "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                        }
                      },
                      "V4-doRzDTVyYFtHMM8Z2jQ": {
                        "filterDescriptor": {
                          "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                          "operationName": "Bad Controller Action #2",
                          "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                          "inputFilterSpec": {
                            "____label": "Bad Controller Action #2 Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "act": {
                                "____label": "OPC.act Method",
                                "____description": "A reference to ObservableProcessController.act method.",
                                "____accept": "jsFunction"
                              }
                            },
                            "actionRequest": {
                              "____types": "jsObject",
                              "badControllerActionThrowError": {
                                "____accept": "jsBoolean",
                                "____inValueSet": [
                                  true
                                ]
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____label": "No Result (Default)",
                            "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                            "____accept": "jsUndefined"
                          },
                          "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                          "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                          "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                          "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                          "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                        }
                      },
                      "KX0V_aQ3RzG01tzBS24MGw": {
                        "filterDescriptor": {
                          "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                          "operationName": "OPC Intrinsic NOOP Action",
                          "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                          "inputFilterSpec": {
                            "____label": "OPC Intrinsic NOOP Action Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "act": {
                                "____label": "OPC.act Method",
                                "____description": "A reference to ObservableProcessController.act method.",
                                "____accept": "jsFunction"
                              }
                            },
                            "actionRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "opc": {
                                  "____types": "jsObject",
                                  "noop": {
                                    "____accept": "jsBoolean",
                                    "____inValueSet": [
                                      true
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____opaque": true
                          },
                          "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                          "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                          "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                          "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                          "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                        }
                      },
                      "S1GqYjTtSQazSxkIL9vtpA": {
                        "filterDescriptor": {
                          "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                          "operationName": "OPC Intrinsic Status Action",
                          "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                          "inputFilterSpec": {
                            "____label": "OPC Intrinsic Status Action Request",
                            "____types": "jsObject",
                            "context": {
                              "____label": "OPC Context Descriptor",
                              "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                              "____types": "jsObject",
                              "apmBindingPath": {
                                "____label": "APM Binding Path",
                                "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                "____accept": "jsString"
                              },
                              "ocdi": {
                                "____label": "OCD Store Instance",
                                "____description": "A reference to the OCD store instance managed by OPC.",
                                "____accept": "jsObject"
                              },
                              "act": {
                                "____label": "OPC.act Method",
                                "____description": "A reference to ObservableProcessController.act method.",
                                "____accept": "jsFunction"
                              }
                            },
                            "actionRequest": {
                              "____types": "jsObject",
                              "holarchy": {
                                "____types": "jsObject",
                                "opc": {
                                  "____types": "jsObject",
                                  "status": {
                                    "____accept": "jsBoolean",
                                    "____inValueSet": [
                                      true
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "outputFilterSpec": {
                            "____opaque": true
                          },
                          "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                          "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                          "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                          "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                          "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                        }
                      }
                    },
                    "opcActorStack": [],
                    "evalCount": 1,
                    "lastEvalResponse": {
                      "error": null,
                      "result": {
                        "evalNumber": 0,
                        "summary": {
                          "counts": {
                            "bindings": 1,
                            "frames": 1,
                            "errors": 1,
                            "transitions": 0
                          }
                        },
                        "evalFrames": [
                          {
                            "summary": {
                              "counts": {
                                "bindings": 1,
                                "transitions": 0,
                                "errors": 1
                              },
                              "reports": {
                                "transitions": [],
                                "errors": [
                                  "yHP1RrAjDF9FH_9LhtLPEw"
                                ]
                              }
                            },
                            "bindings": {
                              "yHP1RrAjDF9FH_9LhtLPEw": {
                                "evalRequest": {
                                  "dataBinding": {
                                    "dataPath": "~.test",
                                    "specPath": "~.test"
                                  },
                                  "initialStep": "uninitialized",
                                  "apmRef": {
                                    "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                    "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                    "name": "OPM Eval P2 Test #1",
                                    "description": "A simple test OPM (force controller action exit error - bad message)"
                                  }
                                },
                                "evalResponse": {
                                  "status": "error",
                                  "finishStep": "uninitialized",
                                  "phases": {
                                    "p1_toperator": [
                                      {
                                        "request": {
                                          "context": {
                                            "apmBindingPath": "~.test"
                                          },
                                          "operatorRequest": {
                                            "always": true
                                          }
                                        },
                                        "response": {
                                          "error": null,
                                          "result": true
                                        }
                                      }
                                    ],
                                    "p2_exit": [
                                      {
                                        "request": {
                                          "noneSuchControllerAction": true
                                        },
                                        "response": {
                                          "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Invalid action request cannot be routed to any ControllerAction plug-in delegate."
                                        }
                                      }
                                    ],
                                    "p3_enter": [],
                                    "p4_finalize": null
                                  },
                                  "errors": {
                                    "p1_toperator": 0,
                                    "p2_exit": 1,
                                    "p3_enter": 0,
                                    "p4_finalize": 0,
                                    "total": 1
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "constructionWarnings": []
                  },
                  "actionEvaluations": []
                }
              }
            }
          }
        }
      }
    }
  }
}
