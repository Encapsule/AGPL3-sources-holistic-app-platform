{
  "dosRgxmiR66ongCbJB78ow": {
    "XsVRVdrxTNvzPj7OQrDwAg": {
      "zUoUas3CTj2HLDfpNf4NTw": {
        "harnessRequest": {
          "id": "zUoUas3CTj2HLDfpNf4NTw",
          "name": "d2r2/React Client Output Processor OPM #1",
          "description": "Attempt to instantiate the current d2r2/React Client Display Adaptor OPM declaration via our test harness.",
          "vectorRequest": {
            "holistic": {
              "holarchy": {
                "ObservableProcessModel": {
                  "constructorRequest": {
                    "id": "IxoJ83u0TXmG7PLUYBvsyg",
                    "name": "d2r2/React Client Display Adaptor",
                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                    "opmDataSpec": {
                      "____label": "d2r2/React Client Display Adaptor Memory",
                      "____description": "Shared memory definition for the d2r2/React Client Display Adaptor OPM.",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "inputs": {
                        "____label": "Adaptor Inputs",
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "ComponentRouter": {
                          "____label": "d2r2 <ComponentRouter/>",
                          "____description": "A reference to previously-constructed <ComponentRouter/> instance (a React component that implements @encapsule/d2r2 dynamic layout protocol).",
                          "____accept": [
                            "jsNull",
                            "jsFunction"
                          ],
                          "____defaultValue": null
                        },
                        "DOMElement": {
                          "____label": "d2r2 Target DOM Element",
                          "____description": "A reference to the DOM element to be be managed by the d2r2/React Client Display Adaptor (obtained with document.getElementById).",
                          "____opaque": true,
                          "____defaultValue": null
                        },
                        "clock": {
                          "____label": "React Output Processor Clock",
                          "____description": "A frame latch used to trigger dynamic rerendering of the client view via d2r2 <ComponentRouter/> and Facebook React RTL's.",
                          "____types": "jsObject",
                          "____appdsl": {
                            "opm": "z_mTe02hSWmaM1iRO1pBeA"
                          },
                          "value": {
                            "____label": "Render Command",
                            "____types": [
                              "jsNull",
                              "jsObject"
                            ],
                            "____defaultValue": null,
                            "options": {
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "rehydrate": {
                                "____types": "jsBoolean",
                                "____defaultValue": false
                              }
                            },
                            "pathRenderContext": {
                              "____label": "Render Context OCD Path",
                              "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.",
                              "____accept": "jsString"
                            },
                            "pathRenderData": {
                              "____label": "Render Data OCD Path",
                              "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.renderData.",
                              "____accept": "jsString"
                            }
                          }
                        }
                      },
                      "private": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "renderCount": {
                          "____accept": "jsNumber",
                          "____defaultValue": -1
                        },
                        "renderPending": {
                          "____accept": "jsBoolean",
                          "____defaultValue": false
                        }
                      }
                    },
                    "steps": {
                      "uninitialized": {
                        "description": "Default OPM process step.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "uninitialized_invariants"
                          }
                        ]
                      },
                      "uninitialized_invariants": {
                        "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "and": [
                                {
                                  "holarchy": {
                                    "sml": {
                                      "operators": {
                                        "ocd": {
                                          "isNamespaceTruthy": {
                                            "path": "#.inputs.ComponentRouter"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "holarchy": {
                                    "sml": {
                                      "operators": {
                                        "ocd": {
                                          "isNamespaceTruthy": {
                                            "path": "#.inputs.DOMElement"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "nextStep": "uninitialized_inputs"
                          }
                        ]
                      },
                      "uninitialized_inputs": {
                        "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isNamespaceTruthy": {
                                        "path": "#.inputs.clock.value"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "initialized"
                          }
                        ]
                      },
                      "initialized": {
                        "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isNamespaceTruthy": {
                                        "path": "#.inputs.clock.value.options.rehydrate"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "rehydrate"
                          },
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "render"
                          }
                        ]
                      },
                      "rehydrate": {
                        "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                        "actions": {
                          "enter": [
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "ocd": {
                                      "setBooleanFlag": {
                                        "path": "#.private.renderPending"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "react": {
                                      "rehydrate": true
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "rendering"
                          }
                        ]
                      },
                      "render": {
                        "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                        "actions": {
                          "enter": [
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "ocd": {
                                      "setBooleanFlag": {
                                        "path": "#.private.renderPending"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "react": {
                                      "render": true
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "rendering"
                          }
                        ]
                      },
                      "rendering": {
                        "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "not": {
                                "holarchy": {
                                  "sml": {
                                    "operators": {
                                      "ocd": {
                                        "isNamespaceTruthy": {
                                          "path": "#.private.renderPending"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "ready"
                          }
                        ]
                      },
                      "ready": {
                        "description": "Waiting for next clock signal to re-render client application view.",
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "opmi": {
                                      "atStep": {
                                        "path": "#.inputs.clock",
                                        "step": "updated"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "render"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "harnessResponse": {
          "error": null,
          "result": {
            "harnessOptions": {
              "idempotent": true,
              "gitDiffHunkSize": 0
            },
            "harnessDispatch": {
              "mC3pPO5wS3SxvhgZgMjsJQ": {
                "zUoUas3CTj2HLDfpNf4NTw": {
                  "isValid": true,
                  "toJSON": {
                    "id": "IxoJ83u0TXmG7PLUYBvsyg",
                    "name": "d2r2/React Client Display Adaptor",
                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                    "opmDataSpec": {
                      "____label": "d2r2/React Client Display Adaptor Memory",
                      "____description": "Shared memory definition for the d2r2/React Client Display Adaptor OPM.",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "inputs": {
                        "____label": "Adaptor Inputs",
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "ComponentRouter": {
                          "____label": "d2r2 <ComponentRouter/>",
                          "____description": "A reference to previously-constructed <ComponentRouter/> instance (a React component that implements @encapsule/d2r2 dynamic layout protocol).",
                          "____accept": [
                            "jsNull",
                            "jsFunction"
                          ],
                          "____defaultValue": null
                        },
                        "DOMElement": {
                          "____label": "d2r2 Target DOM Element",
                          "____description": "A reference to the DOM element to be be managed by the d2r2/React Client Display Adaptor (obtained with document.getElementById).",
                          "____opaque": true,
                          "____defaultValue": null
                        },
                        "clock": {
                          "____label": "React Output Processor Clock",
                          "____description": "A frame latch used to trigger dynamic rerendering of the client view via d2r2 <ComponentRouter/> and Facebook React RTL's.",
                          "____types": "jsObject",
                          "____appdsl": {
                            "opm": "z_mTe02hSWmaM1iRO1pBeA"
                          },
                          "value": {
                            "____label": "Render Command",
                            "____types": [
                              "jsNull",
                              "jsObject"
                            ],
                            "____defaultValue": null,
                            "options": {
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "rehydrate": {
                                "____types": "jsBoolean",
                                "____defaultValue": false
                              }
                            },
                            "pathRenderContext": {
                              "____label": "Render Context OCD Path",
                              "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.",
                              "____accept": "jsString"
                            },
                            "pathRenderData": {
                              "____label": "Render Data OCD Path",
                              "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.renderData.",
                              "____accept": "jsString"
                            }
                          }
                        }
                      },
                      "private": {
                        "____types": "jsObject",
                        "____defaultValue": {},
                        "renderCount": {
                          "____accept": "jsNumber",
                          "____defaultValue": -1
                        },
                        "renderPending": {
                          "____accept": "jsBoolean",
                          "____defaultValue": false
                        }
                      }
                    },
                    "steps": {
                      "uninitialized": {
                        "description": "Default OPM process step.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "uninitialized_invariants"
                          }
                        ]
                      },
                      "uninitialized_invariants": {
                        "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "and": [
                                {
                                  "holarchy": {
                                    "sml": {
                                      "operators": {
                                        "ocd": {
                                          "isNamespaceTruthy": {
                                            "path": "#.inputs.ComponentRouter"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "holarchy": {
                                    "sml": {
                                      "operators": {
                                        "ocd": {
                                          "isNamespaceTruthy": {
                                            "path": "#.inputs.DOMElement"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "nextStep": "uninitialized_inputs"
                          }
                        ]
                      },
                      "uninitialized_inputs": {
                        "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isNamespaceTruthy": {
                                        "path": "#.inputs.clock.value"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "initialized"
                          }
                        ]
                      },
                      "initialized": {
                        "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isNamespaceTruthy": {
                                        "path": "#.inputs.clock.value.options.rehydrate"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "rehydrate"
                          },
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "render"
                          }
                        ]
                      },
                      "rehydrate": {
                        "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                        "actions": {
                          "enter": [
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "ocd": {
                                      "setBooleanFlag": {
                                        "path": "#.private.renderPending"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "react": {
                                      "rehydrate": true
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "rendering"
                          }
                        ]
                      },
                      "render": {
                        "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                        "actions": {
                          "enter": [
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "ocd": {
                                      "setBooleanFlag": {
                                        "path": "#.private.renderPending"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "holarchy": {
                                "sml": {
                                  "actions": {
                                    "react": {
                                      "render": true
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "always": true
                            },
                            "nextStep": "rendering"
                          }
                        ]
                      },
                      "rendering": {
                        "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "not": {
                                "holarchy": {
                                  "sml": {
                                    "operators": {
                                      "ocd": {
                                        "isNamespaceTruthy": {
                                          "path": "#.private.renderPending"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "ready"
                          }
                        ]
                      },
                      "ready": {
                        "description": "Waiting for next clock signal to re-render client application view.",
                        "actions": {
                          "enter": [],
                          "exit": []
                        },
                        "transitions": [
                          {
                            "transitionIf": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "opmi": {
                                      "atStep": {
                                        "path": "#.inputs.clock",
                                        "step": "updated"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "nextStep": "render"
                          }
                        ]
                      }
                    }
                  },
                  "getID": "IxoJ83u0TXmG7PLUYBvsyg",
                  "getName": "d2r2/React Client Display Adaptor",
                  "getDescription": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                  "getDataSpec": {
                    "____label": "d2r2/React Client Display Adaptor Memory",
                    "____description": "Shared memory definition for the d2r2/React Client Display Adaptor OPM.",
                    "____types": "jsObject",
                    "____defaultValue": {},
                    "inputs": {
                      "____label": "Adaptor Inputs",
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "ComponentRouter": {
                        "____label": "d2r2 <ComponentRouter/>",
                        "____description": "A reference to previously-constructed <ComponentRouter/> instance (a React component that implements @encapsule/d2r2 dynamic layout protocol).",
                        "____accept": [
                          "jsNull",
                          "jsFunction"
                        ],
                        "____defaultValue": null
                      },
                      "DOMElement": {
                        "____label": "d2r2 Target DOM Element",
                        "____description": "A reference to the DOM element to be be managed by the d2r2/React Client Display Adaptor (obtained with document.getElementById).",
                        "____opaque": true,
                        "____defaultValue": null
                      },
                      "clock": {
                        "____label": "React Output Processor Clock",
                        "____description": "A frame latch used to trigger dynamic rerendering of the client view via d2r2 <ComponentRouter/> and Facebook React RTL's.",
                        "____types": "jsObject",
                        "____appdsl": {
                          "opm": "z_mTe02hSWmaM1iRO1pBeA"
                        },
                        "value": {
                          "____label": "Render Command",
                          "____types": [
                            "jsNull",
                            "jsObject"
                          ],
                          "____defaultValue": null,
                          "options": {
                            "____types": "jsObject",
                            "____defaultValue": {},
                            "rehydrate": {
                              "____types": "jsBoolean",
                              "____defaultValue": false
                            }
                          },
                          "pathRenderContext": {
                            "____label": "Render Context OCD Path",
                            "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.",
                            "____accept": "jsString"
                          },
                          "pathRenderData": {
                            "____label": "Render Data OCD Path",
                            "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.renderData.",
                            "____accept": "jsString"
                          }
                        }
                      }
                    },
                    "private": {
                      "____types": "jsObject",
                      "____defaultValue": {},
                      "renderCount": {
                        "____accept": "jsNumber",
                        "____defaultValue": -1
                      },
                      "renderPending": {
                        "____accept": "jsBoolean",
                        "____defaultValue": false
                      }
                    }
                  },
                  "getDigraph": {
                    "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] OPM Digraph",
                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                    "vlist": [
                      {
                        "u": "uninitialized",
                        "p": {
                          "description": "Default OPM process step.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "uninitialized_invariants",
                        "p": {
                          "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "uninitialized_inputs",
                        "p": {
                          "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "initialized",
                        "p": {
                          "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "rehydrate",
                        "p": {
                          "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                          "actions": {
                            "enter": [
                              {
                                "holarchy": {
                                  "sml": {
                                    "actions": {
                                      "ocd": {
                                        "setBooleanFlag": {
                                          "path": "#.private.renderPending"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "holarchy": {
                                  "sml": {
                                    "actions": {
                                      "react": {
                                        "rehydrate": true
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "render",
                        "p": {
                          "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                          "actions": {
                            "enter": [
                              {
                                "holarchy": {
                                  "sml": {
                                    "actions": {
                                      "ocd": {
                                        "setBooleanFlag": {
                                          "path": "#.private.renderPending"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "holarchy": {
                                  "sml": {
                                    "actions": {
                                      "react": {
                                        "render": true
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "rendering",
                        "p": {
                          "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      },
                      {
                        "u": "ready",
                        "p": {
                          "description": "Waiting for next clock signal to re-render client application view.",
                          "actions": {
                            "enter": [],
                            "exit": []
                          }
                        }
                      }
                    ],
                    "elist": [
                      {
                        "e": {
                          "u": "uninitialized",
                          "v": "uninitialized_invariants"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "always": true
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "uninitialized_invariants",
                          "v": "uninitialized_inputs"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "and": [
                              {
                                "holarchy": {
                                  "sml": {
                                    "operators": {
                                      "ocd": {
                                        "isNamespaceTruthy": {
                                          "path": "#.inputs.ComponentRouter"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "holarchy": {
                                  "sml": {
                                    "operators": {
                                      "ocd": {
                                        "isNamespaceTruthy": {
                                          "path": "#.inputs.DOMElement"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "uninitialized_inputs",
                          "v": "initialized"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "holarchy": {
                              "sml": {
                                "operators": {
                                  "ocd": {
                                    "isNamespaceTruthy": {
                                      "path": "#.inputs.clock.value"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "initialized",
                          "v": "rehydrate"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "holarchy": {
                              "sml": {
                                "operators": {
                                  "ocd": {
                                    "isNamespaceTruthy": {
                                      "path": "#.inputs.clock.value.options.rehydrate"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "initialized",
                          "v": "render"
                        },
                        "p": {
                          "priority": 1,
                          "operator": {
                            "always": true
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "rehydrate",
                          "v": "rendering"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "always": true
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "render",
                          "v": "rendering"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "always": true
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "rendering",
                          "v": "ready"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "not": {
                              "holarchy": {
                                "sml": {
                                  "operators": {
                                    "ocd": {
                                      "isNamespaceTruthy": {
                                        "path": "#.private.renderPending"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "e": {
                          "u": "ready",
                          "v": "render"
                        },
                        "p": {
                          "priority": 0,
                          "operator": {
                            "holarchy": {
                              "sml": {
                                "operators": {
                                  "opmi": {
                                    "atStep": {
                                      "path": "#.inputs.clock",
                                      "step": "updated"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
