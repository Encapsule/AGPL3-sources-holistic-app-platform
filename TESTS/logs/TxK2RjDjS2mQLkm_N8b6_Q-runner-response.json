{
  "error": null,
  "result": {
    "XkT3fzhYT0izLU_P2WF54Q": {
      "summary": {
        "requests": 95,
        "runnerStats": {
          "dispatched": [
            "197ZsgbfRRGGMWqhwmaBDg",
            "4nw2B9oVQYm1ZspZqotrRA",
            "5fzWl6WhTEaG7EzC1AgITw",
            "6TPB7tz4TQaGJYaRAhl_gQ",
            "7Hehip1DT5Kn0QEyEJMPhA",
            "8167V4JrSc-47BMNONdxvQ",
            "8UqseWhbQLSnDnKqu6eVpA",
            "AE_pEJ7LTdSvohEBZl_Bfw",
            "AhfYIOp_RQmS-a37emkj9A",
            "ChcuyPLCSQCsICTprPzfog",
            "D9E7--YgRqWfqoQFz7Ckfg",
            "DipB21oZR5ihBCYESC5HWw",
            "E7xo1-qaSuSrsN5-8jgmRg",
            "ElMglky8TBGkzkd6W4690A",
            "ErHlg9R3SSaonNJr4mBi-g",
            "FUyhcKKfTeycNWD0JVxkhw",
            "FxMOqQPARcGcMZ24x2tq7A",
            "Gli8ff6FR22PPXjn9epRAQ",
            "H2zMrBw4TBie5A2mwH4BRg",
            "HwB8EphzRkSG7AeoISMctQ",
            "HxrzwXDSTlWXQJ5XAMhgtA",
            "ILfH_hfQSM-ZOohMgpYU8A",
            "IRyR4YazRuWiZp9Rzj6-WA",
            "KGh0Va-oTXKPUZmnDG4QPQ",
            "LC56jkxeQJ2mgWfwGklLEQ",
            "MHVj3IaXR7SIsY1MUwMG_A",
            "N88iVPFrQJO_VNKqdyrF1Q",
            "NPN6z4aOTqOOO60wLVKOcg",
            "OP9PyLDXTaac7_AHb1qCfg",
            "OXCzJI-JT72xRNRuEn51Bw",
            "OcoS0S_MRg2traJs1gDQ-g",
            "OrkMuFl_TyiqVKdt9Qs6Dw",
            "Pe4ks7bQQ9KQee1T8qTRHw",
            "PfsBYWSrQwSQCVQgaR1rPQ",
            "QvEwWTkbT8G_SQsmWmg2zQ",
            "SHneUm5GTDO--xVSUpL92Q",
            "T-apDENPTAO6iQShA-2qBQ",
            "TenISiGcTG-06LhZuBzJNQ",
            "UHqiKKLkTMmLBGXI4lRxEA",
            "VcFs1BSZTLCb8nlIwW3Pmg",
            "VwWYI4ReSTSfqSnoVXXC-w",
            "VxYuiGoHRfuKRHp7PBik7Q",
            "VyQv8NaWTAuoY0daxO9mzQ",
            "X5zbSBkaQeG6Wft5cGVRwg",
            "Xp1zz6GTQuug4w1umxHPlQ",
            "YdzP0ZKMTme24BBJcyKevA",
            "ZbwxkWJgTEKjxXpYX0_h7Q",
            "Zu13opLlRwSmU2LHvEAHnA",
            "ak8rhTiORTWXueau74RlHA",
            "boPENwtqTDiqX_c6CYfaPw",
            "bx_3DRETSe6zr-Dz_W-COQ",
            "cQ3Z1fhsTICqkY3uKQXaFQ",
            "d7uW2Me4RjqeX3a2NjOodQ",
            "dcSJk7BZQ3qnlrgivMayUQ",
            "dirl1VuNQCmBrzbJXWMTtA",
            "eyJdms-IQR-_ebGiXP308g",
            "fNpBNE0uQ2GJWunuKe3_lA",
            "fzc39RvNTLmHF5UNn_-Fng",
            "fzuITg9BQbyV7jNv39Gv6w",
            "gwtkQR51TYm93K32K6QHNA",
            "iQ5RngZ0QNyH67mVrlwo4w",
            "juolo4dqSgKdLEYLoHJJ1Q",
            "kSrV2fJ_S-aXkSmJwxYpDQ",
            "l0vKq8yVRsm73LoMev8ItA",
            "l2lMJRfpR7SwIMxriD-pRQ",
            "l_P652EhQU6_z7afrV-PMQ",
            "mm9htD2iSuyVAPm9SFv-qw",
            "nCoUIS0RTlmuKUSpimee7A",
            "np4M1LDWSyeNXOmFYJulhA",
            "pTaZUV0vTOGhaNOVD0sXLQ",
            "pUxcxo9STsG3OMWWrREHoQ",
            "rFcPAwRGRsOlJSXBZOdwNA",
            "rShJ0riLSiOxLt0OpFJLJA",
            "rxFiX7H-TDG0GsxqtRekoA",
            "sBB6rshGQu2f7S5rA2x9eg",
            "sO15Cox_SVqcCgyrOllAwQ",
            "sThxzN9-QuKCgErSNYhcQQ",
            "stn1B2JRSkOkFxuyejzGjQ",
            "tiB1moF_SkWteHeOoCe96g",
            "uZN6-qpIQO6CkwmLDWtMCw",
            "vHzKNXxvS8Sp-LpbJ5NlUQ",
            "veo_BAhrQxuNhyL4mF66IA",
            "vzmMGynKTy2uu6W8R-1rvQ",
            "waM_L9rTT6ySTY4ja__K3g",
            "wtgq7mnyQI-qZXBxv2wTrw",
            "xhZFsZ7KTFCHaSkVZ_VMXQ",
            "y3Jy2d56QI63admJOy1tZw"
          ],
          "rejected": [
            "130L3KaTS3uFybwDdVlWwg",
            "5aJ-FcXOSYqqF_ha651qQA",
            "7pAVXoWbTSeZSF4SzLrlxg",
            "Geq5MDymQLKcO9JQe7Lc8w",
            "HPaNXEH9SYmOZTLlD5jUXg",
            "QE3J6XhJSHqelGnpFMawzA",
            "zMnQxFBZQuaeu7buQH_qkw",
            "zxKqk_YOTme-e0AExJUhmg"
          ],
          "errors": [
            "UHqiKKLkTMmLBGXI4lRxEA",
            "ak8rhTiORTWXueau74RlHA",
            "cQ3Z1fhsTICqkY3uKQXaFQ",
            "veo_BAhrQxuNhyL4mF66IA"
          ]
        },
        "runnerEval": {
          "neutral": [],
          "pass": {
            "expected": [],
            "actual": []
          },
          "fail": {
            "expected": [],
            "actual": []
          }
        }
      },
      "harnessEvalDescriptors": [
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "zxKqk_YOTme-e0AExJUhmg": {
                "harnessRequest": {
                  "id": "zxKqk_YOTme-e0AExJUhmg",
                  "name": "Bad message test #0",
                  "description": "Send a message that we know there's no harness registered to handle.",
                  "vectorRequest": {
                    "bogusMessage": {
                      "message": "Hello, is anyone there?"
                    }
                  }
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "DUGjLpXu6s7PYw43guW2jg": {
              "IRyR4YazRuWiZp9Rzj6-WA": {
                "harnessRequest": {
                  "id": "IRyR4YazRuWiZp9Rzj6-WA",
                  "name": "Call test harness #1",
                  "description": "Attempt to call the harness-filter-1 test harness plug-in.",
                  "vectorRequest": {
                    "testMessage1": "This request should get routed to harness-filter-1."
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "F1zguurrS9-fcdvLk7TCrg": {
                        "IRyR4YazRuWiZp9Rzj6-WA": "This request should get routed to harness-filter-1."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "kFKvLRgHKYYDMExB7PQjIA": {
              "sBB6rshGQu2f7S5rA2x9eg": {
                "harnessRequest": {
                  "id": "sBB6rshGQu2f7S5rA2x9eg",
                  "name": "Call test harness #2",
                  "description": "Attempt to call the harness-filter-2 test harness plug-in.",
                  "vectorRequest": {
                    "testMessage2": "This request should get routed to harness-filter-2."
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "d8zMijUSTZiQlbk__HX6gA": {
                        "sBB6rshGQu2f7S5rA2x9eg": "This request should get routed to harness-filter-2."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "YKGvFlRJKQNp0UxWWe4jwA": {
              "ak8rhTiORTWXueau74RlHA": {
                "harnessRequest": {
                  "id": "ak8rhTiORTWXueau74RlHA",
                  "name": "Call test harness #3 (incomplete message)",
                  "description": "Attempt to call the harness-filter-3 test harness plug-in w/incomplete request mesage.",
                  "vectorRequest": {
                    "testMessage3": {
                      "superflous": [
                        "This array is not included in the harness-filter-3 test harness input spec so it's simply clipped off by the harness input filter stage and never passed to the harness bodyFunction.",
                        "We know that our harness filter test examples all have a fairly predictable harnessRequest signature. Here we use knowledge of how arccore.discriminator works inside to craft a",
                        "a test that routes through discriminator to select the harness. But, when called the harness rejects the harnessRequest because although it was sufficient to get through arccore.discrminator,",
                        "(because after seeing testMessage3 discrminator knows it can only be harness-filter-3) it was nonetheless insufficiently complete to pass harness input spec."
                      ]
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>] failed while normalizing request input. Error at path '~.vectorRequest.testMessage3.message': Value of type 'jsUndefined' not in allowed type set [jsString].",
                  "result": null
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "YKGvFlRJKQNp0UxWWe4jwA": {
              "cQ3Z1fhsTICqkY3uKQXaFQ": {
                "harnessRequest": {
                  "id": "cQ3Z1fhsTICqkY3uKQXaFQ",
                  "name": "Call test harness #3A (complete message signalling force error)",
                  "description": "Attempt to call harness-filter-3 signalling that its implementation should return a response.error.",
                  "vectorRequest": {
                    "testMessage3": {
                      "message": "error"
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>] failed while performing main operation. Error attempting to dispatch plug-in harness filter [EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3]: Filter [EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3] failed while performing main operation. We were asked to report an error."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "YKGvFlRJKQNp0UxWWe4jwA": {
              "LC56jkxeQJ2mgWfwGklLEQ": {
                "harnessRequest": {
                  "id": "LC56jkxeQJ2mgWfwGklLEQ",
                  "name": "Call test harness #3B (valid message)",
                  "description": "Attempt to call harness-filter-3 with a valid message.",
                  "vectorRequest": {
                    "testMessage3": {
                      "message": "This message should be delivered and returned by harness-filter-3."
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "EmU3C0AASciHnBpz-xMmgA": {
                        "LC56jkxeQJ2mgWfwGklLEQ": "This message should be delivered and returned by harness-filter-3."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "z1d1czVQoTY7MjDsy97Paw": {
              "UHqiKKLkTMmLBGXI4lRxEA": {
                "harnessRequest": {
                  "id": "UHqiKKLkTMmLBGXI4lRxEA",
                  "name": "Call test harness #4",
                  "description": "Call test harness #4 which is hardwired to throw an exception. This confirms baseline for holodeck's harness factory's handling of bad developer input.",
                  "vectorRequest": {
                    "testMessage4": {
                      "thisIsOpqaue": "so i can do wahtever i want... and it doesn't matter anyway. the harness is hard-wired to explode."
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>] failed while performing main operation. Error attempting to dispatch plug-in harness filter [z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4]: Unexpected harness filter exception: 'Oh, snap!'."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "zwXafDUZ8sI7qTaRy-pjLg": {
              "tiB1moF_SkWteHeOoCe96g": {
                "harnessRequest": {
                  "id": "tiB1moF_SkWteHeOoCe96g",
                  "name": "Call test harness #5",
                  "description": "Call test harness #5 that splits its incoming request into two subrequests that it dispatches via MDR to test harness #6 and test harness #7",
                  "vectorRequest": {
                    "testMessage5": {
                      "subVectorRequestA": {
                        "id": "QXyfBDzTQ4Gi53b9x0Fd7w",
                        "name": "Subvector Request A",
                        "description": "A request made to another holodeck harness from within a harness via MDR pattern.",
                        "vectorRequest": {
                          "testMessage5A": {
                            "message": "Hello, this ia a test of subVectorRequestA dispathc via MDR that we expect to get routed to test harness #5A."
                          }
                        }
                      },
                      "subVectorRequestB": {
                        "id": "CRssCOzbQD2luB1gAq_k8w",
                        "name": "Subvector Request B",
                        "description": "A request made to another holodeck harness from within a harness via MDR pattern.",
                        "vectorRequest": {
                          "testMessage5B": {
                            "message": "hello, this is a test of subVectorRequestB dispatch via MDR that we expect to get routed to test harness #5B."
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": false,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "TLUZ3YPUTXK8fXhh6t3-Ew": {
                        "tiB1moF_SkWteHeOoCe96g": {
                          "responseA": {
                            "error": null,
                            "result": {
                              "harnessOptions": {
                                "idempotent": false,
                                "gitDiffHunkSize": 0
                              },
                              "harnessDispatch": {
                                "fEMk__iaS36GdSTX-2VE7A": {
                                  "QXyfBDzTQ4Gi53b9x0Fd7w": "Hello, this ia a test of subVectorRequestA dispathc via MDR that we expect to get routed to test harness #5A."
                                }
                              }
                            }
                          },
                          "responseB": {
                            "error": null,
                            "result": {
                              "harnessOptions": {
                                "idempotent": false,
                                "gitDiffHunkSize": 0
                              },
                              "harnessDispatch": {
                                "SP1HKRvJTNaq7-r-XhPYMg": {
                                  "CRssCOzbQD2luB1gAq_k8w": "hello, this is a test of subVectorRequestB dispatch via MDR that we expect to get routed to test harness #5B."
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "z8o7ETWrb-47aDkBy1I9wQ": {
              "veo_BAhrQxuNhyL4mF66IA": {
                "harnessRequest": {
                  "id": "veo_BAhrQxuNhyL4mF66IA",
                  "name": "Call test harness #6",
                  "description": "Call test harness #6 that executes two subvector requests in a separate holodec runner.",
                  "vectorRequest": {
                    "testMessage6": {
                      "subRunnerID": "3OKNkkrBTY6NmUXwjeLUDg",
                      "subVectorRequestA": {
                        "id": "QXyfBDzTQ4Gi53b9x0Fd7w",
                        "name": "Subvector Request A",
                        "description": "A request made to another holodeck harness from within a harness via MDR pattern.",
                        "vectorRequest": {
                          "testMessage5A": {
                            "message": "Hello, this ia a test of subVectorRequestA dispathc via MDR that we expect to get routed to test harness #5A."
                          }
                        }
                      },
                      "subVectorRequestB": {
                        "id": "CRssCOzbQD2luB1gAq_k8w",
                        "name": "Subvector Request B",
                        "description": "A request made to another holodeck harness from within a harness via MDR pattern.",
                        "vectorRequest": {
                          "testMessage5B": {
                            "message": "hello, this is a test of subVectorRequestB dispatch via MDR that we expect to get routed to test harness #5B."
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>] failed while performing main operation. Error attempting to dispatch plug-in harness filter [OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6]: Filter [OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6] failed while performing main operation. Filter [XkT3fzhYT0izLU_P2WF54Q::Holodeck Test Runner] failed while performing main operation. Filter [5A8uDJunQUm1w-HcBPQ6Gw::Request Discriminator Filter Factory] failed while performing main operation. Invalid request. You must specify an array of two or more Filter objects to construct a Discriminator Filter."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "gwtkQR51TYm93K32K6QHNA": {
                "harnessRequest": {
                  "id": "gwtkQR51TYm93K32K6QHNA",
                  "name": "Undefined constructor request",
                  "description": "Send nothing (undefined) to OPC constructor.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "gwtkQR51TYm93K32K6QHNA": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [unspecified::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "iQ5RngZ0QNyH67mVrlwo4w": {
                "harnessRequest": {
                  "id": "iQ5RngZ0QNyH67mVrlwo4w",
                  "name": "Barely defined constructor request",
                  "description": "Send nothing but an empty object to OPC constructor.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {}
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "iQ5RngZ0QNyH67mVrlwo4w": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [unspecified::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while normalizing request input. Error at path '~.id': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "QvEwWTkbT8G_SQsmWmg2zQ": {
                "harnessRequest": {
                  "id": "QvEwWTkbT8G_SQsmWmg2zQ",
                  "name": "Minimal constructor request #1: Invalid ID",
                  "description": "Test basic constructor request variant #1 by passing a bad IRUT as the ID.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "fail"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "QvEwWTkbT8G_SQsmWmg2zQ": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [fail::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Please supply a valid IRUT. Or, use the special 'demo' keyword to have a one-time-use random IRUT assigned. Expected 22-character string. Found 4-character string instead."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "l_P652EhQU6_z7afrV-PMQ": {
                "harnessRequest": {
                  "id": "l_P652EhQU6_z7afrV-PMQ",
                  "name": "Minimal constructor valid ID all default inputs",
                  "description": "Confirm default construction variant #1",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "l_P652EhQU6_z7afrV-PMQ"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "l_P652EhQU6_z7afrV-PMQ": {
                          "opcToJSON": {
                            "id": "l_P652EhQU6_z7afrV-PMQ",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [l_P652EhQU6_z7afrV-PMQ::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [l_P652EhQU6_z7afrV-PMQ::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "juolo4dqSgKdLEYLoHJJ1Q": {
                "harnessRequest": {
                  "id": "juolo4dqSgKdLEYLoHJJ1Q",
                  "name": "Miniaml constructor w/minimal valid ocdTemplateSpec",
                  "description": "Confirm minimal ocdTemplateSpec same as default construction.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "juolo4dqSgKdLEYLoHJJ1Q",
                            "name": "Valid ID w/minimal but valid custom opaque ocd template spec.",
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "juolo4dqSgKdLEYLoHJJ1Q": {
                          "opcToJSON": {
                            "id": "juolo4dqSgKdLEYLoHJJ1Q",
                            "name": "Valid ID w/minimal but valid custom opaque ocd template spec.",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [juolo4dqSgKdLEYLoHJJ1Q::Valid ID w/minimal but valid custom opaque ocd template spec.] Observable Controller Data Store",
                              "____description": "OPC [juolo4dqSgKdLEYLoHJJ1Q::Valid ID w/minimal but valid custom opaque ocd template spec.] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "dirl1VuNQCmBrzbJXWMTtA": {
                "harnessRequest": {
                  "id": "dirl1VuNQCmBrzbJXWMTtA",
                  "name": "Invalid OCD template spec #1",
                  "description": "OCD template spec must be a valid filter spec #1",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "dirl1VuNQCmBrzbJXWMTtA",
                            "ocdTemplateSpec": {}
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "dirl1VuNQCmBrzbJXWMTtA": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [dirl1VuNQCmBrzbJXWMTtA::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. While attempting to verify and normalize developer-defined request.ocdTemplateSpec: Filter factory failure: While examining data namespace '~.inputFilterSpec': Missing required '____accept', '____types', or '_____opaque' type constraint directive."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "ChcuyPLCSQCsICTprPzfog": {
                "harnessRequest": {
                  "id": "ChcuyPLCSQCsICTprPzfog",
                  "name": "Invalid OCD template spec #2",
                  "description": "OCD template spec must be a valid filter spec #2",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "ChcuyPLCSQCsICTprPzfog",
                            "ocdTemplateSpec": {
                              "____notAQunderscoreDirective": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "ChcuyPLCSQCsICTprPzfog": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [ChcuyPLCSQCsICTprPzfog::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. While attempting to verify and normalize developer-defined request.ocdTemplateSpec: Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____notAQunderscoreDirective' not allowed in declaration."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "ZbwxkWJgTEKjxXpYX0_h7Q": {
                "harnessRequest": {
                  "id": "ZbwxkWJgTEKjxXpYX0_h7Q",
                  "name": "Invliad OCD template spec #3",
                  "description": "OCD template spec ~ namespace is not allowed to use the ____opaque directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "ZbwxkWJgTEKjxXpYX0_h7Q",
                            "ocdTemplateSpec": {
                              "____opaque": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "ZbwxkWJgTEKjxXpYX0_h7Q": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [ZbwxkWJgTEKjxXpYX0_h7Q::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "X5zbSBkaQeG6Wft5cGVRwg": {
                "harnessRequest": {
                  "id": "X5zbSBkaQeG6Wft5cGVRwg",
                  "name": "Invalid OCD template spec #4",
                  "description": "OCD template namespace ~ is not allowed to specify any value other that jsObject for ____types directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "X5zbSBkaQeG6Wft5cGVRwg",
                            "ocdTemplateSpec": {
                              "____types": "jsString"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "X5zbSBkaQeG6Wft5cGVRwg": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [X5zbSBkaQeG6Wft5cGVRwg::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "ElMglky8TBGkzkd6W4690A": {
                "harnessRequest": {
                  "id": "ElMglky8TBGkzkd6W4690A",
                  "name": "OCD template spec typically specifies ____types jsObject.",
                  "description": "OCD template spec ~ namespace is NOT allowed to use the ____accept jsObject directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "vi6NeCCXSG61m6OMk7KZyw",
                            "ocdTemplateSpec": {
                              "____accept": "jsObject"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "ElMglky8TBGkzkd6W4690A": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [vi6NeCCXSG61m6OMk7KZyw::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "waM_L9rTT6ySTY4ja__K3g": {
                "harnessRequest": {
                  "id": "waM_L9rTT6ySTY4ja__K3g",
                  "name": "Invalid OCD template spec #5",
                  "description": "OCD template namespace ~ is NOT allowed to use ____types: [].",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "waM_L9rTT6ySTY4ja__K3g",
                            "ocdTemplateSpec": {
                              "____types": [
                                "jsObject"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "waM_L9rTT6ySTY4ja__K3g": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [waM_L9rTT6ySTY4ja__K3g::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "nCoUIS0RTlmuKUSpimee7A": {
                "harnessRequest": {
                  "id": "nCoUIS0RTlmuKUSpimee7A",
                  "name": "Invalid OCD template spec #7",
                  "description": "OCD template namespace ~ is only allowed to use one quanderscore directive, ____types.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "nCoUIS0RTlmuKUSpimee7A",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "____defaultValue": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "nCoUIS0RTlmuKUSpimee7A": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [nCoUIS0RTlmuKUSpimee7A::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "FxMOqQPARcGcMZ24x2tq7A": {
                "harnessRequest": {
                  "id": "FxMOqQPARcGcMZ24x2tq7A",
                  "name": "Invalid OCD template spec #7",
                  "description": "Test our ability to extend the OPC-managed root namespace, ~.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "FxMOqQPARcGcMZ24x2tq7A",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "FxMOqQPARcGcMZ24x2tq7A": {
                          "opcToJSON": {
                            "id": "FxMOqQPARcGcMZ24x2tq7A",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [FxMOqQPARcGcMZ24x2tq7A::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [FxMOqQPARcGcMZ24x2tq7A::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdi": {
                              "testString": "Please specify a value for ~.testString."
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "fzc39RvNTLmHF5UNn_-Fng": {
                "harnessRequest": {
                  "id": "fzc39RvNTLmHF5UNn_-Fng",
                  "name": "Valid ID, ocdTemplateSpec, data",
                  "description": "Valid OPC instance + dev ocdTemplateSpec + invalid valid init data",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "fzc39RvNTLmHF5UNn_-Fng",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdInitData": {
                              "testString": 3.1415926536
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "fzc39RvNTLmHF5UNn_-Fng": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [fzc39RvNTLmHF5UNn_-Fng::unspecified] failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Unable to initialize the OPC instance's shared OCD store due to constructor failure: Filter [Z0_rX_NhQ5-c0BCWNTXmgw::OCD Method Constructor Filter] failed while performing main operation. Invalid initialization data specified for OCD store. Filter [3aDV_cacQByO0tTzVrBxnA::OCD Constructor Data Filter] failed while normalizing request input. Error at path '~.testString': Value of type 'jsNumber' not in allowed type set [jsString]."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "DipB21oZR5ihBCYESC5HWw": {
                "harnessRequest": {
                  "id": "DipB21oZR5ihBCYESC5HWw",
                  "name": "Valid ID, ocdTemplateSpec, data",
                  "description": "Valid OPC instance + dev ocdTemplateSpec + valid init data",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "DipB21oZR5ihBCYESC5HWw",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdInitData": {
                              "testString": "Hello, World!"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "DipB21oZR5ihBCYESC5HWw": {
                          "opcToJSON": {
                            "id": "DipB21oZR5ihBCYESC5HWw",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [DipB21oZR5ihBCYESC5HWw::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [DipB21oZR5ihBCYESC5HWw::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdi": {
                              "testString": "Hello, World!"
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "np4M1LDWSyeNXOmFYJulhA": {
                "harnessRequest": {
                  "id": "np4M1LDWSyeNXOmFYJulhA",
                  "name": "Invalid OPC template spec binding #1",
                  "description": "Pass an OCD template spec w/invalid APM binding IRUT",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "np4M1LDWSyeNXOmFYJulhA",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "app": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "not and IRUT"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "np4M1LDWSyeNXOmFYJulhA": {
                          "opcToJSON": {
                            "id": "np4M1LDWSyeNXOmFYJulhA",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "app": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "not and IRUT"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [np4M1LDWSyeNXOmFYJulhA::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [np4M1LDWSyeNXOmFYJulhA::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "app": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.app' will not be bound to APM ID 'not and IRUT'. Invalid ID IRUT specified."
                                }
                              }
                            },
                            "ocdi": {
                              "app": {}
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.app' will not be bound to APM ID 'not and IRUT'. Invalid ID IRUT specified.",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "197ZsgbfRRGGMWqhwmaBDg": {
                "harnessRequest": {
                  "id": "197ZsgbfRRGGMWqhwmaBDg",
                  "name": "Invalid OPC template spec binding #2",
                  "description": "OCD spec namespace bound to APM not allowed to use ____opaque directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "197ZsgbfRRGGMWqhwmaBDg",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____opaque": true,
                                "____appdsl": {
                                  "apm": "197ZsgbfRRGGMWqhwmaBDg"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "197ZsgbfRRGGMWqhwmaBDg": {
                          "opcToJSON": {
                            "id": "197ZsgbfRRGGMWqhwmaBDg",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____opaque": true,
                                "____appdsl": {
                                  "apm": "197ZsgbfRRGGMWqhwmaBDg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [197ZsgbfRRGGMWqhwmaBDg::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [197ZsgbfRRGGMWqhwmaBDg::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____opaque": true,
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID '197ZsgbfRRGGMWqhwmaBDg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                }
                              }
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID '197ZsgbfRRGGMWqhwmaBDg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "rxFiX7H-TDG0GsxqtRekoA": {
                "harnessRequest": {
                  "id": "rxFiX7H-TDG0GsxqtRekoA",
                  "name": "Invalid OPC template spec binding #3",
                  "description": "OCD spec namespace bound to unregistered APM tests ability for dev to bind to an ____accept object. Should fail due to missing APM registration.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "rxFiX7H-TDG0GsxqtRekoA",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____accept": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "rxFiX7H-TDG0GsxqtRekoA"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "rxFiX7H-TDG0GsxqtRekoA": {
                          "opcToJSON": {
                            "id": "rxFiX7H-TDG0GsxqtRekoA",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____accept": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "rxFiX7H-TDG0GsxqtRekoA"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [rxFiX7H-TDG0GsxqtRekoA::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [rxFiX7H-TDG0GsxqtRekoA::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____accept": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'rxFiX7H-TDG0GsxqtRekoA'. Unknown/unregistered APM specified."
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'rxFiX7H-TDG0GsxqtRekoA'. Unknown/unregistered APM specified.",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "Pe4ks7bQQ9KQee1T8qTRHw": {
                "harnessRequest": {
                  "id": "Pe4ks7bQQ9KQee1T8qTRHw",
                  "name": "Invalid OPC Template sepc binding #4",
                  "description": "OCD spec namespace bound to APM IS allowed to specify an array of values to ____types directive (w/restrictions not tested here).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "Pe4ks7bQQ9KQee1T8qTRHw",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": [
                                  "jsObject"
                                ],
                                "____appdsl": {
                                  "apm": "jDGvZvHASx-U1cV497Oamw"
                                },
                                "____defaultValue": {}
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "jDGvZvHASx-U1cV497Oamw",
                                  "vdid": "MqXBDv91s7RyjXt-_DaJUQ",
                                  "name": "test",
                                  "description": "Binding SUCCESS!",
                                  "process": {
                                    "name": "[jDGvZvHASx-U1cV497Oamw::test] APM Digraph",
                                    "description": "Binding SUCCESS!",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "Pe4ks7bQQ9KQee1T8qTRHw": {
                          "opcToJSON": {
                            "id": "Pe4ks7bQQ9KQee1T8qTRHw",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "jDGvZvHASx-U1cV497Oamw": {
                                "id": "jDGvZvHASx-U1cV497Oamw",
                                "vdid": "MqXBDv91s7RyjXt-_DaJUQ",
                                "name": "test",
                                "description": "Binding SUCCESS!",
                                "process": {
                                  "name": "[jDGvZvHASx-U1cV497Oamw::test] APM Digraph",
                                  "description": "Binding SUCCESS!",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.badNamespace",
                                "opmiRef": {
                                  "id": "jDGvZvHASx-U1cV497Oamw",
                                  "vdid": "MqXBDv91s7RyjXt-_DaJUQ",
                                  "name": "test",
                                  "description": "Binding SUCCESS!",
                                  "process": {
                                    "name": "[jDGvZvHASx-U1cV497Oamw::test] APM Digraph",
                                    "description": "Binding SUCCESS!",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": [
                                  "jsObject"
                                ],
                                "____appdsl": {
                                  "apm": "jDGvZvHASx-U1cV497Oamw"
                                },
                                "____defaultValue": {}
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [Pe4ks7bQQ9KQee1T8qTRHw::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [Pe4ks7bQQ9KQee1T8qTRHw::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "apm": "jDGvZvHASx-U1cV497Oamw"
                                },
                                "____defaultValue": {},
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {
                                      "EItvvpMQpcGEOpeu4obRjA": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.badNamespace",
                                            "specPath": "~.badNamespace"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "jDGvZvHASx-U1cV497Oamw",
                                            "vdid": "MqXBDv91s7RyjXt-_DaJUQ",
                                            "name": "test",
                                            "description": "Binding SUCCESS!",
                                            "process": {
                                              "name": "[jDGvZvHASx-U1cV497Oamw::test] APM Digraph",
                                              "description": "Binding SUCCESS!",
                                              "vlist": [],
                                              "elist": []
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "noop",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "H2zMrBw4TBie5A2mwH4BRg": {
                "harnessRequest": {
                  "id": "H2zMrBw4TBie5A2mwH4BRg",
                  "name": "Invalid OCD template spec binding #5",
                  "description": "OCD template spec namespace bound to APM must declare ____types: \"jsObject\".",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "H2zMrBw4TBie5A2mwH4BRg",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsArray",
                                "____defaultValue": [],
                                "____appdsl": {
                                  "apm": "H2zMrBw4TBie5A2mwH4BRg"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "H2zMrBw4TBie5A2mwH4BRg": {
                          "opcToJSON": {
                            "id": "H2zMrBw4TBie5A2mwH4BRg",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsArray",
                                "____defaultValue": [],
                                "____appdsl": {
                                  "apm": "H2zMrBw4TBie5A2mwH4BRg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [H2zMrBw4TBie5A2mwH4BRg::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [H2zMrBw4TBie5A2mwH4BRg::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsArray",
                                "____defaultValue": [],
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'H2zMrBw4TBie5A2mwH4BRg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": []
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'H2zMrBw4TBie5A2mwH4BRg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "VxYuiGoHRfuKRHp7PBik7Q": {
                "harnessRequest": {
                  "id": "VxYuiGoHRfuKRHp7PBik7Q",
                  "name": "Invalid OCD template spec binding #6",
                  "description": "OCD template spec namespace bound to APM must not use the ____asMap directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "VxYuiGoHRfuKRHp7PBik7Q",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____asMap": true,
                                "____appdsl": {
                                  "apm": "VxYuiGoHRfuKRHp7PBik7Q"
                                },
                                "mapKey": {
                                  "____accept": "jsString"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "VxYuiGoHRfuKRHp7PBik7Q": {
                          "opcToJSON": {
                            "id": "VxYuiGoHRfuKRHp7PBik7Q",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____asMap": true,
                                "____appdsl": {
                                  "apm": "VxYuiGoHRfuKRHp7PBik7Q"
                                },
                                "mapKey": {
                                  "____accept": "jsString"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [VxYuiGoHRfuKRHp7PBik7Q::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [VxYuiGoHRfuKRHp7PBik7Q::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____asMap": true,
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'VxYuiGoHRfuKRHp7PBik7Q'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                },
                                "mapKey": {
                                  "____accept": "jsString"
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'VxYuiGoHRfuKRHp7PBik7Q'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "T-apDENPTAO6iQShA-2qBQ": {
                "harnessRequest": {
                  "id": "T-apDENPTAO6iQShA-2qBQ",
                  "name": "Invalid OCD template spec binding #7",
                  "description": "OCD template spec namespace bound to APM must specify the ID of a registered APM instance to bind.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "T-apDENPTAO6iQShA-2qBQ",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "T-apDENPTAO6iQShA-2qBQ"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "T-apDENPTAO6iQShA-2qBQ": {
                          "opcToJSON": {
                            "id": "T-apDENPTAO6iQShA-2qBQ",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "T-apDENPTAO6iQShA-2qBQ"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [T-apDENPTAO6iQShA-2qBQ::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [T-apDENPTAO6iQShA-2qBQ::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'T-apDENPTAO6iQShA-2qBQ'. Unknown/unregistered APM specified."
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to APM ID 'T-apDENPTAO6iQShA-2qBQ'. Unknown/unregistered APM specified.",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "bx_3DRETSe6zr-Dz_W-COQ": {
                "harnessRequest": {
                  "id": "bx_3DRETSe6zr-Dz_W-COQ",
                  "name": "Test OPC options #1",
                  "description": "Construct an OPC instance specifying override values for constructor options #1.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "bx_3DRETSe6zr-Dz_W-COQ",
                            "name": "Test OPC options #1",
                            "description": "Construct an OPC instance specifying override values for constructor options #1 (just test the options passing).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 8,
                                "firstEvaluation": "action"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "bx_3DRETSe6zr-Dz_W-COQ": {
                          "opcToJSON": {
                            "id": "bx_3DRETSe6zr-Dz_W-COQ",
                            "name": "Test OPC options #1",
                            "description": "Construct an OPC instance specifying override values for constructor options #1 (just test the options passing).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 8,
                                "firstEvaluation": "action"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [bx_3DRETSe6zr-Dz_W-COQ::Test OPC options #1] Observable Controller Data Store",
                              "____description": "OPC [bx_3DRETSe6zr-Dz_W-COQ::Test OPC options #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 0,
                            "lastEvalResponse": null,
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "d7uW2Me4RjqeX3a2NjOodQ": {
                "harnessRequest": {
                  "id": "d7uW2Me4RjqeX3a2NjOodQ",
                  "name": "Test OPC options #2",
                  "description": "Construct an OPC instance specifying a zero max frame limit AND constructor evaluate #2 (fail evaluate in constructor).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "d7uW2Me4RjqeX3a2NjOodQ",
                            "name": "Test OPC options #2",
                            "description": "Construct an OPC instance specifying a zero max frame limit AND constructor evaluate #2 (fail evaluate in constructor).",
                            "options": {
                              "evaluate": {
                                "firstEvaluation": "constructor",
                                "maxFrames": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "d7uW2Me4RjqeX3a2NjOodQ": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor for [d7uW2Me4RjqeX3a2NjOodQ::Test OPC options #2] failed yielding a zombie instance. Failed while executing the first post-construction system evaluation: Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Unable to evaluate OPC state after executing controller action due to error: Filter [T7PiatEGTo2dbdy8jOMHQg::OPC Evaluation Filter] failed while performing main operation. Max evaluation frame limit of 0 was reached before evaluation completed."
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "l2lMJRfpR7SwIMxriD-pRQ": {
                "harnessRequest": {
                  "id": "l2lMJRfpR7SwIMxriD-pRQ",
                  "name": "Test OPC options #3",
                  "description": "Construct an OPC instance specifying a zero max frame limit AND action evaluate #3 (fail on first call to act).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "l2lMJRfpR7SwIMxriD-pRQ",
                            "name": "Test OPC options #3",
                            "description": "Construct an OPC instance specifying a zero max frame limit AND action evaluate #3 (no fail because no act - naked constructed OPC).",
                            "options": {
                              "evaluate": {
                                "firstEvaluation": "action",
                                "maxFrames": 0
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "l2lMJRfpR7SwIMxriD-pRQ": {
                          "opcToJSON": {
                            "id": "l2lMJRfpR7SwIMxriD-pRQ",
                            "name": "Test OPC options #3",
                            "description": "Construct an OPC instance specifying a zero max frame limit AND action evaluate #3 (no fail because no act - naked constructed OPC).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 0,
                                "firstEvaluation": "action"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [l2lMJRfpR7SwIMxriD-pRQ::Test OPC options #3] Observable Controller Data Store",
                              "____description": "OPC [l2lMJRfpR7SwIMxriD-pRQ::Test OPC options #3] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 0,
                            "lastEvalResponse": null,
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "fNpBNE0uQ2GJWunuKe3_lA": {
                "harnessRequest": {
                  "id": "fNpBNE0uQ2GJWunuKe3_lA",
                  "name": "Test OPC options #4",
                  "description": "Construct an OPC instance specifying a zero max frame limit AND action evaluate #4 (fail on first call to OPC.act).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "fNpBNE0uQ2GJWunuKe3_lA",
                            "name": "Test OPC options #4",
                            "description": "Construct an OPC instance specifying a zero max frame limit AND action evaluate #4 (fail on first call to OPC.act).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 0,
                                "firstEvaluation": "action"
                              }
                            },
                            "controllerActionSets": [
                              [
                                "ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction].",
                                {
                                  "id": "93_stDeORb-9W_0d69fswg",
                                  "vdid": "IS9YhA05VYw8-LZaRmL6lQ",
                                  "name": "NOOP Controller Test Action #2",
                                  "description": "Do nothing test controller action plug-in filter #2."
                                },
                                {
                                  "id": "BO184bcvSzmr9oF4KJynSA",
                                  "vdid": "DTEravcHs42gN8ZPGBhE3A",
                                  "name": "NOOP Controller Test Action #3",
                                  "description": "Do nothing nothing test controller action plug-in filter #3."
                                },
                                {
                                  "id": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "vdid": "a_x-fJkOER7imRS5Q68NXQ",
                                  "name": "NOOP Controller Action #4 (w/result)",
                                  "description": "Do nothing test controller action plug-in filter #4 returns a result."
                                },
                                {
                                  "id": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "vdid": "k4YwBdpweV5exTRfWBFZPQ",
                                  "name": "Chain Action Call #1",
                                  "description": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results."
                                }
                              ]
                            ]
                          },
                          "actRequests": [
                            {
                              "actorName": "fNpBNE0uQ2GJWunuKe3_lA",
                              "actionRequest": {
                                "noop1": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "fNpBNE0uQ2GJWunuKe3_lA": {
                          "opcToJSON": {
                            "id": "fNpBNE0uQ2GJWunuKe3_lA",
                            "name": "Test OPC options #4",
                            "description": "Construct an OPC instance specifying a zero max frame limit AND action evaluate #4 (fail on first call to OPC.act).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 0,
                                "firstEvaluation": "action"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [fNpBNE0uQ2GJWunuKe3_lA::Test OPC options #4] Observable Controller Data Store",
                              "____description": "OPC [fNpBNE0uQ2GJWunuKe3_lA::Test OPC options #4] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "LlqzWeZjvfPUDWyQsgwdbg",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "u24-dFiMkOkzMM8T8Te3gw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "W0_H5xABO_sMZIGvFSLxUg",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "R1D0E_zqNVfQ-47tvrQUtA"
                              },
                              "supportedFilters": [
                                "[93_stDeORb-9W_0d69fswg::NOOP Controller Test Action #2]",
                                "[BO184bcvSzmr9oF4KJynSA::NOOP Controller Test Action #3]",
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[Zll03EOdQ-G6Q7UEEuAycg::Chain Action Call #1]",
                                "[xhOHH7qqQCira4Cz3ZVG_Q::NOOP Controller Action #4 (w/result)]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "93_stDeORb-9W_0d69fswg": {
                                "filterDescriptor": {
                                  "operationID": "93_stDeORb-9W_0d69fswg",
                                  "operationName": "NOOP Controller Test Action #2",
                                  "operationDescription": "Do nothing test controller action plug-in filter #2.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop1": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "QbBHNSXVFcllpVVIKPdIHA",
                                  "inputTypeVDID": "QEErGepbAOFg3hKz86l8xg",
                                  "outputTypeVIID": "gUIA-Cjc2TyIr5-2zpWFzw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "Y8rueZXEstaqrrqkOcyVBw"
                                }
                              },
                              "BO184bcvSzmr9oF4KJynSA": {
                                "filterDescriptor": {
                                  "operationID": "BO184bcvSzmr9oF4KJynSA",
                                  "operationName": "NOOP Controller Test Action #3",
                                  "operationDescription": "Do nothing nothing test controller action plug-in filter #3.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #3 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop2": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "DhS9wGiVKn64Be-BByEVwg",
                                  "inputTypeVDID": "BUErOIFbALlx3hK_KKl8lw",
                                  "outputTypeVIID": "lzZ25Vwzg8KsNwEwfqOZmA",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "O80MedV-MtZRXGKk6vMjBw"
                                }
                              },
                              "xhOHH7qqQCira4Cz3ZVG_Q": {
                                "filterDescriptor": {
                                  "operationID": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "operationName": "NOOP Controller Action #4 (w/result)",
                                  "operationDescription": "Do nothing test controller action plug-in filter #4 returns a result.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Action #4 (w/result) Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop3": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____types": "jsObject",
                                    "CONSPICUOUS_TEST_LABEL": {
                                      "____accept": "jsObject"
                                    }
                                  },
                                  "inputTypeVIID": "lZG21fJ7b-4P1U0jGj4PdQ",
                                  "inputTypeVDID": "4Xnvod7NcZFmhKSCMEqZ5g",
                                  "outputTypeVIID": "-pC_KCLLnNo0zkX_GmeExQ",
                                  "outputTypeVDID": "YueraIRFWIDosalGmQ2nYA",
                                  "operationVDID": "AxxGdB95O5-Bz7tQiOKymg"
                                }
                              },
                              "Zll03EOdQ-G6Q7UEEuAycg": {
                                "filterDescriptor": {
                                  "operationID": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "operationName": "Chain Action Call #1",
                                  "operationDescription": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results.",
                                  "inputFilterSpec": {
                                    "____label": "Chain Action Call #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "chainer1": {
                                        "____accept": "jsBoolean"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsObject"
                                  },
                                  "inputTypeVIID": "SHFy4eJvJ7sjdoUUIqKv5g",
                                  "inputTypeVDID": "iBH-coDFXQWfyY9bLP6Ojg",
                                  "outputTypeVIID": "Wp-1lxC0QNuwtb2YnjAbtg",
                                  "outputTypeVDID": "Pn9jkiuUyFDMIvHds8fQ2A",
                                  "operationVDID": "AbNfT3KXBxrW4U2IZ35AWA"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 0,
                            "lastEvalResponse": null,
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: Ignoring invalid ControllerAction class instance: ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction]."
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "actorName": "fNpBNE0uQ2GJWunuKe3_lA",
                                "actionRequest": {
                                  "noop1": true
                                }
                              },
                              "actResponse": {
                                "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Unable to evaluate OPC state after executing controller action due to error: Filter [T7PiatEGTo2dbdy8jOMHQg::OPC Evaluation Filter] failed while performing main operation. Max evaluation frame limit of 0 was reached before evaluation completed."
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "4nw2B9oVQYm1ZspZqotrRA": {
                "harnessRequest": {
                  "id": "4nw2B9oVQYm1ZspZqotrRA",
                  "name": "OCD template spec OPM binding #1",
                  "description": "OPM binding test #1: Baseline - registered OPM's but no declared bindigs.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "4nw2B9oVQYm1ZspZqotrRA",
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                  "name": "APM Test B",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "process": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorResponseError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                  "name": "APM Test C",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "process": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                  "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                  "name": "OPC Test D",
                                  "description": "A simple test APM",
                                  "process": {
                                    "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                    "description": "A simple test APM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "4nw2B9oVQYm1ZspZqotrRA": {
                          "opcToJSON": {
                            "id": "4nw2B9oVQYm1ZspZqotrRA",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "_vC2O7DGTZ22R5hvxpy0WQ": {
                                "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                "name": "APM Test A",
                                "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                "process": {
                                  "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "noneSuchOperator": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "SyCUD3kpQ8mtYbV5A_4BPA": {
                                "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                "name": "APM Test B",
                                "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                "process": {
                                  "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorResponseError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "Pkr1EErLSiiHQRt8gCaO0Q": {
                                "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                "name": "APM Test C",
                                "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                "process": {
                                  "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorThrowError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "ZFpRfMRETDqavS3EqEuv1Q": {
                                "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                "name": "OPC Test D",
                                "description": "A simple test APM",
                                "process": {
                                  "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                  "description": "A simple test APM",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [4nw2B9oVQYm1ZspZqotrRA::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [4nw2B9oVQYm1ZspZqotrRA::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "AhfYIOp_RQmS-a37emkj9A": {
                "harnessRequest": {
                  "id": "AhfYIOp_RQmS-a37emkj9A",
                  "name": "OPC.act dispatch #1 (bad request)",
                  "description": "Dispatch an OPC.act method with a bad request and no registered controller actions.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "AhfYIOp_RQmS-a37emkj9A",
                            "name": "OPC.act dispatch #1 (bad request)",
                            "description": "Dispatch an OPC.act method with a bad request and no registered controller actions."
                          },
                          "actRequests": [
                            {
                              "bogus": "Our OPCi has no registered actions. So, by definition this request will result in an error."
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "AhfYIOp_RQmS-a37emkj9A": {
                          "opcToJSON": {
                            "id": "AhfYIOp_RQmS-a37emkj9A",
                            "name": "OPC.act dispatch #1 (bad request)",
                            "description": "Dispatch an OPC.act method with a bad request and no registered controller actions.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [AhfYIOp_RQmS-a37emkj9A::OPC.act dispatch #1 (bad request)] Observable Controller Data Store",
                              "____description": "OPC [AhfYIOp_RQmS-a37emkj9A::OPC.act dispatch #1 (bad request)] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "bogus": "Our OPCi has no registered actions. So, by definition this request will result in an error."
                              },
                              "actResponse": {
                                "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while normalizing request input. Error at path '~.actorName': Value of type 'jsUndefined' not in allowed type set [jsString]."
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "mm9htD2iSuyVAPm9SFv-qw": {
                "harnessRequest": {
                  "id": "mm9htD2iSuyVAPm9SFv-qw",
                  "name": "OPC.act dispatch #2",
                  "description": "Dispatch an OPC.act method with a valid request and no registered controller actions.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "mm9htD2iSuyVAPm9SFv-qw",
                            "name": "OPC.act dispatch #2",
                            "description": "Dispatch an OPC.act method with a valid request and no registered controller actions."
                          },
                          "actRequests": [
                            {
                              "actorName": "Test Vector mm9htD2iSuyVAPm9SFv-qw",
                              "actorTaskDescription": "See what happens when I call OPC.act method with a valid request signature and no controller action plug-ins registered.",
                              "actionRequest": {
                                "bogus": "Still a bogus message. But, that doesn't matter because this isn't going to get dispatched in this example."
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "mm9htD2iSuyVAPm9SFv-qw": {
                          "opcToJSON": {
                            "id": "mm9htD2iSuyVAPm9SFv-qw",
                            "name": "OPC.act dispatch #2",
                            "description": "Dispatch an OPC.act method with a valid request and no registered controller actions.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [mm9htD2iSuyVAPm9SFv-qw::OPC.act dispatch #2] Observable Controller Data Store",
                              "____description": "OPC [mm9htD2iSuyVAPm9SFv-qw::OPC.act dispatch #2] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "actorName": "Test Vector mm9htD2iSuyVAPm9SFv-qw",
                                "actorTaskDescription": "See what happens when I call OPC.act method with a valid request signature and no controller action plug-ins registered.",
                                "actionRequest": {
                                  "bogus": "Still a bogus message. But, that doesn't matter because this isn't going to get dispatched in this example."
                                }
                              },
                              "actResponse": {
                                "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 1 discrimintor. Bad request format; this request cannot be processed by any of the ControllerAction's registered."
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "pUxcxo9STsG3OMWWrREHoQ": {
                "harnessRequest": {
                  "id": "pUxcxo9STsG3OMWWrREHoQ",
                  "name": "OPC.act dispatch #3",
                  "description": "Dispatch on OPC.act method with valid request signature and registered test controller actions.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "pUxcxo9STsG3OMWWrREHoQ",
                            "name": "OPC.arc dispatch #3",
                            "description": "Dispatch on OPC.act method with valid request signature and registered test controller actions.",
                            "controllerActionSets": [
                              [
                                "ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction].",
                                {
                                  "id": "93_stDeORb-9W_0d69fswg",
                                  "vdid": "IS9YhA05VYw8-LZaRmL6lQ",
                                  "name": "NOOP Controller Test Action #2",
                                  "description": "Do nothing test controller action plug-in filter #2."
                                },
                                {
                                  "id": "BO184bcvSzmr9oF4KJynSA",
                                  "vdid": "DTEravcHs42gN8ZPGBhE3A",
                                  "name": "NOOP Controller Test Action #3",
                                  "description": "Do nothing nothing test controller action plug-in filter #3."
                                },
                                {
                                  "id": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "vdid": "a_x-fJkOER7imRS5Q68NXQ",
                                  "name": "NOOP Controller Action #4 (w/result)",
                                  "description": "Do nothing test controller action plug-in filter #4 returns a result."
                                },
                                {
                                  "id": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "vdid": "k4YwBdpweV5exTRfWBFZPQ",
                                  "name": "Chain Action Call #1",
                                  "description": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results."
                                }
                              ]
                            ]
                          },
                          "actRequests": [
                            {
                              "actorName": "Test Vector pUxcxo9STsG3OMWWrREHoQ",
                              "actorTaskDescription": "Attempt to call into a registered ControllerAction plug-in.",
                              "actionRequest": {
                                "noop1": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "pUxcxo9STsG3OMWWrREHoQ": {
                          "opcToJSON": {
                            "id": "pUxcxo9STsG3OMWWrREHoQ",
                            "name": "OPC.arc dispatch #3",
                            "description": "Dispatch on OPC.act method with valid request signature and registered test controller actions.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [pUxcxo9STsG3OMWWrREHoQ::OPC.arc dispatch #3] Observable Controller Data Store",
                              "____description": "OPC [pUxcxo9STsG3OMWWrREHoQ::OPC.arc dispatch #3] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "LlqzWeZjvfPUDWyQsgwdbg",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "u24-dFiMkOkzMM8T8Te3gw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "W0_H5xABO_sMZIGvFSLxUg",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "R1D0E_zqNVfQ-47tvrQUtA"
                              },
                              "supportedFilters": [
                                "[93_stDeORb-9W_0d69fswg::NOOP Controller Test Action #2]",
                                "[BO184bcvSzmr9oF4KJynSA::NOOP Controller Test Action #3]",
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[Zll03EOdQ-G6Q7UEEuAycg::Chain Action Call #1]",
                                "[xhOHH7qqQCira4Cz3ZVG_Q::NOOP Controller Action #4 (w/result)]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "93_stDeORb-9W_0d69fswg": {
                                "filterDescriptor": {
                                  "operationID": "93_stDeORb-9W_0d69fswg",
                                  "operationName": "NOOP Controller Test Action #2",
                                  "operationDescription": "Do nothing test controller action plug-in filter #2.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop1": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "QbBHNSXVFcllpVVIKPdIHA",
                                  "inputTypeVDID": "QEErGepbAOFg3hKz86l8xg",
                                  "outputTypeVIID": "gUIA-Cjc2TyIr5-2zpWFzw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "Y8rueZXEstaqrrqkOcyVBw"
                                }
                              },
                              "BO184bcvSzmr9oF4KJynSA": {
                                "filterDescriptor": {
                                  "operationID": "BO184bcvSzmr9oF4KJynSA",
                                  "operationName": "NOOP Controller Test Action #3",
                                  "operationDescription": "Do nothing nothing test controller action plug-in filter #3.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #3 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop2": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "DhS9wGiVKn64Be-BByEVwg",
                                  "inputTypeVDID": "BUErOIFbALlx3hK_KKl8lw",
                                  "outputTypeVIID": "lzZ25Vwzg8KsNwEwfqOZmA",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "O80MedV-MtZRXGKk6vMjBw"
                                }
                              },
                              "xhOHH7qqQCira4Cz3ZVG_Q": {
                                "filterDescriptor": {
                                  "operationID": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "operationName": "NOOP Controller Action #4 (w/result)",
                                  "operationDescription": "Do nothing test controller action plug-in filter #4 returns a result.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Action #4 (w/result) Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop3": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____types": "jsObject",
                                    "CONSPICUOUS_TEST_LABEL": {
                                      "____accept": "jsObject"
                                    }
                                  },
                                  "inputTypeVIID": "lZG21fJ7b-4P1U0jGj4PdQ",
                                  "inputTypeVDID": "4Xnvod7NcZFmhKSCMEqZ5g",
                                  "outputTypeVIID": "-pC_KCLLnNo0zkX_GmeExQ",
                                  "outputTypeVDID": "YueraIRFWIDosalGmQ2nYA",
                                  "operationVDID": "AxxGdB95O5-Bz7tQiOKymg"
                                }
                              },
                              "Zll03EOdQ-G6Q7UEEuAycg": {
                                "filterDescriptor": {
                                  "operationID": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "operationName": "Chain Action Call #1",
                                  "operationDescription": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results.",
                                  "inputFilterSpec": {
                                    "____label": "Chain Action Call #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "chainer1": {
                                        "____accept": "jsBoolean"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsObject"
                                  },
                                  "inputTypeVIID": "SHFy4eJvJ7sjdoUUIqKv5g",
                                  "inputTypeVDID": "iBH-coDFXQWfyY9bLP6Ojg",
                                  "outputTypeVIID": "Wp-1lxC0QNuwtb2YnjAbtg",
                                  "outputTypeVDID": "Pn9jkiuUyFDMIvHds8fQ2A",
                                  "operationVDID": "AbNfT3KXBxrW4U2IZ35AWA"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: Ignoring invalid ControllerAction class instance: ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction]."
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "actorName": "Test Vector pUxcxo9STsG3OMWWrREHoQ",
                                "actorTaskDescription": "Attempt to call into a registered ControllerAction plug-in.",
                                "actionRequest": {
                                  "noop1": true
                                }
                              },
                              "actResponse": {
                                "error": null,
                                "result": {
                                  "lastEvaluation": {
                                    "evalNumber": 1,
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "frames": 1,
                                        "errors": 0,
                                        "transitions": 0
                                      }
                                    },
                                    "evalFrames": [
                                      {
                                        "summary": {
                                          "counts": {
                                            "bindings": 0,
                                            "transitions": 0,
                                            "errors": 0
                                          },
                                          "reports": {
                                            "transitions": [],
                                            "errors": []
                                          }
                                        },
                                        "bindings": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "eyJdms-IQR-_ebGiXP308g": {
                "harnessRequest": {
                  "id": "eyJdms-IQR-_ebGiXP308g",
                  "name": "OPC.act dispatch #4",
                  "description": "Dispatch OPC.act method with a valid request that invokes a ControllerAction that returns a result value.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "eyJdms-IQR-_ebGiXP308g",
                            "name": "OPC.act dispatch #4",
                            "description": "Dispatch OPC.act method with a valid request that invokes a ControllerAction that returns a result value.",
                            "controllerActionSets": [
                              [
                                "ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction].",
                                {
                                  "id": "93_stDeORb-9W_0d69fswg",
                                  "vdid": "IS9YhA05VYw8-LZaRmL6lQ",
                                  "name": "NOOP Controller Test Action #2",
                                  "description": "Do nothing test controller action plug-in filter #2."
                                },
                                {
                                  "id": "BO184bcvSzmr9oF4KJynSA",
                                  "vdid": "DTEravcHs42gN8ZPGBhE3A",
                                  "name": "NOOP Controller Test Action #3",
                                  "description": "Do nothing nothing test controller action plug-in filter #3."
                                },
                                {
                                  "id": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "vdid": "a_x-fJkOER7imRS5Q68NXQ",
                                  "name": "NOOP Controller Action #4 (w/result)",
                                  "description": "Do nothing test controller action plug-in filter #4 returns a result."
                                },
                                {
                                  "id": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "vdid": "k4YwBdpweV5exTRfWBFZPQ",
                                  "name": "Chain Action Call #1",
                                  "description": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results."
                                }
                              ]
                            ]
                          },
                          "actRequests": [
                            {
                              "actorName": "Test Vector eyJdms-IQR-_ebGiXP308g",
                              "actorTaskDescription": "Attempt to call NOOP Controller Action #4 xhOHH7qqQCira4Cz3ZVG_Q",
                              "actionRequest": {
                                "noop3": {
                                  "CONSPICUOUS_VALUE_PASSED_BY_ACTOR": "Hello, this is an actor-supplied value to be returned via the response.result by the ControllerAction."
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "eyJdms-IQR-_ebGiXP308g": {
                          "opcToJSON": {
                            "id": "eyJdms-IQR-_ebGiXP308g",
                            "name": "OPC.act dispatch #4",
                            "description": "Dispatch OPC.act method with a valid request that invokes a ControllerAction that returns a result value.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [eyJdms-IQR-_ebGiXP308g::OPC.act dispatch #4] Observable Controller Data Store",
                              "____description": "OPC [eyJdms-IQR-_ebGiXP308g::OPC.act dispatch #4] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "LlqzWeZjvfPUDWyQsgwdbg",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "u24-dFiMkOkzMM8T8Te3gw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "W0_H5xABO_sMZIGvFSLxUg",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "R1D0E_zqNVfQ-47tvrQUtA"
                              },
                              "supportedFilters": [
                                "[93_stDeORb-9W_0d69fswg::NOOP Controller Test Action #2]",
                                "[BO184bcvSzmr9oF4KJynSA::NOOP Controller Test Action #3]",
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[Zll03EOdQ-G6Q7UEEuAycg::Chain Action Call #1]",
                                "[xhOHH7qqQCira4Cz3ZVG_Q::NOOP Controller Action #4 (w/result)]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "93_stDeORb-9W_0d69fswg": {
                                "filterDescriptor": {
                                  "operationID": "93_stDeORb-9W_0d69fswg",
                                  "operationName": "NOOP Controller Test Action #2",
                                  "operationDescription": "Do nothing test controller action plug-in filter #2.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop1": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "QbBHNSXVFcllpVVIKPdIHA",
                                  "inputTypeVDID": "QEErGepbAOFg3hKz86l8xg",
                                  "outputTypeVIID": "gUIA-Cjc2TyIr5-2zpWFzw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "Y8rueZXEstaqrrqkOcyVBw"
                                }
                              },
                              "BO184bcvSzmr9oF4KJynSA": {
                                "filterDescriptor": {
                                  "operationID": "BO184bcvSzmr9oF4KJynSA",
                                  "operationName": "NOOP Controller Test Action #3",
                                  "operationDescription": "Do nothing nothing test controller action plug-in filter #3.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #3 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop2": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "DhS9wGiVKn64Be-BByEVwg",
                                  "inputTypeVDID": "BUErOIFbALlx3hK_KKl8lw",
                                  "outputTypeVIID": "lzZ25Vwzg8KsNwEwfqOZmA",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "O80MedV-MtZRXGKk6vMjBw"
                                }
                              },
                              "xhOHH7qqQCira4Cz3ZVG_Q": {
                                "filterDescriptor": {
                                  "operationID": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "operationName": "NOOP Controller Action #4 (w/result)",
                                  "operationDescription": "Do nothing test controller action plug-in filter #4 returns a result.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Action #4 (w/result) Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop3": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____types": "jsObject",
                                    "CONSPICUOUS_TEST_LABEL": {
                                      "____accept": "jsObject"
                                    }
                                  },
                                  "inputTypeVIID": "lZG21fJ7b-4P1U0jGj4PdQ",
                                  "inputTypeVDID": "4Xnvod7NcZFmhKSCMEqZ5g",
                                  "outputTypeVIID": "-pC_KCLLnNo0zkX_GmeExQ",
                                  "outputTypeVDID": "YueraIRFWIDosalGmQ2nYA",
                                  "operationVDID": "AxxGdB95O5-Bz7tQiOKymg"
                                }
                              },
                              "Zll03EOdQ-G6Q7UEEuAycg": {
                                "filterDescriptor": {
                                  "operationID": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "operationName": "Chain Action Call #1",
                                  "operationDescription": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results.",
                                  "inputFilterSpec": {
                                    "____label": "Chain Action Call #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "chainer1": {
                                        "____accept": "jsBoolean"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsObject"
                                  },
                                  "inputTypeVIID": "SHFy4eJvJ7sjdoUUIqKv5g",
                                  "inputTypeVDID": "iBH-coDFXQWfyY9bLP6Ojg",
                                  "outputTypeVIID": "Wp-1lxC0QNuwtb2YnjAbtg",
                                  "outputTypeVDID": "Pn9jkiuUyFDMIvHds8fQ2A",
                                  "operationVDID": "AbNfT3KXBxrW4U2IZ35AWA"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: Ignoring invalid ControllerAction class instance: ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction]."
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "actorName": "Test Vector eyJdms-IQR-_ebGiXP308g",
                                "actorTaskDescription": "Attempt to call NOOP Controller Action #4 xhOHH7qqQCira4Cz3ZVG_Q",
                                "actionRequest": {
                                  "noop3": {
                                    "CONSPICUOUS_VALUE_PASSED_BY_ACTOR": "Hello, this is an actor-supplied value to be returned via the response.result by the ControllerAction."
                                  }
                                }
                              },
                              "actResponse": {
                                "error": null,
                                "result": {
                                  "actionResult": {
                                    "CONSPICUOUS_TEST_LABEL": {
                                      "CONSPICUOUS_VALUE_PASSED_BY_ACTOR": "Hello, this is an actor-supplied value to be returned via the response.result by the ControllerAction."
                                    }
                                  },
                                  "lastEvaluation": {
                                    "evalNumber": 1,
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "frames": 1,
                                        "errors": 0,
                                        "transitions": 0
                                      }
                                    },
                                    "evalFrames": [
                                      {
                                        "summary": {
                                          "counts": {
                                            "bindings": 0,
                                            "transitions": 0,
                                            "errors": 0
                                          },
                                          "reports": {
                                            "transitions": [],
                                            "errors": []
                                          }
                                        },
                                        "bindings": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "vHzKNXxvS8Sp-LpbJ5NlUQ": {
                "harnessRequest": {
                  "id": "vHzKNXxvS8Sp-LpbJ5NlUQ",
                  "name": "OPC.act dispatch #5",
                  "description": "Dispatch OPC.act method with valid request that invokes a ControllerAction that calls a ControllerAction to to check return value handling.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "vHzKNXxvS8Sp-LpbJ5NlUQ",
                            "name": "OPC.act dispatch #5",
                            "description": "Dispatch OPC.act method with valid request that invokes a ControllerAction that calls a ControllerAction to to check return value handling.",
                            "controllerActionSets": [
                              [
                                "ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction].",
                                {
                                  "id": "93_stDeORb-9W_0d69fswg",
                                  "vdid": "IS9YhA05VYw8-LZaRmL6lQ",
                                  "name": "NOOP Controller Test Action #2",
                                  "description": "Do nothing test controller action plug-in filter #2."
                                },
                                {
                                  "id": "BO184bcvSzmr9oF4KJynSA",
                                  "vdid": "DTEravcHs42gN8ZPGBhE3A",
                                  "name": "NOOP Controller Test Action #3",
                                  "description": "Do nothing nothing test controller action plug-in filter #3."
                                },
                                {
                                  "id": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "vdid": "a_x-fJkOER7imRS5Q68NXQ",
                                  "name": "NOOP Controller Action #4 (w/result)",
                                  "description": "Do nothing test controller action plug-in filter #4 returns a result."
                                },
                                {
                                  "id": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "vdid": "k4YwBdpweV5exTRfWBFZPQ",
                                  "name": "Chain Action Call #1",
                                  "description": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results."
                                }
                              ]
                            ]
                          },
                          "actRequests": [
                            {
                              "actorName": "Test Vector vHzKNXxvS8Sp-LpbJ5NlUQ",
                              "actorTaskDescription": "Attempt to  call chain action #1 Zll03EOdQ-G6Q7UEEuAycg.",
                              "actionRequest": {
                                "chainer1": true
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "vHzKNXxvS8Sp-LpbJ5NlUQ": {
                          "opcToJSON": {
                            "id": "vHzKNXxvS8Sp-LpbJ5NlUQ",
                            "name": "OPC.act dispatch #5",
                            "description": "Dispatch OPC.act method with valid request that invokes a ControllerAction that calls a ControllerAction to to check return value handling.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [vHzKNXxvS8Sp-LpbJ5NlUQ::OPC.act dispatch #5] Observable Controller Data Store",
                              "____description": "OPC [vHzKNXxvS8Sp-LpbJ5NlUQ::OPC.act dispatch #5] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "LlqzWeZjvfPUDWyQsgwdbg",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "u24-dFiMkOkzMM8T8Te3gw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "W0_H5xABO_sMZIGvFSLxUg",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "R1D0E_zqNVfQ-47tvrQUtA"
                              },
                              "supportedFilters": [
                                "[93_stDeORb-9W_0d69fswg::NOOP Controller Test Action #2]",
                                "[BO184bcvSzmr9oF4KJynSA::NOOP Controller Test Action #3]",
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[Zll03EOdQ-G6Q7UEEuAycg::Chain Action Call #1]",
                                "[xhOHH7qqQCira4Cz3ZVG_Q::NOOP Controller Action #4 (w/result)]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "93_stDeORb-9W_0d69fswg": {
                                "filterDescriptor": {
                                  "operationID": "93_stDeORb-9W_0d69fswg",
                                  "operationName": "NOOP Controller Test Action #2",
                                  "operationDescription": "Do nothing test controller action plug-in filter #2.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop1": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "QbBHNSXVFcllpVVIKPdIHA",
                                  "inputTypeVDID": "QEErGepbAOFg3hKz86l8xg",
                                  "outputTypeVIID": "gUIA-Cjc2TyIr5-2zpWFzw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "Y8rueZXEstaqrrqkOcyVBw"
                                }
                              },
                              "BO184bcvSzmr9oF4KJynSA": {
                                "filterDescriptor": {
                                  "operationID": "BO184bcvSzmr9oF4KJynSA",
                                  "operationName": "NOOP Controller Test Action #3",
                                  "operationDescription": "Do nothing nothing test controller action plug-in filter #3.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Test Action #3 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop2": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "DhS9wGiVKn64Be-BByEVwg",
                                  "inputTypeVDID": "BUErOIFbALlx3hK_KKl8lw",
                                  "outputTypeVIID": "lzZ25Vwzg8KsNwEwfqOZmA",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "O80MedV-MtZRXGKk6vMjBw"
                                }
                              },
                              "xhOHH7qqQCira4Cz3ZVG_Q": {
                                "filterDescriptor": {
                                  "operationID": "xhOHH7qqQCira4Cz3ZVG_Q",
                                  "operationName": "NOOP Controller Action #4 (w/result)",
                                  "operationDescription": "Do nothing test controller action plug-in filter #4 returns a result.",
                                  "inputFilterSpec": {
                                    "____label": "NOOP Controller Action #4 (w/result) Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "noop3": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____types": "jsObject",
                                    "CONSPICUOUS_TEST_LABEL": {
                                      "____accept": "jsObject"
                                    }
                                  },
                                  "inputTypeVIID": "lZG21fJ7b-4P1U0jGj4PdQ",
                                  "inputTypeVDID": "4Xnvod7NcZFmhKSCMEqZ5g",
                                  "outputTypeVIID": "-pC_KCLLnNo0zkX_GmeExQ",
                                  "outputTypeVDID": "YueraIRFWIDosalGmQ2nYA",
                                  "operationVDID": "AxxGdB95O5-Bz7tQiOKymg"
                                }
                              },
                              "Zll03EOdQ-G6Q7UEEuAycg": {
                                "filterDescriptor": {
                                  "operationID": "Zll03EOdQ-G6Q7UEEuAycg",
                                  "operationName": "Chain Action Call #1",
                                  "operationDescription": "A simple ControllerAction that calls another ControllerAction to ensure that nested calls to OPC.act correctly return results.",
                                  "inputFilterSpec": {
                                    "____label": "Chain Action Call #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "chainer1": {
                                        "____accept": "jsBoolean"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsObject"
                                  },
                                  "inputTypeVIID": "SHFy4eJvJ7sjdoUUIqKv5g",
                                  "inputTypeVDID": "iBH-coDFXQWfyY9bLP6Ojg",
                                  "outputTypeVIID": "Wp-1lxC0QNuwtb2YnjAbtg",
                                  "outputTypeVDID": "Pn9jkiuUyFDMIvHds8fQ2A",
                                  "operationVDID": "AbNfT3KXBxrW4U2IZ35AWA"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 0,
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No AbstractProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: Ignoring invalid ControllerAction class instance: ControllerAction::constructor for [BO184bcvSzmr9oF4KJynSA::Bogus Controller Test Action #1] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.bodyFunction': Value of type 'jsUndefined' not in allowed type set [jsFunction]."
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "actorName": "Test Vector vHzKNXxvS8Sp-LpbJ5NlUQ",
                                "actorTaskDescription": "Attempt to  call chain action #1 Zll03EOdQ-G6Q7UEEuAycg.",
                                "actionRequest": {
                                  "chainer1": true
                                }
                              },
                              "actResponse": {
                                "error": null,
                                "result": {
                                  "actionResult": {
                                    "actionResult": {
                                      "CONSPICUOUS_TEST_LABEL": {
                                        "MESSAGE_FROM_CHAIN_ACTION_CALL": {
                                          "test": "whatever"
                                        }
                                      }
                                    }
                                  },
                                  "lastEvaluation": {
                                    "evalNumber": 1,
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "frames": 1,
                                        "errors": 0,
                                        "transitions": 0
                                      }
                                    },
                                    "evalFrames": [
                                      {
                                        "summary": {
                                          "counts": {
                                            "bindings": 0,
                                            "transitions": 0,
                                            "errors": 0
                                          },
                                          "reports": {
                                            "transitions": [],
                                            "errors": []
                                          }
                                        },
                                        "bindings": {}
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "l0vKq8yVRsm73LoMev8ItA": {
                "harnessRequest": {
                  "id": "l0vKq8yVRsm73LoMev8ItA",
                  "name": "OPC Evaluate Operator Test #1",
                  "description": "Test transition operator failure (no transition operators registered).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "l0vKq8yVRsm73LoMev8ItA",
                            "name": "OPC Operator Test #1",
                            "description": "Test transition operator failure (no transition operators registered).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "_vC2O7DGTZ22R5hvxpy0WQ"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                  "name": "APM Test B",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "process": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorResponseError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                  "name": "APM Test C",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "process": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                  "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                  "name": "OPC Test D",
                                  "description": "A simple test APM",
                                  "process": {
                                    "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                    "description": "A simple test APM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "l0vKq8yVRsm73LoMev8ItA": {
                          "opcToJSON": {
                            "id": "l0vKq8yVRsm73LoMev8ItA",
                            "name": "OPC Operator Test #1",
                            "description": "Test transition operator failure (no transition operators registered).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "_vC2O7DGTZ22R5hvxpy0WQ": {
                                "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                "name": "APM Test A",
                                "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                "process": {
                                  "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "noneSuchOperator": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "SyCUD3kpQ8mtYbV5A_4BPA": {
                                "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                "name": "APM Test B",
                                "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                "process": {
                                  "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorResponseError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "Pkr1EErLSiiHQRt8gCaO0Q": {
                                "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                "name": "APM Test C",
                                "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                "process": {
                                  "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorThrowError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "ZFpRfMRETDqavS3EqEuv1Q": {
                                "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                "name": "OPC Test D",
                                "description": "A simple test APM",
                                "process": {
                                  "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                  "description": "A simple test APM",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "_vC2O7DGTZ22R5hvxpy0WQ"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [l0vKq8yVRsm73LoMev8ItA::OPC Operator Test #1] Observable Controller Data Store",
                              "____description": "OPC [l0vKq8yVRsm73LoMev8ItA::OPC Operator Test #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "_vC2O7DGTZ22R5hvxpy0WQ"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {},
                            "transitionDispatcherFilterMap": {},
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                            "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                            "name": "APM Test A",
                                            "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                            "process": {
                                              "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                              "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "noneSuchOperator": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {}
                                                  },
                                                  "operatorRequest": {
                                                    "noneSuchOperator": true
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator request rejected by MDR phase 1 discriminator. Bad request format; this request cannot be processed by any of the TransitionOperator's registered.",
                                                  "result": "No TransitionOperator class instances registered!"
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No TransitionOperator class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "TenISiGcTG-06LhZuBzJNQ": {
                "harnessRequest": {
                  "id": "TenISiGcTG-06LhZuBzJNQ",
                  "name": "OPC Evaluate Operator Test #2",
                  "description": "Test transition operator failure (bad operator request message).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "TenISiGcTG-06LhZuBzJNQ",
                            "name": "OPC Operator Test #2",
                            "description": "Test transition operator failure (bad operator request message).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "_vC2O7DGTZ22R5hvxpy0WQ"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                  "name": "APM Test B",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "process": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorResponseError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                  "name": "APM Test C",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "process": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                  "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                  "name": "OPC Test D",
                                  "description": "A simple test APM",
                                  "process": {
                                    "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                    "description": "A simple test APM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "TenISiGcTG-06LhZuBzJNQ": {
                          "opcToJSON": {
                            "id": "TenISiGcTG-06LhZuBzJNQ",
                            "name": "OPC Operator Test #2",
                            "description": "Test transition operator failure (bad operator request message).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "_vC2O7DGTZ22R5hvxpy0WQ": {
                                "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                "name": "APM Test A",
                                "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                "process": {
                                  "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "noneSuchOperator": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "SyCUD3kpQ8mtYbV5A_4BPA": {
                                "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                "name": "APM Test B",
                                "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                "process": {
                                  "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorResponseError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "Pkr1EErLSiiHQRt8gCaO0Q": {
                                "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                "name": "APM Test C",
                                "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                "process": {
                                  "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorThrowError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "ZFpRfMRETDqavS3EqEuv1Q": {
                                "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                "name": "OPC Test D",
                                "description": "A simple test APM",
                                "process": {
                                  "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                  "description": "A simple test APM",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "_vC2O7DGTZ22R5hvxpy0WQ"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [TenISiGcTG-06LhZuBzJNQ::OPC Operator Test #2] Observable Controller Data Store",
                              "____description": "OPC [TenISiGcTG-06LhZuBzJNQ::OPC Operator Test #2] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "_vC2O7DGTZ22R5hvxpy0WQ"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                            "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                            "name": "APM Test A",
                                            "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                            "process": {
                                              "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                              "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "noneSuchOperator": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "noneSuchOperator": true
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator request rejected by MDR phase 1 discriminator. Bad request format; this request cannot be processed by any of the TransitionOperator's registered.",
                                                  "result": "Filter [CMvz9x30nfjuykt8A93fQA::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator], [2w7n6KxdR8mdIliePJesLQ::OCD Compare Values], [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator], [TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator], [UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set], [XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value], [YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator], [e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.], [ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value], [k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value], [kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy], [oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]}."
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "KGh0Va-oTXKPUZmnDG4QPQ": {
                "harnessRequest": {
                  "id": "KGh0Va-oTXKPUZmnDG4QPQ",
                  "name": "OPC Evaluate Operator Test #3",
                  "description": "Test transition operator failure (bad operator returns transport error).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "KGh0Va-oTXKPUZmnDG4QPQ",
                            "name": "OPC Evaluate Operator Test #3",
                            "description": "Test transition operator failure (bad operator returns transport error).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "SyCUD3kpQ8mtYbV5A_4BPA"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                  "name": "APM Test B",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "process": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorResponseError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                  "name": "APM Test C",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "process": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                  "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                  "name": "OPC Test D",
                                  "description": "A simple test APM",
                                  "process": {
                                    "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                    "description": "A simple test APM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              [
                                {
                                  "id": "AODn0L3GQLK_21Msl1W8-g",
                                  "vdid": "7Igs57YsxhAFi-VMb4nVEw",
                                  "name": "Bad Transition Operator #1",
                                  "description": "A TransitionOperator instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "ZdpLuggZRVaMI6aPW1mmUw",
                                  "vdid": "WyNb5t__j_MADNYF8ZqWEA",
                                  "name": "Bad Transition Operator #2",
                                  "description": "A TransitionOperator instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "KGh0Va-oTXKPUZmnDG4QPQ": {
                          "opcToJSON": {
                            "id": "KGh0Va-oTXKPUZmnDG4QPQ",
                            "name": "OPC Evaluate Operator Test #3",
                            "description": "Test transition operator failure (bad operator returns transport error).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "_vC2O7DGTZ22R5hvxpy0WQ": {
                                "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                "name": "APM Test A",
                                "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                "process": {
                                  "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "noneSuchOperator": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "SyCUD3kpQ8mtYbV5A_4BPA": {
                                "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                "name": "APM Test B",
                                "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                "process": {
                                  "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorResponseError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "Pkr1EErLSiiHQRt8gCaO0Q": {
                                "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                "name": "APM Test C",
                                "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                "process": {
                                  "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorThrowError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "ZFpRfMRETDqavS3EqEuv1Q": {
                                "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                "name": "OPC Test D",
                                "description": "A simple test APM",
                                "process": {
                                  "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                  "description": "A simple test APM",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                  "name": "APM Test B",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "process": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorResponseError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "SyCUD3kpQ8mtYbV5A_4BPA"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [KGh0Va-oTXKPUZmnDG4QPQ::OPC Evaluate Operator Test #3] Observable Controller Data Store",
                              "____description": "OPC [KGh0Va-oTXKPUZmnDG4QPQ::OPC Evaluate Operator Test #3] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "SyCUD3kpQ8mtYbV5A_4BPA"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Uv2sAs4kf6nGZS4sZ_43Hg",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "zzojZTPF8W9-vTIlue16Gw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "1_O-kpoC7d6TCQWgdW5VzA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "CSX0E1ZTNVfTHY7t-T0UtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[ZdpLuggZRVaMI6aPW1mmUw::Bad Transition Operator #2]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              },
                              "AODn0L3GQLK_21Msl1W8-g": {
                                "filterDescriptor": {
                                  "operationID": "AODn0L3GQLK_21Msl1W8-g",
                                  "operationName": "Bad Transition Operator #1",
                                  "operationDescription": "A TransitionOperator instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Transition Operator #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "badTransitionOperatorResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "fcGtxyvuqlkqDpUA1XVQaw",
                                  "inputTypeVDID": "F2xhd9n9VI0CzdHKXfRAHQ",
                                  "outputTypeVIID": "x1HY9UsShOVVJgsxt0rzRg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "Zko4RD6NyJM3vFKcwnjWcg"
                                }
                              },
                              "ZdpLuggZRVaMI6aPW1mmUw": {
                                "filterDescriptor": {
                                  "operationID": "ZdpLuggZRVaMI6aPW1mmUw",
                                  "operationName": "Bad Transition Operator #2",
                                  "operationDescription": "A TransitionOperator instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Transition Operator #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "badTransitionOperatorThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "LHEwWfMqQsfOeqyFrPJi0w",
                                  "inputTypeVDID": "ff4fmdA7fQLkcXkOvlk-Ng",
                                  "outputTypeVIID": "CNg4lV4XH5Z6CrL5wgOs_g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "awkpRKERsZOw_YacfOGycg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                            "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                            "name": "APM Test B",
                                            "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                            "process": {
                                              "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                              "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "badTransitionOperatorResponseError": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "Uv2sAs4kf6nGZS4sZ_43Hg",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "zzojZTPF8W9-vTIlue16Gw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "1_O-kpoC7d6TCQWgdW5VzA",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "CSX0E1ZTNVfTHY7t-T0UtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[ZdpLuggZRVaMI6aPW1mmUw::Bad Transition Operator #2]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "badTransitionOperatorResponseError": true
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator request rejected by MDR phase 2 router. The selected TransitionOperator filter [AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1] rejected the request with error: Filter [AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1] failed while performing main operation. This transition operator is hardwired to return an error."
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "rFcPAwRGRsOlJSXBZOdwNA": {
                "harnessRequest": {
                  "id": "rFcPAwRGRsOlJSXBZOdwNA",
                  "name": "OPC Evaluate Operator Test #4",
                  "description": "Test transition operator failure (bad operator throws exception from bodyFunction).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "rFcPAwRGRsOlJSXBZOdwNA",
                            "name": "OPC Evaluate Operator Test #4",
                            "description": "Test transition operator failure (bad operator throws exception from bodyFunction).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Pkr1EErLSiiHQRt8gCaO0Q"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                  "name": "APM Test A",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "process": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "noneSuchOperator": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                  "name": "APM Test B",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "process": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorResponseError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                  "name": "APM Test C",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "process": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                  "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                  "name": "OPC Test D",
                                  "description": "A simple test APM",
                                  "process": {
                                    "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                    "description": "A simple test APM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              [
                                {
                                  "id": "AODn0L3GQLK_21Msl1W8-g",
                                  "vdid": "7Igs57YsxhAFi-VMb4nVEw",
                                  "name": "Bad Transition Operator #1",
                                  "description": "A TransitionOperator instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "ZdpLuggZRVaMI6aPW1mmUw",
                                  "vdid": "WyNb5t__j_MADNYF8ZqWEA",
                                  "name": "Bad Transition Operator #2",
                                  "description": "A TransitionOperator instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "rFcPAwRGRsOlJSXBZOdwNA": {
                          "opcToJSON": {
                            "id": "rFcPAwRGRsOlJSXBZOdwNA",
                            "name": "OPC Evaluate Operator Test #4",
                            "description": "Test transition operator failure (bad operator throws exception from bodyFunction).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "_vC2O7DGTZ22R5hvxpy0WQ": {
                                "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                "vdid": "qgjH9A5Au2A1se3eieqsdw",
                                "name": "APM Test A",
                                "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                "process": {
                                  "name": "[_vC2O7DGTZ22R5hvxpy0WQ::APM Test A] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - no registered actions/no-plug-in for request).",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "noneSuchOperator": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "SyCUD3kpQ8mtYbV5A_4BPA": {
                                "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                "vdid": "ZKyheWsH6krWyUusZ1lcXg",
                                "name": "APM Test B",
                                "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                "process": {
                                  "name": "[SyCUD3kpQ8mtYbV5A_4BPA::APM Test B] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator returns transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorResponseError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "Pkr1EErLSiiHQRt8gCaO0Q": {
                                "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                "name": "APM Test C",
                                "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                "process": {
                                  "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "badTransitionOperatorThrowError": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "ZFpRfMRETDqavS3EqEuv1Q": {
                                "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                "vdid": "7PiiN-tBNKjWvrLtKUaGIQ",
                                "name": "OPC Test D",
                                "description": "A simple test APM",
                                "process": {
                                  "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] APM Digraph",
                                  "description": "A simple test APM",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                  "name": "APM Test C",
                                  "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                  "process": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                    "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "badTransitionOperatorThrowError": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Pkr1EErLSiiHQRt8gCaO0Q"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [rFcPAwRGRsOlJSXBZOdwNA::OPC Evaluate Operator Test #4] Observable Controller Data Store",
                              "____description": "OPC [rFcPAwRGRsOlJSXBZOdwNA::OPC Evaluate Operator Test #4] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Pkr1EErLSiiHQRt8gCaO0Q"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Uv2sAs4kf6nGZS4sZ_43Hg",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "zzojZTPF8W9-vTIlue16Gw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "1_O-kpoC7d6TCQWgdW5VzA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "CSX0E1ZTNVfTHY7t-T0UtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[ZdpLuggZRVaMI6aPW1mmUw::Bad Transition Operator #2]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              },
                              "AODn0L3GQLK_21Msl1W8-g": {
                                "filterDescriptor": {
                                  "operationID": "AODn0L3GQLK_21Msl1W8-g",
                                  "operationName": "Bad Transition Operator #1",
                                  "operationDescription": "A TransitionOperator instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Transition Operator #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "badTransitionOperatorResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "fcGtxyvuqlkqDpUA1XVQaw",
                                  "inputTypeVDID": "F2xhd9n9VI0CzdHKXfRAHQ",
                                  "outputTypeVIID": "x1HY9UsShOVVJgsxt0rzRg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "Zko4RD6NyJM3vFKcwnjWcg"
                                }
                              },
                              "ZdpLuggZRVaMI6aPW1mmUw": {
                                "filterDescriptor": {
                                  "operationID": "ZdpLuggZRVaMI6aPW1mmUw",
                                  "operationName": "Bad Transition Operator #2",
                                  "operationDescription": "A TransitionOperator instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Transition Operator #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "badTransitionOperatorThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "LHEwWfMqQsfOeqyFrPJi0w",
                                  "inputTypeVDID": "ff4fmdA7fQLkcXkOvlk-Ng",
                                  "outputTypeVIID": "CNg4lV4XH5Z6CrL5wgOs_g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "awkpRKERsZOw_YacfOGycg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                            "vdid": "LMXQ5QCPPf8iYpPkqG2qOw",
                                            "name": "APM Test C",
                                            "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                            "process": {
                                              "name": "[Pkr1EErLSiiHQRt8gCaO0Q::APM Test C] APM Digraph",
                                              "description": "A simple test APM (force transition operator error - operator throws an Error)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "badTransitionOperatorThrowError": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "Uv2sAs4kf6nGZS4sZ_43Hg",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "zzojZTPF8W9-vTIlue16Gw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "1_O-kpoC7d6TCQWgdW5VzA",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "CSX0E1ZTNVfTHY7t-T0UtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[AODn0L3GQLK_21Msl1W8-g::Bad Transition Operator #1]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[ZdpLuggZRVaMI6aPW1mmUw::Bad Transition Operator #2]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "badTransitionOperatorThrowError": true
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator threw an illegal exception that was handled by OPC: This is a forced exception thrown from a transition operator's body function."
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "Gli8ff6FR22PPXjn9epRAQ": {
                "harnessRequest": {
                  "id": "Gli8ff6FR22PPXjn9epRAQ",
                  "name": "OPC Evaluate Exit Action Test #1",
                  "description": "Test controller exit action failure (no controller actions registered).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "Gli8ff6FR22PPXjn9epRAQ",
                            "name": "OPC Evaluate Exit Action Test #1",
                            "description": "Test controller exit action failure (no controller actions registered).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                  "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                  "name": "OPM Eval P2 Test #1",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "process": {
                                    "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "P-uhpNlrTseMNDG3D9ahRA",
                                  "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                  "name": "OPM Eval P2 Test #2",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "process": {
                                    "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "alBMdhnYSbijGj64jxm92g",
                                  "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                  "name": "OPM Eval P2 Test #3",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "process": {
                                    "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": []
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "Gli8ff6FR22PPXjn9epRAQ": {
                          "opcToJSON": {
                            "id": "Gli8ff6FR22PPXjn9epRAQ",
                            "name": "OPC Evaluate Exit Action Test #1",
                            "description": "Test controller exit action failure (no controller actions registered).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "Rgt3dz-6Ra-zqpbnpBrJDg": {
                                "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                "name": "OPM Eval P2 Test #1",
                                "description": "A simple test OPM (force controller action exit error - bad message)",
                                "process": {
                                  "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "P-uhpNlrTseMNDG3D9ahRA": {
                                "id": "P-uhpNlrTseMNDG3D9ahRA",
                                "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                "name": "OPM Eval P2 Test #2",
                                "description": "A simple test OPM (force controller action exit error - action transport error)",
                                "process": {
                                  "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "alBMdhnYSbijGj64jxm92g": {
                                "id": "alBMdhnYSbijGj64jxm92g",
                                "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                "name": "OPM Eval P2 Test #3",
                                "description": "A simple test OPM (force controller action exit - action exception)",
                                "process": {
                                  "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                  "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                  "name": "OPM Eval P2 Test #1",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "process": {
                                    "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [Gli8ff6FR22PPXjn9epRAQ::OPC Evaluate Exit Action Test #1] Observable Controller Data Store",
                              "____description": "OPC [Gli8ff6FR22PPXjn9epRAQ::OPC Evaluate Exit Action Test #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                            "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                            "name": "OPM Eval P2 Test #1",
                                            "description": "A simple test OPM (force controller action exit error - bad message)",
                                            "process": {
                                              "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                              "description": "A simple test OPM (force controller action exit error - bad message)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "noneSuchControllerAction": true
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "noneSuchControllerAction": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 1 discrimintor. Bad request format; this request cannot be processed by any of the ControllerAction's registered."
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 1,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "5fzWl6WhTEaG7EzC1AgITw": {
                "harnessRequest": {
                  "id": "5fzWl6WhTEaG7EzC1AgITw",
                  "name": "OPC Evaluate Exit Action Test #2",
                  "description": "Test controller action failure (bad request message).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "5fzWl6WhTEaG7EzC1AgITw",
                            "name": "OPC Evaluate Exit Action Test #2",
                            "description": "Test controller action failure (bad request message).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                  "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                  "name": "OPM Eval P2 Test #1",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "process": {
                                    "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "P-uhpNlrTseMNDG3D9ahRA",
                                  "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                  "name": "OPM Eval P2 Test #2",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "process": {
                                    "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "alBMdhnYSbijGj64jxm92g",
                                  "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                  "name": "OPM Eval P2 Test #3",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "process": {
                                    "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                                  "name": "Bad Controller Action #1",
                                  "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "vdid": "cZ9sErkaqoN650lg48aVxg",
                                  "name": "Bad Controller Action #2",
                                  "description": "A ControllerAction instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "5fzWl6WhTEaG7EzC1AgITw": {
                          "opcToJSON": {
                            "id": "5fzWl6WhTEaG7EzC1AgITw",
                            "name": "OPC Evaluate Exit Action Test #2",
                            "description": "Test controller action failure (bad request message).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "Rgt3dz-6Ra-zqpbnpBrJDg": {
                                "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                "name": "OPM Eval P2 Test #1",
                                "description": "A simple test OPM (force controller action exit error - bad message)",
                                "process": {
                                  "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "P-uhpNlrTseMNDG3D9ahRA": {
                                "id": "P-uhpNlrTseMNDG3D9ahRA",
                                "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                "name": "OPM Eval P2 Test #2",
                                "description": "A simple test OPM (force controller action exit error - action transport error)",
                                "process": {
                                  "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "alBMdhnYSbijGj64jxm92g": {
                                "id": "alBMdhnYSbijGj64jxm92g",
                                "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                "name": "OPM Eval P2 Test #3",
                                "description": "A simple test OPM (force controller action exit - action exception)",
                                "process": {
                                  "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                  "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                  "name": "OPM Eval P2 Test #1",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "process": {
                                    "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [5fzWl6WhTEaG7EzC1AgITw::OPC Evaluate Exit Action Test #2] Observable Controller Data Store",
                              "____description": "OPC [5fzWl6WhTEaG7EzC1AgITw::OPC Evaluate Exit Action Test #2] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "Rgt3dz-6Ra-zqpbnpBrJDg"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "KtoXFATK7G6m_RNAtiQm6w",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "XoBgofI5qssOhvKiDSK6ZQ",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "l-_1nihPpe_OeAf7ZAe98g",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "dOX0E1L0NVdfkY7tc5AUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "NpfrgiF1QTS6qp9vAMv4Dw": {
                                "filterDescriptor": {
                                  "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "operationName": "Bad Controller Action #1",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                                  "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                                  "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                                }
                              },
                              "V4-doRzDTVyYFtHMM8Z2jQ": {
                                "filterDescriptor": {
                                  "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "operationName": "Bad Controller Action #2",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                                  "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                                  "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                            "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                            "name": "OPM Eval P2 Test #1",
                                            "description": "A simple test OPM (force controller action exit error - bad message)",
                                            "process": {
                                              "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                              "description": "A simple test OPM (force controller action exit error - bad message)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "noneSuchControllerAction": true
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "noneSuchControllerAction": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 1 discrimintor. Bad request format; this request cannot be processed by any of the ControllerAction's registered."
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 1,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "boPENwtqTDiqX_c6CYfaPw": {
                "harnessRequest": {
                  "id": "boPENwtqTDiqX_c6CYfaPw",
                  "name": "OPC Evaluate Exit Action Test #3",
                  "description": "Test controller action failure #3 (bad action returns transport error).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "boPENwtqTDiqX_c6CYfaPw",
                            "name": "OPC Evaluate Exit Action Test #2",
                            "description": "Test controller action failure (bad request message).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "P-uhpNlrTseMNDG3D9ahRA"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                  "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                  "name": "OPM Eval P2 Test #1",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "process": {
                                    "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "P-uhpNlrTseMNDG3D9ahRA",
                                  "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                  "name": "OPM Eval P2 Test #2",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "process": {
                                    "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "alBMdhnYSbijGj64jxm92g",
                                  "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                  "name": "OPM Eval P2 Test #3",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "process": {
                                    "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                                  "name": "Bad Controller Action #1",
                                  "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "vdid": "cZ9sErkaqoN650lg48aVxg",
                                  "name": "Bad Controller Action #2",
                                  "description": "A ControllerAction instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "boPENwtqTDiqX_c6CYfaPw": {
                          "opcToJSON": {
                            "id": "boPENwtqTDiqX_c6CYfaPw",
                            "name": "OPC Evaluate Exit Action Test #2",
                            "description": "Test controller action failure (bad request message).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "Rgt3dz-6Ra-zqpbnpBrJDg": {
                                "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                "name": "OPM Eval P2 Test #1",
                                "description": "A simple test OPM (force controller action exit error - bad message)",
                                "process": {
                                  "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "P-uhpNlrTseMNDG3D9ahRA": {
                                "id": "P-uhpNlrTseMNDG3D9ahRA",
                                "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                "name": "OPM Eval P2 Test #2",
                                "description": "A simple test OPM (force controller action exit error - action transport error)",
                                "process": {
                                  "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "alBMdhnYSbijGj64jxm92g": {
                                "id": "alBMdhnYSbijGj64jxm92g",
                                "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                "name": "OPM Eval P2 Test #3",
                                "description": "A simple test OPM (force controller action exit - action exception)",
                                "process": {
                                  "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "P-uhpNlrTseMNDG3D9ahRA",
                                  "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                  "name": "OPM Eval P2 Test #2",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "process": {
                                    "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "P-uhpNlrTseMNDG3D9ahRA"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [boPENwtqTDiqX_c6CYfaPw::OPC Evaluate Exit Action Test #2] Observable Controller Data Store",
                              "____description": "OPC [boPENwtqTDiqX_c6CYfaPw::OPC Evaluate Exit Action Test #2] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "P-uhpNlrTseMNDG3D9ahRA"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "KtoXFATK7G6m_RNAtiQm6w",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "XoBgofI5qssOhvKiDSK6ZQ",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "l-_1nihPpe_OeAf7ZAe98g",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "dOX0E1L0NVdfkY7tc5AUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "NpfrgiF1QTS6qp9vAMv4Dw": {
                                "filterDescriptor": {
                                  "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "operationName": "Bad Controller Action #1",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                                  "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                                  "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                                }
                              },
                              "V4-doRzDTVyYFtHMM8Z2jQ": {
                                "filterDescriptor": {
                                  "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "operationName": "Bad Controller Action #2",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                                  "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                                  "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "P-uhpNlrTseMNDG3D9ahRA",
                                            "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                            "name": "OPM Eval P2 Test #2",
                                            "description": "A simple test OPM (force controller action exit error - action transport error)",
                                            "process": {
                                              "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                              "description": "A simple test OPM (force controller action exit error - action transport error)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "badControllerActionResponseError": true
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "badControllerActionResponseError": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 2 router. The selected ControllerAction filter [NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1] rejected the request with error: Filter [NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1] failed while performing main operation. This controller action is hard-wired to return an error."
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 1,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "pTaZUV0vTOGhaNOVD0sXLQ": {
                "harnessRequest": {
                  "id": "pTaZUV0vTOGhaNOVD0sXLQ",
                  "name": "OPC Evaluate Exit Action Test #4",
                  "description": "Test controller action failure #4 (bad action throws exception).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "pTaZUV0vTOGhaNOVD0sXLQ",
                            "name": "OPC Evaluate Exit Action Test #4",
                            "description": "Test controller action failure #4 (bad action throws exception).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "alBMdhnYSbijGj64jxm92g"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                  "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                  "name": "OPM Eval P2 Test #1",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "process": {
                                    "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "P-uhpNlrTseMNDG3D9ahRA",
                                  "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                  "name": "OPM Eval P2 Test #2",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "process": {
                                    "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "alBMdhnYSbijGj64jxm92g",
                                  "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                  "name": "OPM Eval P2 Test #3",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "process": {
                                    "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                                  "name": "Bad Controller Action #1",
                                  "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "vdid": "cZ9sErkaqoN650lg48aVxg",
                                  "name": "Bad Controller Action #2",
                                  "description": "A ControllerAction instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "pTaZUV0vTOGhaNOVD0sXLQ": {
                          "opcToJSON": {
                            "id": "pTaZUV0vTOGhaNOVD0sXLQ",
                            "name": "OPC Evaluate Exit Action Test #4",
                            "description": "Test controller action failure #4 (bad action throws exception).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "Rgt3dz-6Ra-zqpbnpBrJDg": {
                                "id": "Rgt3dz-6Ra-zqpbnpBrJDg",
                                "vdid": "Lte55YHGfv8kU5AKzCcJZg",
                                "name": "OPM Eval P2 Test #1",
                                "description": "A simple test OPM (force controller action exit error - bad message)",
                                "process": {
                                  "name": "[Rgt3dz-6Ra-zqpbnpBrJDg::OPM Eval P2 Test #1] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "P-uhpNlrTseMNDG3D9ahRA": {
                                "id": "P-uhpNlrTseMNDG3D9ahRA",
                                "vdid": "lF0qmMWw9_OkL7T3Q7SfVw",
                                "name": "OPM Eval P2 Test #2",
                                "description": "A simple test OPM (force controller action exit error - action transport error)",
                                "process": {
                                  "name": "[P-uhpNlrTseMNDG3D9ahRA::OPM Eval P2 Test #2] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "alBMdhnYSbijGj64jxm92g": {
                                "id": "alBMdhnYSbijGj64jxm92g",
                                "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                "name": "OPM Eval P2 Test #3",
                                "description": "A simple test OPM (force controller action exit - action exception)",
                                "process": {
                                  "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step (never reached).",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "alBMdhnYSbijGj64jxm92g",
                                  "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                  "name": "OPM Eval P2 Test #3",
                                  "description": "A simple test OPM (force controller action exit - action exception)",
                                  "process": {
                                    "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                    "description": "A simple test OPM (force controller action exit - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step (never reached).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "alBMdhnYSbijGj64jxm92g"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [pTaZUV0vTOGhaNOVD0sXLQ::OPC Evaluate Exit Action Test #4] Observable Controller Data Store",
                              "____description": "OPC [pTaZUV0vTOGhaNOVD0sXLQ::OPC Evaluate Exit Action Test #4] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "alBMdhnYSbijGj64jxm92g"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "KtoXFATK7G6m_RNAtiQm6w",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "XoBgofI5qssOhvKiDSK6ZQ",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "l-_1nihPpe_OeAf7ZAe98g",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "dOX0E1L0NVdfkY7tc5AUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "NpfrgiF1QTS6qp9vAMv4Dw": {
                                "filterDescriptor": {
                                  "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "operationName": "Bad Controller Action #1",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                                  "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                                  "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                                }
                              },
                              "V4-doRzDTVyYFtHMM8Z2jQ": {
                                "filterDescriptor": {
                                  "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "operationName": "Bad Controller Action #2",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                                  "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                                  "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "alBMdhnYSbijGj64jxm92g",
                                            "vdid": "vUv8n4l2FAS3b74v6iSk9Q",
                                            "name": "OPM Eval P2 Test #3",
                                            "description": "A simple test OPM (force controller action exit - action exception)",
                                            "process": {
                                              "name": "[alBMdhnYSbijGj64jxm92g::OPM Eval P2 Test #3] APM Digraph",
                                              "description": "A simple test OPM (force controller action exit - action exception)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "badControllerActionThrowError": true
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step (never reached).",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "badControllerActionThrowError": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Handled exception during controller action dispatch: This is a forced exception thrown from a controller action body function."
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 1,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "Zu13opLlRwSmU2LHvEAHnA": {
                "harnessRequest": {
                  "id": "Zu13opLlRwSmU2LHvEAHnA",
                  "name": "OPC Evaluate Enter Action Test #1",
                  "description": "Test controller action failure (no controller actions registered).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "Zu13opLlRwSmU2LHvEAHnA",
                            "name": "OPC Evaluate Enter Action Test #1",
                            "description": "Test controller action failure (no controller actions registered).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "I3ja3B00Rj-PIXnDrzQzNg"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                  "vdid": "82SjiUHO887DFsmv0J6xug",
                                  "name": "OPM Eval P3 Test #1",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "process": {
                                    "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                  "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                  "name": "OPM Eval P3 Test #2",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "process": {
                                    "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "maPNVFgWTduQ5vMiDU2sEw",
                                  "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                  "name": "OPM Eval P3 Test #3",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "process": {
                                    "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": []
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "Zu13opLlRwSmU2LHvEAHnA": {
                          "opcToJSON": {
                            "id": "Zu13opLlRwSmU2LHvEAHnA",
                            "name": "OPC Evaluate Enter Action Test #1",
                            "description": "Test controller action failure (no controller actions registered).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "I3ja3B00Rj-PIXnDrzQzNg": {
                                "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                "vdid": "82SjiUHO887DFsmv0J6xug",
                                "name": "OPM Eval P3 Test #1",
                                "description": "A simple OPM (force controller action enter error - bad message)",
                                "process": {
                                  "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "71VGW5zbRLiDf7E_2tFJ3g": {
                                "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                "name": "OPM Eval P3 Test #2",
                                "description": "A simple OPM (force controller action enter error - action transport error)",
                                "process": {
                                  "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "maPNVFgWTduQ5vMiDU2sEw": {
                                "id": "maPNVFgWTduQ5vMiDU2sEw",
                                "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                "name": "OPM Eval P3 Test #3",
                                "description": "A simple OPM (force controller action enter error - action exception)",
                                "process": {
                                  "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                  "vdid": "82SjiUHO887DFsmv0J6xug",
                                  "name": "OPM Eval P3 Test #1",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "process": {
                                    "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "I3ja3B00Rj-PIXnDrzQzNg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [Zu13opLlRwSmU2LHvEAHnA::OPC Evaluate Enter Action Test #1] Observable Controller Data Store",
                              "____description": "OPC [Zu13opLlRwSmU2LHvEAHnA::OPC Evaluate Enter Action Test #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "I3ja3B00Rj-PIXnDrzQzNg"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "Bnc0Tl1kHS6mkmBC0YzR-Q",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "SRiafVUa66ggM5TZY0la3A",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "jjb3PrbAh7w9cRo1X_znNA",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "B3T0EzfBNVfyHI7to6QUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                            "vdid": "82SjiUHO887DFsmv0J6xug",
                                            "name": "OPM Eval P3 Test #1",
                                            "description": "A simple OPM (force controller action enter error - bad message)",
                                            "process": {
                                              "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                              "description": "A simple OPM (force controller action enter error - bad message)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "noneSuchControllerAction": true
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [
                                              {
                                                "request": {
                                                  "noneSuchControllerAction": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 1 discrimintor. Bad request format; this request cannot be processed by any of the ControllerAction's registered."
                                                }
                                              }
                                            ],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 1,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "HxrzwXDSTlWXQJ5XAMhgtA": {
                "harnessRequest": {
                  "id": "HxrzwXDSTlWXQJ5XAMhgtA",
                  "name": "OPC Evaluate Enter Action Test #2",
                  "description": "Test controller action failure (bad request message).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "HxrzwXDSTlWXQJ5XAMhgtA",
                            "name": "OPC Evaluate Enter Action Test #2",
                            "description": "Test controller action failure (bad request message).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "I3ja3B00Rj-PIXnDrzQzNg"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                  "vdid": "82SjiUHO887DFsmv0J6xug",
                                  "name": "OPM Eval P3 Test #1",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "process": {
                                    "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                  "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                  "name": "OPM Eval P3 Test #2",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "process": {
                                    "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "maPNVFgWTduQ5vMiDU2sEw",
                                  "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                  "name": "OPM Eval P3 Test #3",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "process": {
                                    "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                                  "name": "Bad Controller Action #1",
                                  "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "vdid": "cZ9sErkaqoN650lg48aVxg",
                                  "name": "Bad Controller Action #2",
                                  "description": "A ControllerAction instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "HxrzwXDSTlWXQJ5XAMhgtA": {
                          "opcToJSON": {
                            "id": "HxrzwXDSTlWXQJ5XAMhgtA",
                            "name": "OPC Evaluate Enter Action Test #2",
                            "description": "Test controller action failure (bad request message).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "I3ja3B00Rj-PIXnDrzQzNg": {
                                "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                "vdid": "82SjiUHO887DFsmv0J6xug",
                                "name": "OPM Eval P3 Test #1",
                                "description": "A simple OPM (force controller action enter error - bad message)",
                                "process": {
                                  "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "71VGW5zbRLiDf7E_2tFJ3g": {
                                "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                "name": "OPM Eval P3 Test #2",
                                "description": "A simple OPM (force controller action enter error - action transport error)",
                                "process": {
                                  "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "maPNVFgWTduQ5vMiDU2sEw": {
                                "id": "maPNVFgWTduQ5vMiDU2sEw",
                                "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                "name": "OPM Eval P3 Test #3",
                                "description": "A simple OPM (force controller action enter error - action exception)",
                                "process": {
                                  "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                  "vdid": "82SjiUHO887DFsmv0J6xug",
                                  "name": "OPM Eval P3 Test #1",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "process": {
                                    "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "I3ja3B00Rj-PIXnDrzQzNg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [HxrzwXDSTlWXQJ5XAMhgtA::OPC Evaluate Enter Action Test #2] Observable Controller Data Store",
                              "____description": "OPC [HxrzwXDSTlWXQJ5XAMhgtA::OPC Evaluate Enter Action Test #2] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "I3ja3B00Rj-PIXnDrzQzNg"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "KtoXFATK7G6m_RNAtiQm6w",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "XoBgofI5qssOhvKiDSK6ZQ",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "l-_1nihPpe_OeAf7ZAe98g",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "dOX0E1L0NVdfkY7tc5AUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "NpfrgiF1QTS6qp9vAMv4Dw": {
                                "filterDescriptor": {
                                  "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "operationName": "Bad Controller Action #1",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                                  "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                                  "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                                }
                              },
                              "V4-doRzDTVyYFtHMM8Z2jQ": {
                                "filterDescriptor": {
                                  "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "operationName": "Bad Controller Action #2",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                                  "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                                  "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                            "vdid": "82SjiUHO887DFsmv0J6xug",
                                            "name": "OPM Eval P3 Test #1",
                                            "description": "A simple OPM (force controller action enter error - bad message)",
                                            "process": {
                                              "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                              "description": "A simple OPM (force controller action enter error - bad message)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "noneSuchControllerAction": true
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [
                                              {
                                                "request": {
                                                  "noneSuchControllerAction": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 1 discrimintor. Bad request format; this request cannot be processed by any of the ControllerAction's registered."
                                                }
                                              }
                                            ],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 1,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "dcSJk7BZQ3qnlrgivMayUQ": {
                "harnessRequest": {
                  "id": "dcSJk7BZQ3qnlrgivMayUQ",
                  "name": "OPC Evaluate Enter Action Test #3",
                  "description": "Test controller action failure (bad action returns transport error).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "dcSJk7BZQ3qnlrgivMayUQ",
                            "name": "OPC Evaluate Enter Action Test #3",
                            "description": "Test controller action failure (bad action returns transport error).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "71VGW5zbRLiDf7E_2tFJ3g"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                  "vdid": "82SjiUHO887DFsmv0J6xug",
                                  "name": "OPM Eval P3 Test #1",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "process": {
                                    "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                  "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                  "name": "OPM Eval P3 Test #2",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "process": {
                                    "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "maPNVFgWTduQ5vMiDU2sEw",
                                  "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                  "name": "OPM Eval P3 Test #3",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "process": {
                                    "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                                  "name": "Bad Controller Action #1",
                                  "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "vdid": "cZ9sErkaqoN650lg48aVxg",
                                  "name": "Bad Controller Action #2",
                                  "description": "A ControllerAction instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "dcSJk7BZQ3qnlrgivMayUQ": {
                          "opcToJSON": {
                            "id": "dcSJk7BZQ3qnlrgivMayUQ",
                            "name": "OPC Evaluate Enter Action Test #3",
                            "description": "Test controller action failure (bad action returns transport error).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "I3ja3B00Rj-PIXnDrzQzNg": {
                                "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                "vdid": "82SjiUHO887DFsmv0J6xug",
                                "name": "OPM Eval P3 Test #1",
                                "description": "A simple OPM (force controller action enter error - bad message)",
                                "process": {
                                  "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "71VGW5zbRLiDf7E_2tFJ3g": {
                                "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                "name": "OPM Eval P3 Test #2",
                                "description": "A simple OPM (force controller action enter error - action transport error)",
                                "process": {
                                  "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "maPNVFgWTduQ5vMiDU2sEw": {
                                "id": "maPNVFgWTduQ5vMiDU2sEw",
                                "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                "name": "OPM Eval P3 Test #3",
                                "description": "A simple OPM (force controller action enter error - action exception)",
                                "process": {
                                  "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                  "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                  "name": "OPM Eval P3 Test #2",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "process": {
                                    "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "71VGW5zbRLiDf7E_2tFJ3g"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [dcSJk7BZQ3qnlrgivMayUQ::OPC Evaluate Enter Action Test #3] Observable Controller Data Store",
                              "____description": "OPC [dcSJk7BZQ3qnlrgivMayUQ::OPC Evaluate Enter Action Test #3] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "71VGW5zbRLiDf7E_2tFJ3g"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "KtoXFATK7G6m_RNAtiQm6w",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "XoBgofI5qssOhvKiDSK6ZQ",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "l-_1nihPpe_OeAf7ZAe98g",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "dOX0E1L0NVdfkY7tc5AUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "NpfrgiF1QTS6qp9vAMv4Dw": {
                                "filterDescriptor": {
                                  "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "operationName": "Bad Controller Action #1",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                                  "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                                  "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                                }
                              },
                              "V4-doRzDTVyYFtHMM8Z2jQ": {
                                "filterDescriptor": {
                                  "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "operationName": "Bad Controller Action #2",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                                  "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                                  "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                            "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                            "name": "OPM Eval P3 Test #2",
                                            "description": "A simple OPM (force controller action enter error - action transport error)",
                                            "process": {
                                              "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                              "description": "A simple OPM (force controller action enter error - action transport error)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "badControllerActionResponseError": true
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [
                                              {
                                                "request": {
                                                  "badControllerActionResponseError": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Error dispatching controller action filter. Skipping any further evaluation. ControllerAction request rejected by MDR phase 2 router. The selected ControllerAction filter [NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1] rejected the request with error: Filter [NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1] failed while performing main operation. This controller action is hard-wired to return an error."
                                                }
                                              }
                                            ],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 1,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "SHneUm5GTDO--xVSUpL92Q": {
                "harnessRequest": {
                  "id": "SHneUm5GTDO--xVSUpL92Q",
                  "name": "OPC Evaluate Enter Action Test #4",
                  "description": "Test controller action failure (bad action throws exception).",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "SHneUm5GTDO--xVSUpL92Q",
                            "name": "OPC Evaluate Enter Action Test #4",
                            "description": "Test controller action failure (bad action throws exception).",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "maPNVFgWTduQ5vMiDU2sEw"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                  "vdid": "82SjiUHO887DFsmv0J6xug",
                                  "name": "OPM Eval P3 Test #1",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "process": {
                                    "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - bad message)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "noneSuchControllerAction": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                  "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                  "name": "OPM Eval P3 Test #2",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "process": {
                                    "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action transport error)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionResponseError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "maPNVFgWTduQ5vMiDU2sEw",
                                  "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                  "name": "OPM Eval P3 Test #3",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "process": {
                                    "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "vdid": "aDVVO4oeAZ1xPWSa-yQIYw",
                                  "name": "Bad Controller Action #1",
                                  "description": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error)."
                                },
                                {
                                  "id": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "vdid": "cZ9sErkaqoN650lg48aVxg",
                                  "name": "Bad Controller Action #2",
                                  "description": "A ControllerAction instance that is hard-wired to throw an exception."
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "SHneUm5GTDO--xVSUpL92Q": {
                          "opcToJSON": {
                            "id": "SHneUm5GTDO--xVSUpL92Q",
                            "name": "OPC Evaluate Enter Action Test #4",
                            "description": "Test controller action failure (bad action throws exception).",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "I3ja3B00Rj-PIXnDrzQzNg": {
                                "id": "I3ja3B00Rj-PIXnDrzQzNg",
                                "vdid": "82SjiUHO887DFsmv0J6xug",
                                "name": "OPM Eval P3 Test #1",
                                "description": "A simple OPM (force controller action enter error - bad message)",
                                "process": {
                                  "name": "[I3ja3B00Rj-PIXnDrzQzNg::OPM Eval P3 Test #1] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - bad message)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "noneSuchControllerAction": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "71VGW5zbRLiDf7E_2tFJ3g": {
                                "id": "71VGW5zbRLiDf7E_2tFJ3g",
                                "vdid": "IkmTmGwOUIJHFf3d3Q4RRA",
                                "name": "OPM Eval P3 Test #2",
                                "description": "A simple OPM (force controller action enter error - action transport error)",
                                "process": {
                                  "name": "[71VGW5zbRLiDf7E_2tFJ3g::OPM Eval P3 Test #2] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action transport error)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionResponseError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "maPNVFgWTduQ5vMiDU2sEw": {
                                "id": "maPNVFgWTduQ5vMiDU2sEw",
                                "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                "name": "OPM Eval P3 Test #3",
                                "description": "A simple OPM (force controller action enter error - action exception)",
                                "process": {
                                  "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "goal",
                                      "p": {
                                        "description": "Test goal step.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "badControllerActionThrowError": true
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "goal"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.test",
                                "opmiRef": {
                                  "id": "maPNVFgWTduQ5vMiDU2sEw",
                                  "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                  "name": "OPM Eval P3 Test #3",
                                  "description": "A simple OPM (force controller action enter error - action exception)",
                                  "process": {
                                    "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                    "description": "A simple OPM (force controller action enter error - action exception)",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "goal",
                                        "p": {
                                          "description": "Test goal step.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "badControllerActionThrowError": true
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "goal"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "maPNVFgWTduQ5vMiDU2sEw"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [SHneUm5GTDO--xVSUpL92Q::OPC Evaluate Enter Action Test #4] Observable Controller Data Store",
                              "____description": "OPC [SHneUm5GTDO--xVSUpL92Q::OPC Evaluate Enter Action Test #4] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "test": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "maPNVFgWTduQ5vMiDU2sEw"
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "test": {
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "KtoXFATK7G6m_RNAtiQm6w",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "XoBgofI5qssOhvKiDSK6ZQ",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "l-_1nihPpe_OeAf7ZAe98g",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "dOX0E1L0NVdfkY7tc5AUtA"
                              },
                              "supportedFilters": [
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[NpfrgiF1QTS6qp9vAMv4Dw::Bad Controller Action #1]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[V4-doRzDTVyYFtHMM8Z2jQ::Bad Controller Action #2]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "NpfrgiF1QTS6qp9vAMv4Dw": {
                                "filterDescriptor": {
                                  "operationID": "NpfrgiF1QTS6qp9vAMv4Dw",
                                  "operationName": "Bad Controller Action #1",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to return a transport error (i.e. sets response.error).",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #1 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionResponseError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "EI5vvlWkTXSGjgygskFKaw",
                                  "inputTypeVDID": "ess192KnHMoKZUoXwsTN3g",
                                  "outputTypeVIID": "F8v250y1jGSHieMeGfxfNw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "4t45eeQlFtZrPDuknPkPBw"
                                }
                              },
                              "V4-doRzDTVyYFtHMM8Z2jQ": {
                                "filterDescriptor": {
                                  "operationID": "V4-doRzDTVyYFtHMM8Z2jQ",
                                  "operationName": "Bad Controller Action #2",
                                  "operationDescription": "A ControllerAction instance that is hard-wired to throw an exception.",
                                  "inputFilterSpec": {
                                    "____label": "Bad Controller Action #2 Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "badControllerActionThrowError": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "No Result (Default)",
                                    "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "td--0wlcuGQhN-aytMLocw",
                                  "inputTypeVDID": "Q8s1-p6nHIKwZUpmB8TNfg",
                                  "outputTypeVIID": "d8j-q7q-GASjFRCTp99eSw",
                                  "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                                  "operationVDID": "RJzpeU_9QNY82OqkLa_fBw"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 1,
                                    "frames": 1,
                                    "errors": 1,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "yHP1RrAjDF9FH_9LhtLPEw"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "yHP1RrAjDF9FH_9LhtLPEw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.test",
                                            "specPath": "~.test"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "maPNVFgWTduQ5vMiDU2sEw",
                                            "vdid": "hNWOl5AgYwdbs2nQpDU_0Q",
                                            "name": "OPM Eval P3 Test #3",
                                            "description": "A simple OPM (force controller action enter error - action exception)",
                                            "process": {
                                              "name": "[maPNVFgWTduQ5vMiDU2sEw::OPM Eval P3 Test #3] APM Digraph",
                                              "description": "A simple OPM (force controller action enter error - action exception)",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "goal",
                                                  "p": {
                                                    "description": "Test goal step.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "badControllerActionThrowError": true
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "goal"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.test",
                                                    "ocdi": {
                                                      "test": {
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [
                                              {
                                                "request": {
                                                  "badControllerActionThrowError": true
                                                },
                                                "response": {
                                                  "error": "Filter [PgH0_QIhSs2c6nsw53uCjQ::OPC Act Filter] failed while performing main operation. Handled exception during controller action dispatch: This is a forced exception thrown from a controller action body function."
                                                }
                                              }
                                            ],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 1,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsWRwtrxCUvzPsiaQrCA6Q": {
              "ErHlg9R3SSaonNJr4mBi-g": {
                "harnessRequest": {
                  "id": "ErHlg9R3SSaonNJr4mBi-g",
                  "name": "AbstractProcessModel constructor #1",
                  "description": "AbstractProcessModel constructor test #1 (undefined constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "AbstractProcessModel": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "ErHlg9R3SSaonNJr4mBi-g": {
                          "isValid": false,
                          "toJSON": "AbstractProcessModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "getID": "AbstractProcessModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "getName": "AbstractProcessModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "getDescription": "AbstractProcessModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "getDataSpec": "AbstractProcessModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "getDigraph": "AbstractProcessModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsWRwtrxCUvzPsiaQrCA6Q": {
              "VwWYI4ReSTSfqSnoVXXC-w": {
                "harnessRequest": {
                  "id": "VwWYI4ReSTSfqSnoVXXC-w",
                  "name": "AbstractProcessModel constructor #2",
                  "description": "AbstractProcessModel constructor test #2 (minimal constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "AbstractProcessModel": {
                          "constructorRequest": {
                            "id": "VwWYI4ReSTSfqSnoVXXC-w",
                            "name": "APM #2",
                            "description": "APM instance test #2 (minimal constructor request)"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "VwWYI4ReSTSfqSnoVXXC-w": {
                          "isValid": true,
                          "toJSON": {
                            "id": "VwWYI4ReSTSfqSnoVXXC-w",
                            "vdid": "VL0ntNHTsevSETUoEu45hA",
                            "name": "APM #2",
                            "description": "APM instance test #2 (minimal constructor request)",
                            "process": {
                              "name": "[VwWYI4ReSTSfqSnoVXXC-w::APM #2] APM Digraph",
                              "description": "APM instance test #2 (minimal constructor request)",
                              "vlist": [],
                              "elist": []
                            }
                          },
                          "getID": "VwWYI4ReSTSfqSnoVXXC-w",
                          "getName": "APM #2",
                          "getDescription": "APM instance test #2 (minimal constructor request)",
                          "getDataSpec": {
                            "____types": "jsObject"
                          },
                          "getDigraph": {
                            "name": "[VwWYI4ReSTSfqSnoVXXC-w::APM #2] APM Digraph",
                            "description": "APM instance test #2 (minimal constructor request)",
                            "vlist": [],
                            "elist": []
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsWRwtrxCUvzPsiaQrCA6Q": {
              "HwB8EphzRkSG7AeoISMctQ": {
                "harnessRequest": {
                  "id": "HwB8EphzRkSG7AeoISMctQ",
                  "name": "ObsevableProcessModel constructor #3",
                  "description": "AbstractProcessModel constructor test #3 (OCD test #1)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "AbstractProcessModel": {
                          "constructorRequest": {
                            "id": "HwB8EphzRkSG7AeoISMctQ",
                            "name": "ObsevableProcessModel constructor #3",
                            "description": "AbstractProcessModel constructor test #3 (OCD test #1)",
                            "ocdDataSpec": {
                              "____bullshit": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "HwB8EphzRkSG7AeoISMctQ": {
                          "isValid": false,
                          "toJSON": "AbstractProcessModel::constructor for [HwB8EphzRkSG7AeoISMctQ::ObsevableProcessModel constructor #3] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified APM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration.",
                          "getID": "AbstractProcessModel::constructor for [HwB8EphzRkSG7AeoISMctQ::ObsevableProcessModel constructor #3] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified APM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration.",
                          "getName": "AbstractProcessModel::constructor for [HwB8EphzRkSG7AeoISMctQ::ObsevableProcessModel constructor #3] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified APM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration.",
                          "getDescription": "AbstractProcessModel::constructor for [HwB8EphzRkSG7AeoISMctQ::ObsevableProcessModel constructor #3] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified APM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration.",
                          "getDataSpec": "AbstractProcessModel::constructor for [HwB8EphzRkSG7AeoISMctQ::ObsevableProcessModel constructor #3] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified APM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration.",
                          "getDigraph": "AbstractProcessModel::constructor for [HwB8EphzRkSG7AeoISMctQ::ObsevableProcessModel constructor #3] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified APM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsWRwtrxCUvzPsiaQrCA6Q": {
              "YdzP0ZKMTme24BBJcyKevA": {
                "harnessRequest": {
                  "id": "YdzP0ZKMTme24BBJcyKevA",
                  "name": "AbstractProcessModel constructor #4",
                  "description": "AbstractProcessModel constructor test #4 (invalid id)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "AbstractProcessModel": {
                          "constructorRequest": {
                            "id": "invalid",
                            "name": "AbstractProcessModel constructor #4",
                            "description": "AbstractProcessModel constructor test #4 (invalid id)"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "YdzP0ZKMTme24BBJcyKevA": {
                          "isValid": false,
                          "toJSON": "AbstractProcessModel::constructor for [invalid::AbstractProcessModel constructor #4] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'AbstractProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead.",
                          "getID": "AbstractProcessModel::constructor for [invalid::AbstractProcessModel constructor #4] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'AbstractProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead.",
                          "getName": "AbstractProcessModel::constructor for [invalid::AbstractProcessModel constructor #4] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'AbstractProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead.",
                          "getDescription": "AbstractProcessModel::constructor for [invalid::AbstractProcessModel constructor #4] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'AbstractProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead.",
                          "getDataSpec": "AbstractProcessModel::constructor for [invalid::AbstractProcessModel constructor #4] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'AbstractProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead.",
                          "getDigraph": "AbstractProcessModel::constructor for [invalid::AbstractProcessModel constructor #4] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'AbstractProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "V4rhwuR97Sdl5q9h1CIHTg": {
              "8UqseWhbQLSnDnKqu6eVpA": {
                "harnessRequest": {
                  "id": "8UqseWhbQLSnDnKqu6eVpA",
                  "name": "ControllerAction contructor #1",
                  "description": "Test ControllerAction class constructor #1 (undefined constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ControllerAction": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "0xHlX_WKQ3y-3CFQ0DDx1w": {
                        "8UqseWhbQLSnDnKqu6eVpA": {
                          "isValid": false,
                          "toJSON": "ControllerAction::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "_private": {
                            "constructorError": "ControllerAction::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "V4rhwuR97Sdl5q9h1CIHTg": {
              "stn1B2JRSkOkFxuyejzGjQ": {
                "harnessRequest": {
                  "id": "stn1B2JRSkOkFxuyejzGjQ",
                  "name": "ControllerAction constructor #2",
                  "description": "Test ControllerAction class constructor #2 (minimal constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ControllerAction": {
                          "constructorRequest": {
                            "id": "stn1B2JRSkOkFxuyejzGjQ",
                            "name": "ControllAction Test #2",
                            "description": "A test ControllerAction plug-in filter.",
                            "actionRequestSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "action1": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "0xHlX_WKQ3y-3CFQ0DDx1w": {
                        "stn1B2JRSkOkFxuyejzGjQ": {
                          "isValid": true,
                          "toJSON": {
                            "id": "stn1B2JRSkOkFxuyejzGjQ",
                            "vdid": "LAdD6cApRoqhdKLs2HfCuw",
                            "name": "ControllAction Test #2",
                            "description": "A test ControllerAction plug-in filter."
                          },
                          "_private": {
                            "filterDescriptor": {
                              "operationID": "stn1B2JRSkOkFxuyejzGjQ",
                              "operationName": "ControllAction Test #2",
                              "operationDescription": "A test ControllerAction plug-in filter.",
                              "inputFilterSpec": {
                                "____label": "ControllAction Test #2 Request",
                                "____types": "jsObject",
                                "context": {
                                  "____label": "OPC Context Descriptor",
                                  "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                  "____types": "jsObject",
                                  "apmBindingPath": {
                                    "____label": "APM Binding Path",
                                    "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                    "____accept": "jsString"
                                  },
                                  "ocdi": {
                                    "____label": "OCD Store Instance",
                                    "____description": "A reference to the OCD store instance managed by OPC.",
                                    "____accept": "jsObject"
                                  },
                                  "act": {
                                    "____label": "OPC.act Method",
                                    "____description": "A reference to ObservableProcessController.act method.",
                                    "____accept": "jsFunction"
                                  }
                                },
                                "actionRequest": {
                                  "____types": "jsObject",
                                  "test": {
                                    "____types": "jsObject",
                                    "action1": {
                                      "____accept": "jsObject"
                                    }
                                  }
                                }
                              },
                              "outputFilterSpec": {
                                "____label": "No Result (Default)",
                                "____description": "If you need your ControllerAction to return a response.result, declare actionResultSpec in your ControllerAction declaration.",
                                "____accept": "jsUndefined"
                              },
                              "inputTypeVIID": "Atx8FjZfYUxmrFTQQW7XvQ",
                              "inputTypeVDID": "1JLrqmNa7gddxW45vhX3Rw",
                              "outputTypeVIID": "2Ct2ZVLNFcvpNEjSjPhVcA",
                              "outputTypeVDID": "AV_f6Y45sFu_Mc8VmIkk7g",
                              "operationVDID": "yVoMedtmbdbFFlik70zMBw"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "V4rhwuR97Sdl5q9h1CIHTg": {
              "PfsBYWSrQwSQCVQgaR1rPQ": {
                "harnessRequest": {
                  "id": "PfsBYWSrQwSQCVQgaR1rPQ",
                  "name": "ControllerAction constructor #3",
                  "description": "Test ControllerAction class constructor #3 (specifies a result spec)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ControllerAction": {
                          "constructorRequest": {
                            "id": "PfsBYWSrQwSQCVQgaR1rPQ",
                            "name": "ControllerAction constructor #3",
                            "description": "Test ControllerAction class constructor #3 (specifies a result spec)",
                            "actionRequestSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "action2": {
                                  "____accept": "jsObject"
                                }
                              }
                            },
                            "actionResultSpec": {
                              "____types": "jsObject",
                              "CONSIPICUOUS_LABEL": {
                                "____accept": "jsObject"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "0xHlX_WKQ3y-3CFQ0DDx1w": {
                        "PfsBYWSrQwSQCVQgaR1rPQ": {
                          "isValid": true,
                          "toJSON": {
                            "id": "PfsBYWSrQwSQCVQgaR1rPQ",
                            "vdid": "BeaU4BbqVFiJPrZ1T78iww",
                            "name": "ControllerAction constructor #3",
                            "description": "Test ControllerAction class constructor #3 (specifies a result spec)"
                          },
                          "_private": {
                            "filterDescriptor": {
                              "operationID": "PfsBYWSrQwSQCVQgaR1rPQ",
                              "operationName": "ControllerAction constructor #3",
                              "operationDescription": "Test ControllerAction class constructor #3 (specifies a result spec)",
                              "inputFilterSpec": {
                                "____label": "ControllerAction constructor #3 Request",
                                "____types": "jsObject",
                                "context": {
                                  "____label": "OPC Context Descriptor",
                                  "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                  "____types": "jsObject",
                                  "apmBindingPath": {
                                    "____label": "APM Binding Path",
                                    "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                    "____accept": "jsString"
                                  },
                                  "ocdi": {
                                    "____label": "OCD Store Instance",
                                    "____description": "A reference to the OCD store instance managed by OPC.",
                                    "____accept": "jsObject"
                                  },
                                  "act": {
                                    "____label": "OPC.act Method",
                                    "____description": "A reference to ObservableProcessController.act method.",
                                    "____accept": "jsFunction"
                                  }
                                },
                                "actionRequest": {
                                  "____types": "jsObject",
                                  "test": {
                                    "____types": "jsObject",
                                    "action2": {
                                      "____accept": "jsObject"
                                    }
                                  }
                                }
                              },
                              "outputFilterSpec": {
                                "____types": "jsObject",
                                "CONSIPICUOUS_LABEL": {
                                  "____accept": "jsObject"
                                }
                              },
                              "inputTypeVIID": "xh8VNZ_1hWGQE4jFw0Mx-w",
                              "inputTypeVDID": "re0c8nr_OpJb7Zm2wRCVhw",
                              "outputTypeVIID": "08FUozIsKwJT367_cBz9tA",
                              "outputTypeVDID": "7DRxubZwAVyqn16J5EV5Vg",
                              "operationVDID": "k3xpiEziUAP6lrNmqPzkog"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "SaPQhpVtKhQvT4xWAqtmXg": {
              "6TPB7tz4TQaGJYaRAhl_gQ": {
                "harnessRequest": {
                  "id": "6TPB7tz4TQaGJYaRAhl_gQ",
                  "name": "TransitionOperator constructor #1",
                  "description": "TransitionOperator constructor test #1 (undefined constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "TransitionOperator": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "X2q-YtvCTrWx7csHq8R8Tw": {
                        "6TPB7tz4TQaGJYaRAhl_gQ": {
                          "isValid": false,
                          "toJSON": "TransitionOperator::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [-99RI_6HTsiQgwN2OV1xXQ::Transition Operator Filter Factory] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "SaPQhpVtKhQvT4xWAqtmXg": {
              "8167V4JrSc-47BMNONdxvQ": {
                "harnessRequest": {
                  "id": "8167V4JrSc-47BMNONdxvQ",
                  "name": "TransitionOperator constructor #2",
                  "description": "TransitionOperator constructor test #2 (minimally defined contructor)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "TransitionOperator": {
                          "constructorRequest": {
                            "id": "8167V4JrSc-47BMNONdxvQ",
                            "name": "TransitionOperator Test #2",
                            "description": "A simple test transition operator plug-in filter.",
                            "operatorRequestSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "TransitionOperator1": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "X2q-YtvCTrWx7csHq8R8Tw": {
                        "8167V4JrSc-47BMNONdxvQ": {
                          "isValid": true,
                          "toJSON": {
                            "id": "8167V4JrSc-47BMNONdxvQ",
                            "vdid": "_3zWz9p7EmJdQhUJvQ6K7w",
                            "name": "TransitionOperator Test #2",
                            "description": "A simple test transition operator plug-in filter."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "VcFs1BSZTLCb8nlIwW3Pmg": {
                "harnessRequest": {
                  "id": "VcFs1BSZTLCb8nlIwW3Pmg",
                  "name": "CellModel Constructor Error #1",
                  "description": "Default construct holarchy/CellModel ES6 class. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "VcFs1BSZTLCb8nlIwW3Pmg": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "OXCzJI-JT72xRNRuEn51Bw": {
                "harnessRequest": {
                  "id": "OXCzJI-JT72xRNRuEn51Bw",
                  "name": "CellModel Constructor Error #2",
                  "description": "Construct CellModel w/missing top-level metadata to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {}
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "OXCzJI-JT72xRNRuEn51Bw": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~.id': Value of type 'jsUndefined' not in allowed type set [jsString].",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~.id': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~.id': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "Xp1zz6GTQuug4w1umxHPlQ": {
                "harnessRequest": {
                  "id": "Xp1zz6GTQuug4w1umxHPlQ",
                  "name": "CellModel Constructor Error #2",
                  "description": "Construct CellModel w/no artifact registrations to test error handling. Heretical requests should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "Xp1zz6GTQuug4w1umxHPlQ",
                            "name": "CellModel Constructor Error #2",
                            "description": "Construct CellModel w/bad APM registration to test error handling. Should fail."
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "Xp1zz6GTQuug4w1umxHPlQ": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 5,
                              "edges": 1,
                              "artifacts": {
                                "cm": 1,
                                "apm": 0,
                                "top": 0,
                                "act": 0
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [],
                              "top": [],
                              "act": []
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "Xp1zz6GTQuug4w1umxHPlQ": {
                                  "id": "Xp1zz6GTQuug4w1umxHPlQ",
                                  "vdid": "qXTO-ucg1tTMyJB7BPMj6w",
                                  "name": "CellModel Constructor Error #2",
                                  "description": "Construct CellModel w/bad APM registration to test error handling. Should fail.",
                                  "type": "CM"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "MHVj3IaXR7SIsY1MUwMG_A": {
                "harnessRequest": {
                  "id": "MHVj3IaXR7SIsY1MUwMG_A",
                  "name": "CellModel Constructor Error #3",
                  "description": "Construct CellModel w/bad APM registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "MHVj3IaXR7SIsY1MUwMG_A",
                            "name": "CellModel Constructor Error #3",
                            "description": "Construct CellModel w/bad APM registration to test error handling. Should fail.",
                            "apm": {
                              "id": "bad-id"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "MHVj3IaXR7SIsY1MUwMG_A": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [MHVj3IaXR7SIsY1MUwMG_A::CellModel Constructor Error #3] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.apm: Bad APM registration: The APM instance is invalid. AbstractProcessModel::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString].",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [MHVj3IaXR7SIsY1MUwMG_A::CellModel Constructor Error #3] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.apm: Bad APM registration: The APM instance is invalid. AbstractProcessModel::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [MHVj3IaXR7SIsY1MUwMG_A::CellModel Constructor Error #3] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.apm: Bad APM registration: The APM instance is invalid. AbstractProcessModel::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::APM Constructor Request Processor] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "OP9PyLDXTaac7_AHb1qCfg": {
                "harnessRequest": {
                  "id": "OP9PyLDXTaac7_AHb1qCfg",
                  "name": "CelModel Constructor Error #4",
                  "description": "Construct CellModel w/bad TOP registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "OP9PyLDXTaac7_AHb1qCfg",
                            "name": "CelModel Constructor Error #4",
                            "description": "Construct CellModel w/bad TOP registration to test error handling. Should fail.",
                            "operators": [
                              {
                                "id": "bad-id"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "OP9PyLDXTaac7_AHb1qCfg": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [OP9PyLDXTaac7_AHb1qCfg::CelModel Constructor Error #4] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.operators[0]: Bad TOP registration: The TOP instance is invalid. TransitionOperator::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [-99RI_6HTsiQgwN2OV1xXQ::Transition Operator Filter Factory] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString].",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [OP9PyLDXTaac7_AHb1qCfg::CelModel Constructor Error #4] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.operators[0]: Bad TOP registration: The TOP instance is invalid. TransitionOperator::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [-99RI_6HTsiQgwN2OV1xXQ::Transition Operator Filter Factory] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [OP9PyLDXTaac7_AHb1qCfg::CelModel Constructor Error #4] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.operators[0]: Bad TOP registration: The TOP instance is invalid. TransitionOperator::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [-99RI_6HTsiQgwN2OV1xXQ::Transition Operator Filter Factory] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "OcoS0S_MRg2traJs1gDQ-g": {
                "harnessRequest": {
                  "id": "OcoS0S_MRg2traJs1gDQ-g",
                  "name": "CellModel Constructor Error #5",
                  "description": "Construct CellModel w/bad ACT registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "OcoS0S_MRg2traJs1gDQ-g",
                            "name": "CellModel Constructor Error #5",
                            "description": "Construct CellModel w/bad ACT registration to test error handling. Should fail.",
                            "actions": [
                              {
                                "id": "bad-id"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "OcoS0S_MRg2traJs1gDQ-g": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [OcoS0S_MRg2traJs1gDQ-g::CellModel Constructor Error #5] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.actions[0]: Bad ACT registration: The ACT instance is invalid. ControllerAction::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString].",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [OcoS0S_MRg2traJs1gDQ-g::CellModel Constructor Error #5] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.actions[0]: Bad ACT registration: The ACT instance is invalid. ControllerAction::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [OcoS0S_MRg2traJs1gDQ-g::CellModel Constructor Error #5] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.actions[0]: Bad ACT registration: The ACT instance is invalid. ControllerAction::constructor for [bad-id::unspecified] failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "N88iVPFrQJO_VNKqdyrF1Q": {
                "harnessRequest": {
                  "id": "N88iVPFrQJO_VNKqdyrF1Q",
                  "name": "CellModel Constructor Error #6",
                  "description": "Construct CellModel w/bad subcell registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "N88iVPFrQJO_VNKqdyrF1Q",
                            "name": "CellModel Constructor Error #6",
                            "description": "Construct CellModel w/bad subcell registration to test error handling. Should fail.",
                            "subcells": [
                              {
                                "id": "bad-name"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "N88iVPFrQJO_VNKqdyrF1Q": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [N88iVPFrQJO_VNKqdyrF1Q::CellModel Constructor Error #6] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.subcells[0]: Bad CM registration: The CM instance is invalid. CellModel::constructor for [bad-name::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString].",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [N88iVPFrQJO_VNKqdyrF1Q::CellModel Constructor Error #6] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.subcells[0]: Bad CM registration: The CM instance is invalid. CellModel::constructor for [bad-name::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [N88iVPFrQJO_VNKqdyrF1Q::CellModel Constructor Error #6] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.subcells[0]: Bad CM registration: The CM instance is invalid. CellModel::constructor for [bad-name::unspecified] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while normalizing request input. Error at path '~.name': Value of type 'jsUndefined' not in allowed type set [jsString]."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "xhZFsZ7KTFCHaSkVZ_VMXQ": {
                "harnessRequest": {
                  "id": "xhZFsZ7KTFCHaSkVZ_VMXQ",
                  "name": "CellModel Constructor Error #7",
                  "description": "Construct CellModel w/bad duplicate ID APM registration to test error handling. Should fail",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "xhZFsZ7KTFCHaSkVZ_VMXQ",
                            "name": "CellModel Constructor Error #7",
                            "description": "Construct CellModel w/bad duplicate ID APM registration to test error handling. Should fail",
                            "apm": {
                              "id": "xhZFsZ7KTFCHaSkVZ_VMXQ",
                              "name": "Should Be Rejected",
                              "description": "Reusing the IRUT of the CellModel should not be allowed."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "xhZFsZ7KTFCHaSkVZ_VMXQ": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [xhZFsZ7KTFCHaSkVZ_VMXQ::CellModel Constructor Error #7] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.apm: Bad APM registration: The APM instance specifies a duplicate IRUT id='xhZFsZ7KTFCHaSkVZ_VMXQ' that is illegal in this context. IRUT id='xhZFsZ7KTFCHaSkVZ_VMXQ' was previously registered by this CellModel instance as a 'CM' artifact.",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [xhZFsZ7KTFCHaSkVZ_VMXQ::CellModel Constructor Error #7] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.apm: Bad APM registration: The APM instance specifies a duplicate IRUT id='xhZFsZ7KTFCHaSkVZ_VMXQ' that is illegal in this context. IRUT id='xhZFsZ7KTFCHaSkVZ_VMXQ' was previously registered by this CellModel instance as a 'CM' artifact."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [xhZFsZ7KTFCHaSkVZ_VMXQ::CellModel Constructor Error #7] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.apm: Bad APM registration: The APM instance specifies a duplicate IRUT id='xhZFsZ7KTFCHaSkVZ_VMXQ' that is illegal in this context. IRUT id='xhZFsZ7KTFCHaSkVZ_VMXQ' was previously registered by this CellModel instance as a 'CM' artifact."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "wtgq7mnyQI-qZXBxv2wTrw": {
                "harnessRequest": {
                  "id": "wtgq7mnyQI-qZXBxv2wTrw",
                  "name": "CellModel Constructor Error #8",
                  "description": "Construct CellModel w/bad duplicate ID TOP registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "wtgq7mnyQI-qZXBxv2wTrw",
                            "name": "CellModel Constructor Error #8",
                            "description": "Construct CellModel w/bad duplicate ID TOP registration to test error handling. Should fail.",
                            "operators": [
                              {
                                "id": "wtgq7mnyQI-qZXBxv2wTrw",
                                "name": "Duplicate ID TransitionOperator",
                                "description": "Deliberately re-use the CellModel's ID to test error handling.",
                                "operatorRequestSpec": {
                                  "____accept": "jsNull"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "wtgq7mnyQI-qZXBxv2wTrw": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [wtgq7mnyQI-qZXBxv2wTrw::CellModel Constructor Error #8] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.operators[0]: Bad TOP registration: The TOP instance specifies a duplicate IRUT id='wtgq7mnyQI-qZXBxv2wTrw' that is illegal in this context. IRUT id='wtgq7mnyQI-qZXBxv2wTrw' was previously registered by this CellModel instance as a 'CM' artifact.",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [wtgq7mnyQI-qZXBxv2wTrw::CellModel Constructor Error #8] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.operators[0]: Bad TOP registration: The TOP instance specifies a duplicate IRUT id='wtgq7mnyQI-qZXBxv2wTrw' that is illegal in this context. IRUT id='wtgq7mnyQI-qZXBxv2wTrw' was previously registered by this CellModel instance as a 'CM' artifact."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [wtgq7mnyQI-qZXBxv2wTrw::CellModel Constructor Error #8] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.operators[0]: Bad TOP registration: The TOP instance specifies a duplicate IRUT id='wtgq7mnyQI-qZXBxv2wTrw' that is illegal in this context. IRUT id='wtgq7mnyQI-qZXBxv2wTrw' was previously registered by this CellModel instance as a 'CM' artifact."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "FUyhcKKfTeycNWD0JVxkhw": {
                "harnessRequest": {
                  "id": "FUyhcKKfTeycNWD0JVxkhw",
                  "name": "CellModel Constructor Error #9",
                  "description": "Construct CellModel w/bad duplicate ID ACT registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "FUyhcKKfTeycNWD0JVxkhw",
                            "name": "CellModel Constructor Error #9",
                            "description": "Construct CellModel w/bad duplicate ID ACT registration to test error handling. Should fail.",
                            "actions": [
                              {
                                "id": "FUyhcKKfTeycNWD0JVxkhw",
                                "name": "Duplicate ID ControllerAction",
                                "description": "Deliberately re-use the CellModel's ID to test error handling.",
                                "actionRequestSpec": {
                                  "____accept": "jsNull"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "FUyhcKKfTeycNWD0JVxkhw": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [FUyhcKKfTeycNWD0JVxkhw::CellModel Constructor Error #9] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.actions[0]: Bad ACT registration: The ACT instance specifies a duplicate IRUT id='FUyhcKKfTeycNWD0JVxkhw' that is illegal in this context. IRUT id='FUyhcKKfTeycNWD0JVxkhw' was previously registered by this CellModel instance as a 'CM' artifact.",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [FUyhcKKfTeycNWD0JVxkhw::CellModel Constructor Error #9] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.actions[0]: Bad ACT registration: The ACT instance specifies a duplicate IRUT id='FUyhcKKfTeycNWD0JVxkhw' that is illegal in this context. IRUT id='FUyhcKKfTeycNWD0JVxkhw' was previously registered by this CellModel instance as a 'CM' artifact."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [FUyhcKKfTeycNWD0JVxkhw::CellModel Constructor Error #9] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.actions[0]: Bad ACT registration: The ACT instance specifies a duplicate IRUT id='FUyhcKKfTeycNWD0JVxkhw' that is illegal in this context. IRUT id='FUyhcKKfTeycNWD0JVxkhw' was previously registered by this CellModel instance as a 'CM' artifact."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "OrkMuFl_TyiqVKdt9Qs6Dw": {
                "harnessRequest": {
                  "id": "OrkMuFl_TyiqVKdt9Qs6Dw",
                  "name": "CellModel Constructor Error #10",
                  "description": "Construct CellModel w/bad duplicate ID subcell registration to test error handling. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "OrkMuFl_TyiqVKdt9Qs6Dw",
                            "name": "CellModel Constructor Error #10",
                            "description": "Construct CellModel w/bad duplicate ID subcell registration to test error handling. Should fail.",
                            "subcells": [
                              {
                                "id": "5A_gWDIxRiW_LMqHT2SRkw",
                                "name": "Test Subcell Model",
                                "description": "A subcell that registers an illegal duplicate APM ID.",
                                "apm": {
                                  "id": "OrkMuFl_TyiqVKdt9Qs6Dw",
                                  "name": "Bad APM Definition",
                                  "description": "Deliberately re-use the outer cell's ID to test error handling."
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "OrkMuFl_TyiqVKdt9Qs6Dw": {
                          "isValid": false,
                          "summary": "CellModel::constructor for [OrkMuFl_TyiqVKdt9Qs6Dw::CellModel Constructor Error #10] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.subcells[0]: Bad CM registration. Unable to merge CellModel id='5A_gWDIxRiW_LMqHT2SRkw' into CellModel id='OrkMuFl_TyiqVKdt9Qs6Dw' due to conflict. CellModel id='5A_gWDIxRiW_LMqHT2SRkw' APM registration id='OrkMuFl_TyiqVKdt9Qs6Dw' specifies illegal duplicate IRUT ID. CellModel id='OrkMuFl_TyiqVKdt9Qs6Dw' has previously registered id='OrkMuFl_TyiqVKdt9Qs6Dw' as a CM artifact.",
                          "opcConfig": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [OrkMuFl_TyiqVKdt9Qs6Dw::CellModel Constructor Error #10] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.subcells[0]: Bad CM registration. Unable to merge CellModel id='5A_gWDIxRiW_LMqHT2SRkw' into CellModel id='OrkMuFl_TyiqVKdt9Qs6Dw' due to conflict. CellModel id='5A_gWDIxRiW_LMqHT2SRkw' APM registration id='OrkMuFl_TyiqVKdt9Qs6Dw' specifies illegal duplicate IRUT ID. CellModel id='OrkMuFl_TyiqVKdt9Qs6Dw' has previously registered id='OrkMuFl_TyiqVKdt9Qs6Dw' as a CM artifact."
                          },
                          "cmat": {
                            "error": "CellModel::getCMConfig failed: Filter [gGdsVfPmRpuSfD4rCdzblQ::CellModel::getConfig Method Filter] failed while performing main operation. CellModel::getCMConfigAPM method error: CellModel::constructor for [OrkMuFl_TyiqVKdt9Qs6Dw::CellModel Constructor Error #10] failed yielding a zombie instance. Filter [xbcn-VBLTaC_0GmCuTQ8NA::CellModel::constructor Filter] failed while performing main operation. At request path ~.subcells[0]: Bad CM registration. Unable to merge CellModel id='5A_gWDIxRiW_LMqHT2SRkw' into CellModel id='OrkMuFl_TyiqVKdt9Qs6Dw' due to conflict. CellModel id='5A_gWDIxRiW_LMqHT2SRkw' APM registration id='OrkMuFl_TyiqVKdt9Qs6Dw' specifies illegal duplicate IRUT ID. CellModel id='OrkMuFl_TyiqVKdt9Qs6Dw' has previously registered id='OrkMuFl_TyiqVKdt9Qs6Dw' as a CM artifact."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "Geq5MDymQLKcO9JQe7Lc8w": {
                "harnessRequest": {
                  "id": "Geq5MDymQLKcO9JQe7Lc8w",
                  "name": "CellModel Constructor Error #11",
                  "description": "Construct CellModel w/bad duplicate APM registrations that do not deep compare to test error handling. Should fail."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "QE3J6XhJSHqelGnpFMawzA": {
                "harnessRequest": {
                  "id": "QE3J6XhJSHqelGnpFMawzA",
                  "name": "TODO: CellModel Constructor Error #12",
                  "description": "TODO: Construct CellModel w/bad duplicate TOP registrations that do not deep compare to test error handling. Should fail."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "130L3KaTS3uFybwDdVlWwg": {
                "harnessRequest": {
                  "id": "130L3KaTS3uFybwDdVlWwg",
                  "name": "TODO: CellModel Constructor Error #13",
                  "description": "TODO: Construct CellModel w/bad duplicate ACT registrations that do not deep compare to test error handling. Should fail."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "HPaNXEH9SYmOZTLlD5jUXg": {
                "harnessRequest": {
                  "id": "HPaNXEH9SYmOZTLlD5jUXg",
                  "name": "TODO: CellModel Constructor Error #14",
                  "description": "TODO: Construct CellModel w/bad duplicate submodel registrations that do not deep compare to test error handling. Should fail."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "vzmMGynKTy2uu6W8R-1rvQ": {
                "harnessRequest": {
                  "id": "vzmMGynKTy2uu6W8R-1rvQ",
                  "name": "CellModel Constructor #1",
                  "description": "Construct CellModel w/single APM registration specified using a constructor request object.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "vzmMGynKTy2uu6W8R-1rvQ",
                            "name": "CellModel Constructor #2",
                            "description": "Try to construct a minimally configured CellModel with a mimimally-defined OPM association.",
                            "apm": {
                              "id": "cJSBP90NTcu1bJMhCOjbQg",
                              "name": "Placeholder APM",
                              "description": "A minimally-configured placeholder."
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "vzmMGynKTy2uu6W8R-1rvQ": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 6,
                              "edges": 3,
                              "artifacts": {
                                "cm": 1,
                                "apm": 1,
                                "top": 0,
                                "act": 0
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "cJSBP90NTcu1bJMhCOjbQg",
                                  "vdid": "_SRJKsujaRmRsNghPb6X5w",
                                  "name": "Placeholder APM",
                                  "description": "A minimally-configured placeholder.",
                                  "process": {
                                    "name": "[cJSBP90NTcu1bJMhCOjbQg::Placeholder APM] APM Digraph",
                                    "description": "A minimally-configured placeholder.",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ],
                              "top": [],
                              "act": []
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "vzmMGynKTy2uu6W8R-1rvQ": {
                                  "id": "vzmMGynKTy2uu6W8R-1rvQ",
                                  "vdid": "6oW_kQMtTIW_4g7n6CeMpQ",
                                  "name": "CellModel Constructor #2",
                                  "description": "Try to construct a minimally configured CellModel with a mimimally-defined OPM association.",
                                  "type": "CM",
                                  "cJSBP90NTcu1bJMhCOjbQg": {
                                    "id": "cJSBP90NTcu1bJMhCOjbQg",
                                    "vdid": "_SRJKsujaRmRsNghPb6X5w",
                                    "name": "Placeholder APM",
                                    "description": "A minimally-configured placeholder.",
                                    "type": "APM"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "7pAVXoWbTSeZSF4SzLrlxg": {
                "harnessRequest": {
                  "id": "7pAVXoWbTSeZSF4SzLrlxg",
                  "name": " TODO: CellModel Constructor #2",
                  "description": "TODO: Construct CellModel w/single APM registration specified using pre-constructed AbstractProcessModel ES6 class instance."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "AE_pEJ7LTdSvohEBZl_Bfw": {
                "harnessRequest": {
                  "id": "AE_pEJ7LTdSvohEBZl_Bfw",
                  "name": "CellModel Constructor #3",
                  "description": "Construct CellModel w/single TOP registration specified using a constructor request object.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "AE_pEJ7LTdSvohEBZl_Bfw",
                            "name": "CellModel Constructor #3",
                            "description": "Try to construct a minimally configured CellModel with a single TransitionOperator plug-in.",
                            "operators": [
                              {
                                "id": "o3Q4YKI_SLOus82xE7Gaag",
                                "name": "Placeholder TOP",
                                "description": "A minimally configured placeholder.",
                                "operatorRequestSpec": {
                                  "____accept": "jsObject"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "AE_pEJ7LTdSvohEBZl_Bfw": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 6,
                              "edges": 3,
                              "artifacts": {
                                "cm": 1,
                                "apm": 0,
                                "top": 1,
                                "act": 0
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [],
                              "top": [
                                {
                                  "id": "o3Q4YKI_SLOus82xE7Gaag",
                                  "vdid": "kLy9qhOG0ukfYTgyR6cTYw",
                                  "name": "Placeholder TOP",
                                  "description": "A minimally configured placeholder."
                                }
                              ],
                              "act": []
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "AE_pEJ7LTdSvohEBZl_Bfw": {
                                  "id": "AE_pEJ7LTdSvohEBZl_Bfw",
                                  "vdid": "x-wOKiCD4KDNNZl626iLHA",
                                  "name": "CellModel Constructor #3",
                                  "description": "Try to construct a minimally configured CellModel with a single TransitionOperator plug-in.",
                                  "type": "CM",
                                  "o3Q4YKI_SLOus82xE7Gaag": {
                                    "id": "o3Q4YKI_SLOus82xE7Gaag",
                                    "vdid": "kLy9qhOG0ukfYTgyR6cTYw",
                                    "name": "Placeholder TOP",
                                    "description": "A minimally configured placeholder.",
                                    "type": "TOP"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "5aJ-FcXOSYqqF_ha651qQA": {
                "harnessRequest": {
                  "id": "5aJ-FcXOSYqqF_ha651qQA",
                  "name": "TODO: CellModel Constructor #4",
                  "description": "TODO: Construct CellModel w/single TOP registration specified using pre-constructed TransitionOperator ES6 class instance."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "E7xo1-qaSuSrsN5-8jgmRg": {
                "harnessRequest": {
                  "id": "E7xo1-qaSuSrsN5-8jgmRg",
                  "name": "CellModel Constructor #5",
                  "description": "Construct CellModel w/single ACT registration specified using a constructor request object.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "E7xo1-qaSuSrsN5-8jgmRg",
                            "name": "CellModel Constructor #4",
                            "description": "Try to construct a minimally configured CellModel with a single ControllerAction plug-in.",
                            "actions": [
                              {
                                "id": "SXYrt7-1SOe91wpQLWFutQ",
                                "name": "Fake Test Action",
                                "description": "A fake test action.",
                                "actionRequestSpec": {
                                  "____types": "jsObject",
                                  "whatever": {
                                    "____accept": "jsNull"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "E7xo1-qaSuSrsN5-8jgmRg": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 6,
                              "edges": 3,
                              "artifacts": {
                                "cm": 1,
                                "apm": 0,
                                "top": 0,
                                "act": 1
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [],
                              "top": [],
                              "act": [
                                {
                                  "id": "SXYrt7-1SOe91wpQLWFutQ",
                                  "vdid": "6WNlaTmCf0XLEhH4soF0mA",
                                  "name": "Fake Test Action",
                                  "description": "A fake test action."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "E7xo1-qaSuSrsN5-8jgmRg": {
                                  "id": "E7xo1-qaSuSrsN5-8jgmRg",
                                  "vdid": "FWOJM1GmZb1Idau7FLQU1g",
                                  "name": "CellModel Constructor #4",
                                  "description": "Try to construct a minimally configured CellModel with a single ControllerAction plug-in.",
                                  "type": "CM",
                                  "SXYrt7-1SOe91wpQLWFutQ": {
                                    "id": "SXYrt7-1SOe91wpQLWFutQ",
                                    "vdid": "6WNlaTmCf0XLEhH4soF0mA",
                                    "name": "Fake Test Action",
                                    "description": "A fake test action.",
                                    "type": "ACT"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "zMnQxFBZQuaeu7buQH_qkw": {
                "harnessRequest": {
                  "id": "zMnQxFBZQuaeu7buQH_qkw",
                  "name": "TODO: CellModel Constructor #6",
                  "description": "TODO: Construct CellModel w/single ACT registration specified using a pre-constructed ControllerAction ES6 class instance."
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [oaDCGbTSd3oYxmNQCBfVTQ::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [T-BP4MgzyDOa-pr65Zrlmg::Harness Proxy::<UBSclp3gSqCCmSvoG3W4tw::CellProcessor Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsWRwtrxCUvzPsiaQrCA6Q::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::AbstractProcessModel Harness>], [Y5x5Ppl-S52sP5gjgMqI2A::Harness Proxy::<SP1HKRvJTNaq7-r-XhPYMg::Holodeck Runner Test #5B>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [c65zrhI3Ejco_Sj9nPKc8g::Harness Proxy::<FAvFLw0XQN6yomNs13r21g::CellModel Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [wTy7cxUdAkgPXdaZzSzjEw::Harness Proxy::<fEMk__iaS36GdSTX-2VE7A::Holodeck Runner Test #5A>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [z8o7ETWrb-47aDkBy1I9wQ::Harness Proxy::<OLdqtYwjToetbonB-pSRyw::Holodeck Runner Test #6>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "rShJ0riLSiOxLt0OpFJLJA": {
                "harnessRequest": {
                  "id": "rShJ0riLSiOxLt0OpFJLJA",
                  "name": "SoftewareCellModel Constructor #7",
                  "description": "Construct CellModel w/two subcell registrations specified using constructor request objects.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "rShJ0riLSiOxLt0OpFJLJA",
                            "name": "SoftewareCellModel Constructor #5",
                            "description": "Try to construct a full (but-ultimately fake) CellModel including subcell definitions.",
                            "subcells": [
                              {
                                "id": "HbLgO6RMRRacUTjXqv2Rrw",
                                "name": "Test Subcell #1",
                                "description": "Test subcell #1 defines an APM.",
                                "apm": {
                                  "id": "gA3KJMtcS6K8o5cV4plg3w",
                                  "name": "Test Subcell #1 APM",
                                  "description": "Just a test"
                                }
                              },
                              {
                                "id": "0Yacg-V9QDqmbVlOFMSVVw",
                                "name": "Test Subcell #2",
                                "description": "Test subcell #2 defines a TOP.",
                                "operators": [
                                  {
                                    "id": "gcVJ6OIFQfyM6tn194wrsg",
                                    "name": "Test Subcell #2 TOP",
                                    "description": "Just a test",
                                    "operatorRequestSpec": {
                                      "____accept": "jsBoolean"
                                    }
                                  }
                                ]
                              },
                              {
                                "id": "fZ7sK3URSaK3QR7_IycJrw",
                                "name": "Test Subcell #3",
                                "description": "Test subcell #3 defines an ACT",
                                "actions": [
                                  {
                                    "id": "NQmQIuSMTbWYlQtmQr9n0A",
                                    "name": "Test Subcell #3 ACT",
                                    "description": "Just a test",
                                    "actionRequestSpec": {
                                      "____accept": "jsBoolean"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "rShJ0riLSiOxLt0OpFJLJA": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 11,
                              "edges": 13,
                              "artifacts": {
                                "cm": 4,
                                "apm": 1,
                                "top": 1,
                                "act": 1
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "gA3KJMtcS6K8o5cV4plg3w",
                                  "vdid": "YvrXnNHfNkAK7w7uvd2XtA",
                                  "name": "Test Subcell #1 APM",
                                  "description": "Just a test",
                                  "process": {
                                    "name": "[gA3KJMtcS6K8o5cV4plg3w::Test Subcell #1 APM] APM Digraph",
                                    "description": "Just a test",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "gcVJ6OIFQfyM6tn194wrsg",
                                  "vdid": "01VFbn09Xeyp5dxK9kYm2Q",
                                  "name": "Test Subcell #2 TOP",
                                  "description": "Just a test"
                                }
                              ],
                              "act": [
                                {
                                  "id": "NQmQIuSMTbWYlQtmQr9n0A",
                                  "vdid": "-bTRT-vecqU86PKlPA1a7Q",
                                  "name": "Test Subcell #3 ACT",
                                  "description": "Just a test"
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "rShJ0riLSiOxLt0OpFJLJA": {
                                  "id": "rShJ0riLSiOxLt0OpFJLJA",
                                  "vdid": "0Zr0pacA7fx0d0zRWIBh0g",
                                  "name": "SoftewareCellModel Constructor #5",
                                  "description": "Try to construct a full (but-ultimately fake) CellModel including subcell definitions.",
                                  "type": "CM",
                                  "HbLgO6RMRRacUTjXqv2Rrw": {
                                    "id": "HbLgO6RMRRacUTjXqv2Rrw",
                                    "vdid": "t1D1VQnSHIlEB6u0n3rpVA",
                                    "name": "Test Subcell #1",
                                    "description": "Test subcell #1 defines an APM.",
                                    "type": "CM",
                                    "gA3KJMtcS6K8o5cV4plg3w": {
                                      "id": "gA3KJMtcS6K8o5cV4plg3w",
                                      "vdid": "YvrXnNHfNkAK7w7uvd2XtA",
                                      "name": "Test Subcell #1 APM",
                                      "description": "Just a test",
                                      "type": "APM"
                                    }
                                  },
                                  "0Yacg-V9QDqmbVlOFMSVVw": {
                                    "id": "0Yacg-V9QDqmbVlOFMSVVw",
                                    "vdid": "LQr2wPH-mgcie_f4JrdkMQ",
                                    "name": "Test Subcell #2",
                                    "description": "Test subcell #2 defines a TOP.",
                                    "type": "CM",
                                    "gcVJ6OIFQfyM6tn194wrsg": {
                                      "id": "gcVJ6OIFQfyM6tn194wrsg",
                                      "vdid": "01VFbn09Xeyp5dxK9kYm2Q",
                                      "name": "Test Subcell #2 TOP",
                                      "description": "Just a test",
                                      "type": "TOP"
                                    }
                                  },
                                  "fZ7sK3URSaK3QR7_IycJrw": {
                                    "id": "fZ7sK3URSaK3QR7_IycJrw",
                                    "vdid": "b0rZg6vrvRLPlw7yYkDvoQ",
                                    "name": "Test Subcell #3",
                                    "description": "Test subcell #3 defines an ACT",
                                    "type": "CM",
                                    "NQmQIuSMTbWYlQtmQr9n0A": {
                                      "id": "NQmQIuSMTbWYlQtmQr9n0A",
                                      "vdid": "-bTRT-vecqU86PKlPA1a7Q",
                                      "name": "Test Subcell #3 ACT",
                                      "description": "Just a test",
                                      "type": "ACT"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "T-BP4MgzyDOa-pr65Zrlmg": {
              "ILfH_hfQSM-ZOohMgpYU8A": {
                "harnessRequest": {
                  "id": "ILfH_hfQSM-ZOohMgpYU8A",
                  "name": "CellProcessor Constructor #1",
                  "description": "Default construct CellProcessor ES6 class. Should fail.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellProcessor": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "UBSclp3gSqCCmSvoG3W4tw": {
                        "ILfH_hfQSM-ZOohMgpYU8A": {
                          "isValid": false,
                          "toJSON": "CellProcessor::constructor for [unspecified::unspecified] failed yielding a zombie instance. Filter [7tYVAis3TJGjaEe-6DiKHw::SoftwareCellProcessor::constructor Filter] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "T-BP4MgzyDOa-pr65Zrlmg": {
              "NPN6z4aOTqOOO60wLVKOcg": {
                "harnessRequest": {
                  "id": "NPN6z4aOTqOOO60wLVKOcg",
                  "name": "CellProcessor Constructor #2",
                  "description": "A minamally-configured CellProcessor instance.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellProcessor": {
                          "constructorRequest": {
                            "id": "NPN6z4aOTqOOO60wLVKOcg",
                            "name": "CellProcessor Constructor #2",
                            "description": "A minamally-configured CellProcessor instance.",
                            "cellmodel": {
                              "id": "cJQGRL5sTSqk02JiEaM06g",
                              "name": "Test CM",
                              "description": "Test CellModel",
                              "apm": {
                                "id": "6OPnhgR9QWyEFaBpaZNb1A",
                                "name": "Test CM APM",
                                "description": "Test AbstractProcessModel",
                                "ocdDataSpec": {
                                  "____label": "Test APM Root",
                                  "____types": "jsObject",
                                  "____defaultValue": {},
                                  "testProperty": {
                                    "____label": "Test Property",
                                    "____accept": [
                                      "jsNull",
                                      "jsString"
                                    ],
                                    "____defaultValue": null
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "UBSclp3gSqCCmSvoG3W4tw": {
                        "NPN6z4aOTqOOO60wLVKOcg": {
                          "isValid": true,
                          "toJSON": {
                            "id": "IJQglDq2OrbGhsaGbtRu1A",
                            "vdid": "wrdir0YyuwtW4936BUvegA",
                            "name": "CellProcessor Constructor #2",
                            "description": "A minamally-configured CellProcessor instance.",
                            "cmat": {
                              "error": null,
                              "result": {
                                "INDEX_CM": {
                                  "type": "INDEX",
                                  "IJQglDq2OrbGhsaGbtRu1A": {
                                    "id": "IJQglDq2OrbGhsaGbtRu1A",
                                    "vdid": "wrdir0YyuwtW4936BUvegA",
                                    "name": "CellProcessor Constructor #2",
                                    "description": "A minamally-configured CellProcessor instance.",
                                    "type": "CM",
                                    "yGcR7lZWsQI7KGjccTNpvw": {
                                      "id": "yGcR7lZWsQI7KGjccTNpvw",
                                      "vdid": "xKVXEB16Tlm_KININ4NmfQ",
                                      "name": "Master Cell Process (MCP)",
                                      "description": "Manages aynchronous cellular processes executing within a CellProcessor instance.",
                                      "type": "APM"
                                    },
                                    "cJQGRL5sTSqk02JiEaM06g": {
                                      "id": "cJQGRL5sTSqk02JiEaM06g",
                                      "vdid": "DOPqQtXbViK9cNXI6Tu7Pw",
                                      "name": "Test CM",
                                      "description": "Test CellModel",
                                      "type": "CM",
                                      "6OPnhgR9QWyEFaBpaZNb1A": {
                                        "id": "6OPnhgR9QWyEFaBpaZNb1A",
                                        "vdid": "ep_P8Y0NBP28o2q8Kyg_qQ",
                                        "name": "Test CM APM",
                                        "description": "Test AbstractProcessModel",
                                        "type": "APM"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsWRwtrxCUvzPsiaQrCA6Q": {
              "sO15Cox_SVqcCgyrOllAwQ": {
                "harnessRequest": {
                  "id": "sO15Cox_SVqcCgyrOllAwQ",
                  "name": "Frame Latch OPM Test #1",
                  "description": "Run our Observable Frame Latch OPM declaration through the OPM test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "AbstractProcessModel": {
                          "constructorRequest": {
                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                            "name": "Abstract Frame Latch",
                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                            "process": {
                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                              "vlist": [
                                {
                                  "u": "uninitialized",
                                  "p": {
                                    "description": "Default starting process step.",
                                    "actions": {
                                      "enter": [],
                                      "exit": [
                                        {
                                          "holarchy": {
                                            "cm": {
                                              "actions": {
                                                "ocd": {
                                                  "setBooleanFlag": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "u": "updated",
                                  "p": {
                                    "description": "The value managed by the frame latch has been written.",
                                    "actions": {
                                      "enter": [],
                                      "exit": [
                                        {
                                          "holarchy": {
                                            "cm": {
                                              "actions": {
                                                "ocd": {
                                                  "clearBooleanFlag": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "u": "waiting",
                                  "p": {
                                    "description": "Frame latch value has not changed since last signalled update.",
                                    "actions": {
                                      "enter": [],
                                      "exit": []
                                    }
                                  }
                                }
                              ],
                              "elist": [
                                {
                                  "e": {
                                    "u": "uninitialized",
                                    "v": "updated"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "always": true
                                    }
                                  }
                                },
                                {
                                  "e": {
                                    "u": "updated",
                                    "v": "waiting"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "always": true
                                    }
                                  }
                                },
                                {
                                  "e": {
                                    "u": "waiting",
                                    "v": "updated"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "holarchy": {
                                        "cm": {
                                          "operators": {
                                            "ocd": {
                                              "isBooleanFlagSet": {
                                                "path": "#.clock"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "sO15Cox_SVqcCgyrOllAwQ": {
                          "isValid": true,
                          "toJSON": {
                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                            "name": "Abstract Frame Latch",
                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                            "process": {
                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                              "vlist": [
                                {
                                  "u": "uninitialized",
                                  "p": {
                                    "description": "Default starting process step.",
                                    "actions": {
                                      "enter": [],
                                      "exit": [
                                        {
                                          "holarchy": {
                                            "cm": {
                                              "actions": {
                                                "ocd": {
                                                  "setBooleanFlag": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "u": "updated",
                                  "p": {
                                    "description": "The value managed by the frame latch has been written.",
                                    "actions": {
                                      "enter": [],
                                      "exit": [
                                        {
                                          "holarchy": {
                                            "cm": {
                                              "actions": {
                                                "ocd": {
                                                  "clearBooleanFlag": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "u": "waiting",
                                  "p": {
                                    "description": "Frame latch value has not changed since last signalled update.",
                                    "actions": {
                                      "enter": [],
                                      "exit": []
                                    }
                                  }
                                }
                              ],
                              "elist": [
                                {
                                  "e": {
                                    "u": "uninitialized",
                                    "v": "updated"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "always": true
                                    }
                                  }
                                },
                                {
                                  "e": {
                                    "u": "updated",
                                    "v": "waiting"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "always": true
                                    }
                                  }
                                },
                                {
                                  "e": {
                                    "u": "waiting",
                                    "v": "updated"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "holarchy": {
                                        "cm": {
                                          "operators": {
                                            "ocd": {
                                              "isBooleanFlagSet": {
                                                "path": "#.clock"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "getID": "z_mTe02hSWmaM1iRO1pBeA",
                          "getName": "Abstract Frame Latch",
                          "getDescription": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                          "getDataSpec": {
                            "____label": "Abstract Frame Latch",
                            "____types": "jsObject",
                            "____defaultValue": {},
                            "clock": {
                              "____accept": "jsBoolean",
                              "____defaultValue": false
                            }
                          },
                          "getDigraph": {
                            "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                            "vlist": [
                              {
                                "u": "uninitialized",
                                "p": {
                                  "description": "Default starting process step.",
                                  "actions": {
                                    "enter": [],
                                    "exit": [
                                      {
                                        "holarchy": {
                                          "cm": {
                                            "actions": {
                                              "ocd": {
                                                "setBooleanFlag": {
                                                  "path": "#.clock"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "u": "updated",
                                "p": {
                                  "description": "The value managed by the frame latch has been written.",
                                  "actions": {
                                    "enter": [],
                                    "exit": [
                                      {
                                        "holarchy": {
                                          "cm": {
                                            "actions": {
                                              "ocd": {
                                                "clearBooleanFlag": {
                                                  "path": "#.clock"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "u": "waiting",
                                "p": {
                                  "description": "Frame latch value has not changed since last signalled update.",
                                  "actions": {
                                    "enter": [],
                                    "exit": []
                                  }
                                }
                              }
                            ],
                            "elist": [
                              {
                                "e": {
                                  "u": "uninitialized",
                                  "v": "updated"
                                },
                                "p": {
                                  "priority": 0,
                                  "operator": {
                                    "always": true
                                  }
                                }
                              },
                              {
                                "e": {
                                  "u": "updated",
                                  "v": "waiting"
                                },
                                "p": {
                                  "priority": 0,
                                  "operator": {
                                    "always": true
                                  }
                                }
                              },
                              {
                                "e": {
                                  "u": "waiting",
                                  "v": "updated"
                                },
                                "p": {
                                  "priority": 0,
                                  "operator": {
                                    "holarchy": {
                                      "cm": {
                                        "operators": {
                                          "ocd": {
                                            "isBooleanFlagSet": {
                                              "path": "#.clock"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "uZN6-qpIQO6CkwmLDWtMCw": {
                "harnessRequest": {
                  "id": "uZN6-qpIQO6CkwmLDWtMCw",
                  "name": "OPC Frame Latch Test #1",
                  "description": "Try to apply the Frame Latch OPM in an OPC system.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "uZN6-qpIQO6CkwmLDWtMCw",
                            "name": "OPC Frame Latch Test #1",
                            "description": "Try to apply the Frame Latch OPM in an OPC system.",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "frameLatch": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "apm": "z_mTe02hSWmaM1iRO1pBeA"
                                },
                                "value": {
                                  "____accept": "jsString",
                                  "____defaultValue": "default"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                }
                              ]
                            ]
                          },
                          "actRequests": [
                            {
                              "actorName": "uZN6-qpIQO6CkwmLDWtMCw test action call",
                              "actorDescription": "A simple attempt to set a frame latch value.",
                              "actionRequest": {
                                "holarchy": {
                                  "cm": {
                                    "actions": {
                                      "frameLatch": {
                                        "write": {
                                          "path": "~.frameLatch",
                                          "value": "whatever"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "uZN6-qpIQO6CkwmLDWtMCw": {
                          "opcToJSON": {
                            "id": "uZN6-qpIQO6CkwmLDWtMCw",
                            "name": "OPC Frame Latch Test #1",
                            "description": "Try to apply the Frame Latch OPM in an OPC system.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "z_mTe02hSWmaM1iRO1pBeA": {
                                "id": "z_mTe02hSWmaM1iRO1pBeA",
                                "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                "name": "Abstract Frame Latch",
                                "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                "process": {
                                  "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "actions": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "updated",
                                      "p": {
                                        "description": "The value managed by the frame latch has been written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "actions": {
                                                    "ocd": {
                                                      "clearBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "waiting",
                                      "p": {
                                        "description": "Frame latch value has not changed since last signalled update.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "updated"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "updated",
                                        "v": "waiting"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "waiting",
                                        "v": "updated"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "cm": {
                                              "operators": {
                                                "ocd": {
                                                  "isBooleanFlagSet": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.frameLatch",
                                "opmiRef": {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "frameLatch": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "apm": "z_mTe02hSWmaM1iRO1pBeA"
                                },
                                "value": {
                                  "____accept": "jsString",
                                  "____defaultValue": "default"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [uZN6-qpIQO6CkwmLDWtMCw::OPC Frame Latch Test #1] Observable Controller Data Store",
                              "____description": "OPC [uZN6-qpIQO6CkwmLDWtMCw::OPC Frame Latch Test #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "frameLatch": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "apm": "z_mTe02hSWmaM1iRO1pBeA"
                                },
                                "value": {
                                  "____accept": "jsString",
                                  "____defaultValue": "default"
                                },
                                "____label": "Abstract Frame Latch",
                                "____defaultValue": {},
                                "clock": {
                                  "____accept": "jsBoolean",
                                  "____defaultValue": false
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "frameLatch": {
                                "value": "default",
                                "clock": false,
                                "__apmiStep": "waiting"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "YDUzyHsW9WTwMQq9C_3eww",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "5fnad9ugimEO4YVOdbt3ow",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "sUE6VG4yBJqa8LtWWOANRw",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "1Cf0E2DANVdsIo7tKVYUtA"
                              },
                              "supportedFilters": [
                                "[5rFEDGLYRSiZCeChMnkCHQ::OCD Boolean Flag Set]",
                                "[DNAoE5L3R-mY6jLAF2S95A::Holistic App Client Runtime Subprocess Action]",
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[Ve_kEFkGSMSgOqUWu9Yo_w::OCD Read Namespace Indirect]",
                                "[_yxWfFLnTqqN-UxRdd7W5w::OCD Boolean Flag Clear]",
                                "[iyvk_9vhRn2qvrjOes5v7Q::Frame Latch: Write]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "iyvk_9vhRn2qvrjOes5v7Q": {
                                "filterDescriptor": {
                                  "operationID": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "operationName": "Frame Latch: Write",
                                  "operationDescription": "Writes the value made observable by frame latch APM instance.",
                                  "inputFilterSpec": {
                                    "____label": "Frame Latch: Write Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "frameLatch": {
                                              "____types": "jsObject",
                                              "write": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____label": "Frame Latch Bound Namespace Path",
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____label": "Write Value",
                                                  "____opaque": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "Write Frame Latch Result",
                                    "____description": "This is generically a reference to the value written to the frame latch indicated by 'path'.",
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "dOV6tM17rLvrsqbIM4LzCg",
                                  "inputTypeVDID": "ReMEnCXFT3yFkJ3JX6oz3g",
                                  "outputTypeVIID": "LPeeiMV42LNeAhthe2myDQ",
                                  "outputTypeVDID": "8-d-OpyoAkX4G5bt5_5T_Q",
                                  "operationVDID": "E7NA-ISmB6dh6uB3b1wMSw"
                                }
                              },
                              "DNAoE5L3R-mY6jLAF2S95A": {
                                "filterDescriptor": {
                                  "operationID": "DNAoE5L3R-mY6jLAF2S95A",
                                  "operationName": "Holistic App Client Runtime Subprocess Action",
                                  "operationDescription": "Creates a cellular subprocess.",
                                  "inputFilterSpec": {
                                    "____label": "Holistic App Client Runtime Subprocess Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "process": {
                                                "____types": "jsObject",
                                                "create": {
                                                  "____types": "jsObject",
                                                  "apmBindingPath": {
                                                    "____accept": "jsString"
                                                  },
                                                  "ocdInitData": {
                                                    "____accept": "jsObject",
                                                    "____defaultValue": {}
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____types": "jsObject",
                                    "apmBindingPath": {
                                      "____accept": "jsString"
                                    },
                                    "processID": {
                                      "____accept": "jsString"
                                    }
                                  },
                                  "inputTypeVIID": "0cct1u09r0aOFKgpIMxVQg",
                                  "inputTypeVDID": "wignRGwP30We8f90DNa5Nw",
                                  "outputTypeVIID": "T_Gb_5QUX2zxjS-xY9wvCQ",
                                  "outputTypeVDID": "x1YL5_hRGHfO54xljPnY3g",
                                  "operationVDID": "1HnEbWLPE1ARGRnlL6LLYw"
                                }
                              },
                              "_yxWfFLnTqqN-UxRdd7W5w": {
                                "filterDescriptor": {
                                  "operationID": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "operationName": "OCD Boolean Flag Clear",
                                  "operationDescription": "Set the Boolean-type OCD namespace specified by path to value false.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Clear Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "clearBooleanFlag": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "Q26xScNwSEHmeE4xjO_vtg",
                                  "inputTypeVDID": "9JJ6pBweTCwI2oO98eA5jA",
                                  "outputTypeVIID": "_Jrf_S2nEWwsSx89q6ealg",
                                  "outputTypeVDID": "xHanI1kT9ivLTVhizlh1ng",
                                  "operationVDID": "22s0kmR4PDHNH1MwaETpSA"
                                }
                              },
                              "5rFEDGLYRSiZCeChMnkCHQ": {
                                "filterDescriptor": {
                                  "operationID": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "operationName": "OCD Boolean Flag Set",
                                  "operationDescription": "Set the Boolean-type OCD namespace specified by path to value true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "setBooleanFlag": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "YJSR1JZOriuhfXfKbnMV4Q",
                                  "inputTypeVDID": "0SvJjLbCiM4zgfkcsCtG9w",
                                  "outputTypeVIID": "kyxCxyo_W507HuHlFVvwIQ",
                                  "outputTypeVDID": "xHanI1kT9ivLTVhizlh1ng",
                                  "operationVDID": "bCv1ksN_4DF7HKQweU68SA"
                                }
                              },
                              "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                "filterDescriptor": {
                                  "operationID": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "operationName": "OCD Read Namespace Indirect",
                                  "operationDescription": "Reads and returns the value of OCD namespace via path indirection.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Read Namespace Indirect Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "readNamespaceIndirect": {
                                                "____types": "jsObject",
                                                "path2": {
                                                  "____label": "Target Path Namespace Path",
                                                  "____description": "The OCD path of the string namespace containing the OCD path of the target namespace to read.",
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "r0nWow8E0BIohA7UDujmMw",
                                  "inputTypeVDID": "IOgWXFaAcQ5ZA6pPH8_2xg",
                                  "outputTypeVIID": "QKKFgPFZL00DATFNfFLfiQ",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "0IU7E_qFb1e52MDt_6IqtA"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 3,
                                    "frames": 3,
                                    "errors": 0,
                                    "transitions": 2
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 1,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [
                                          "rWatZg2xDbHwiPCI5s_mzw"
                                        ],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {
                                      "rWatZg2xDbHwiPCI5s_mzw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.frameLatch",
                                            "specPath": "~.frameLatch"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "process": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "Frame latch value has not changed since last signalled update.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "transitioned",
                                          "finishStep": "updated",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.frameLatch",
                                                    "ocdi": {
                                                      "frameLatch": {
                                                        "value": "default",
                                                        "clock": false,
                                                        "__apmiStep": "waiting"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "holarchy": {
                                                    "cm": {
                                                      "actions": {
                                                        "ocd": {
                                                          "setBooleanFlag": {
                                                            "path": "#.clock"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": {}
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": {
                                              "error": null,
                                              "result": "updated"
                                            }
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 1,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [
                                          "rWatZg2xDbHwiPCI5s_mzw"
                                        ],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {
                                      "rWatZg2xDbHwiPCI5s_mzw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.frameLatch",
                                            "specPath": "~.frameLatch"
                                          },
                                          "initialStep": "updated",
                                          "apmRef": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "process": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "Frame latch value has not changed since last signalled update.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "transitioned",
                                          "finishStep": "waiting",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.frameLatch",
                                                    "ocdi": {
                                                      "frameLatch": {
                                                        "value": "default",
                                                        "clock": false,
                                                        "__apmiStep": "waiting"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "holarchy": {
                                                    "cm": {
                                                      "actions": {
                                                        "ocd": {
                                                          "clearBooleanFlag": {
                                                            "path": "#.clock"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": {}
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": {
                                              "error": null,
                                              "result": "waiting"
                                            }
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {
                                      "rWatZg2xDbHwiPCI5s_mzw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.frameLatch",
                                            "specPath": "~.frameLatch"
                                          },
                                          "initialStep": "waiting",
                                          "apmRef": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "process": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "Frame latch value has not changed since last signalled update.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "noop",
                                          "finishStep": "waiting",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.frameLatch",
                                                    "ocdi": {
                                                      "frameLatch": {
                                                        "value": "default",
                                                        "clock": false,
                                                        "__apmiStep": "waiting"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "holarchy": {
                                                      "cm": {
                                                        "operators": {
                                                          "ocd": {
                                                            "isBooleanFlagSet": {
                                                              "path": "#.clock"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": false
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "actorName": "uZN6-qpIQO6CkwmLDWtMCw test action call",
                                "actorDescription": "A simple attempt to set a frame latch value.",
                                "actionRequest": {
                                  "holarchy": {
                                    "cm": {
                                      "actions": {
                                        "frameLatch": {
                                          "write": {
                                            "path": "~.frameLatch",
                                            "value": "whatever"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "actResponse": {
                                "error": null,
                                "result": {
                                  "actionResult": "whatever",
                                  "lastEvaluation": {
                                    "evalNumber": 1,
                                    "summary": {
                                      "counts": {
                                        "bindings": 3,
                                        "frames": 3,
                                        "errors": 0,
                                        "transitions": 2
                                      }
                                    },
                                    "evalFrames": [
                                      {
                                        "summary": {
                                          "counts": {
                                            "bindings": 1,
                                            "transitions": 1,
                                            "errors": 0
                                          },
                                          "reports": {
                                            "transitions": [
                                              "rWatZg2xDbHwiPCI5s_mzw"
                                            ],
                                            "errors": []
                                          }
                                        },
                                        "bindings": {
                                          "rWatZg2xDbHwiPCI5s_mzw": {
                                            "evalRequest": {
                                              "dataBinding": {
                                                "dataPath": "~.frameLatch",
                                                "specPath": "~.frameLatch"
                                              },
                                              "initialStep": "waiting",
                                              "apmRef": {
                                                "id": "z_mTe02hSWmaM1iRO1pBeA",
                                                "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                                "name": "Abstract Frame Latch",
                                                "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                                "process": {
                                                  "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                                  "vlist": [
                                                    {
                                                      "u": "uninitialized",
                                                      "p": {
                                                        "description": "Default starting process step.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": [
                                                            {
                                                              "holarchy": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "ocd": {
                                                                      "setBooleanFlag": {
                                                                        "path": "#.clock"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "u": "updated",
                                                      "p": {
                                                        "description": "The value managed by the frame latch has been written.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": [
                                                            {
                                                              "holarchy": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "ocd": {
                                                                      "clearBooleanFlag": {
                                                                        "path": "#.clock"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "u": "waiting",
                                                      "p": {
                                                        "description": "Frame latch value has not changed since last signalled update.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": []
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "elist": [
                                                    {
                                                      "e": {
                                                        "u": "uninitialized",
                                                        "v": "updated"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "always": true
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "e": {
                                                        "u": "updated",
                                                        "v": "waiting"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "always": true
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "e": {
                                                        "u": "waiting",
                                                        "v": "updated"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isBooleanFlagSet": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "evalResponse": {
                                              "status": "transitioned",
                                              "finishStep": "updated",
                                              "phases": {
                                                "p1_toperator": [
                                                  {
                                                    "request": {
                                                      "context": {
                                                        "apmBindingPath": "~.frameLatch",
                                                        "ocdi": {
                                                          "frameLatch": {
                                                            "value": "whatever",
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "transitionDispatcher": {
                                                          "filterDescriptor": {
                                                            "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                            "operationName": "Discriminator Filter",
                                                            "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                            "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                            "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                            "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                            "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                            "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                          },
                                                          "supportedFilters": [
                                                            "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                            "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                            "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                            "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                            "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                            "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                            "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                            "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                            "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                            "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                            "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                            "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                          ],
                                                          "options": {
                                                            "action": "getFilter"
                                                          }
                                                        }
                                                      },
                                                      "operatorRequest": {
                                                        "holarchy": {
                                                          "cm": {
                                                            "operators": {
                                                              "ocd": {
                                                                "isBooleanFlagSet": {
                                                                  "path": "#.clock"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "response": {
                                                      "error": null,
                                                      "result": true
                                                    }
                                                  }
                                                ],
                                                "p2_exit": [],
                                                "p3_enter": [],
                                                "p4_finalize": {
                                                  "error": null,
                                                  "result": "updated"
                                                }
                                              },
                                              "errors": {
                                                "p1_toperator": 0,
                                                "p2_exit": 0,
                                                "p3_enter": 0,
                                                "p4_finalize": 0,
                                                "total": 0
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "summary": {
                                          "counts": {
                                            "bindings": 1,
                                            "transitions": 1,
                                            "errors": 0
                                          },
                                          "reports": {
                                            "transitions": [
                                              "rWatZg2xDbHwiPCI5s_mzw"
                                            ],
                                            "errors": []
                                          }
                                        },
                                        "bindings": {
                                          "rWatZg2xDbHwiPCI5s_mzw": {
                                            "evalRequest": {
                                              "dataBinding": {
                                                "dataPath": "~.frameLatch",
                                                "specPath": "~.frameLatch"
                                              },
                                              "initialStep": "updated",
                                              "apmRef": {
                                                "id": "z_mTe02hSWmaM1iRO1pBeA",
                                                "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                                "name": "Abstract Frame Latch",
                                                "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                                "process": {
                                                  "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                                  "vlist": [
                                                    {
                                                      "u": "uninitialized",
                                                      "p": {
                                                        "description": "Default starting process step.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": [
                                                            {
                                                              "holarchy": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "ocd": {
                                                                      "setBooleanFlag": {
                                                                        "path": "#.clock"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "u": "updated",
                                                      "p": {
                                                        "description": "The value managed by the frame latch has been written.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": [
                                                            {
                                                              "holarchy": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "ocd": {
                                                                      "clearBooleanFlag": {
                                                                        "path": "#.clock"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "u": "waiting",
                                                      "p": {
                                                        "description": "Frame latch value has not changed since last signalled update.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": []
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "elist": [
                                                    {
                                                      "e": {
                                                        "u": "uninitialized",
                                                        "v": "updated"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "always": true
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "e": {
                                                        "u": "updated",
                                                        "v": "waiting"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "always": true
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "e": {
                                                        "u": "waiting",
                                                        "v": "updated"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isBooleanFlagSet": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "evalResponse": {
                                              "status": "transitioned",
                                              "finishStep": "waiting",
                                              "phases": {
                                                "p1_toperator": [
                                                  {
                                                    "request": {
                                                      "context": {
                                                        "apmBindingPath": "~.frameLatch",
                                                        "ocdi": {
                                                          "frameLatch": {
                                                            "value": "whatever",
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "transitionDispatcher": {
                                                          "filterDescriptor": {
                                                            "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                            "operationName": "Discriminator Filter",
                                                            "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                            "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                            "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                            "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                            "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                            "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                          },
                                                          "supportedFilters": [
                                                            "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                            "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                            "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                            "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                            "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                            "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                            "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                            "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                            "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                            "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                            "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                            "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                          ],
                                                          "options": {
                                                            "action": "getFilter"
                                                          }
                                                        }
                                                      },
                                                      "operatorRequest": {
                                                        "always": true
                                                      }
                                                    },
                                                    "response": {
                                                      "error": null,
                                                      "result": true
                                                    }
                                                  }
                                                ],
                                                "p2_exit": [
                                                  {
                                                    "request": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "actions": {
                                                            "ocd": {
                                                              "clearBooleanFlag": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "response": {
                                                      "error": null,
                                                      "result": {}
                                                    }
                                                  }
                                                ],
                                                "p3_enter": [],
                                                "p4_finalize": {
                                                  "error": null,
                                                  "result": "waiting"
                                                }
                                              },
                                              "errors": {
                                                "p1_toperator": 0,
                                                "p2_exit": 0,
                                                "p3_enter": 0,
                                                "p4_finalize": 0,
                                                "total": 0
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "summary": {
                                          "counts": {
                                            "bindings": 1,
                                            "transitions": 0,
                                            "errors": 0
                                          },
                                          "reports": {
                                            "transitions": [],
                                            "errors": []
                                          }
                                        },
                                        "bindings": {
                                          "rWatZg2xDbHwiPCI5s_mzw": {
                                            "evalRequest": {
                                              "dataBinding": {
                                                "dataPath": "~.frameLatch",
                                                "specPath": "~.frameLatch"
                                              },
                                              "initialStep": "waiting",
                                              "apmRef": {
                                                "id": "z_mTe02hSWmaM1iRO1pBeA",
                                                "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                                "name": "Abstract Frame Latch",
                                                "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                                "process": {
                                                  "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                                  "vlist": [
                                                    {
                                                      "u": "uninitialized",
                                                      "p": {
                                                        "description": "Default starting process step.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": [
                                                            {
                                                              "holarchy": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "ocd": {
                                                                      "setBooleanFlag": {
                                                                        "path": "#.clock"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "u": "updated",
                                                      "p": {
                                                        "description": "The value managed by the frame latch has been written.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": [
                                                            {
                                                              "holarchy": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "ocd": {
                                                                      "clearBooleanFlag": {
                                                                        "path": "#.clock"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "u": "waiting",
                                                      "p": {
                                                        "description": "Frame latch value has not changed since last signalled update.",
                                                        "actions": {
                                                          "enter": [],
                                                          "exit": []
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "elist": [
                                                    {
                                                      "e": {
                                                        "u": "uninitialized",
                                                        "v": "updated"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "always": true
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "e": {
                                                        "u": "updated",
                                                        "v": "waiting"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "always": true
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "e": {
                                                        "u": "waiting",
                                                        "v": "updated"
                                                      },
                                                      "p": {
                                                        "priority": 0,
                                                        "operator": {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isBooleanFlagSet": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "evalResponse": {
                                              "status": "noop",
                                              "finishStep": "waiting",
                                              "phases": {
                                                "p1_toperator": [
                                                  {
                                                    "request": {
                                                      "context": {
                                                        "apmBindingPath": "~.frameLatch",
                                                        "ocdi": {
                                                          "frameLatch": {
                                                            "value": "whatever",
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "transitionDispatcher": {
                                                          "filterDescriptor": {
                                                            "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                            "operationName": "Discriminator Filter",
                                                            "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                            "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                            "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                            "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                            "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                            "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                          },
                                                          "supportedFilters": [
                                                            "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                            "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                            "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                            "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                            "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                            "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                            "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                            "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                            "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                            "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                            "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                            "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                          ],
                                                          "options": {
                                                            "action": "getFilter"
                                                          }
                                                        }
                                                      },
                                                      "operatorRequest": {
                                                        "holarchy": {
                                                          "cm": {
                                                            "operators": {
                                                              "ocd": {
                                                                "isBooleanFlagSet": {
                                                                  "path": "#.clock"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "response": {
                                                      "error": null,
                                                      "result": false
                                                    }
                                                  }
                                                ],
                                                "p2_exit": [],
                                                "p3_enter": [],
                                                "p4_finalize": null
                                              },
                                              "errors": {
                                                "p1_toperator": 0,
                                                "p2_exit": 0,
                                                "p3_enter": 0,
                                                "p4_finalize": 0,
                                                "total": 0
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "kSrV2fJ_S-aXkSmJwxYpDQ": {
                "harnessRequest": {
                  "id": "kSrV2fJ_S-aXkSmJwxYpDQ",
                  "name": "@encapsule/holarchy-cm CellModel Export Test",
                  "description": "Attempt to instantiate the exported CML using the CellModel harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "kSrV2fJ_S-aXkSmJwxYpDQ",
                            "name": "@encapsule/holarchy-cm CellModel Export Test",
                            "description": "Attempt to instantiate the exported CML using the CellModel harness.",
                            "subcells": [
                              {
                                "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                "name": "Holarchy CML",
                                "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                "cmat": {
                                  "error": null,
                                  "result": {
                                    "INDEX_CM": {
                                      "type": "INDEX",
                                      "RyMcv3MpTI-Co1EyVOIvlw": {
                                        "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                        "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                        "name": "Holarchy CML",
                                        "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                        "type": "CM",
                                        "MDVBKW89TvO9T62Ge7GmNg": {
                                          "id": "MDVBKW89TvO9T62Ge7GmNg",
                                          "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                          "name": "Holarchy Core",
                                          "description": "Holarchy core operations and actions for building derived CellModels.",
                                          "type": "CM",
                                          "orTbEFR_Q-u-qqEqP8OUBA": {
                                            "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                            "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                            "name": "Holarchy Core Cell",
                                            "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                            "type": "CM",
                                            "9tNY7o5GTUGH_xda2GhP-w": {
                                              "id": "9tNY7o5GTUGH_xda2GhP-w",
                                              "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                              "name": "Cell Process In Step Operator",
                                              "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                              "type": "TOP"
                                            },
                                            "DNAoE5L3R-mY6jLAF2S95A": {
                                              "id": "DNAoE5L3R-mY6jLAF2S95A",
                                              "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                              "name": "Holistic App Client Runtime Subprocess Action",
                                              "description": "Creates a cellular subprocess.",
                                              "type": "ACT"
                                            }
                                          },
                                          "RW8Y2O-kRNSv87yXT962wQ": {
                                            "id": "RW8Y2O-kRNSv87yXT962wQ",
                                            "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                            "name": "Holarchy Core Logic",
                                            "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                            "type": "CM",
                                            "YgABX95wR86GCYrYaDLISA": {
                                              "id": "YgABX95wR86GCYrYaDLISA",
                                              "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                              "name": "AND Transition Expression Operator",
                                              "description": "Returns Boolean true iff all suboperations return true.",
                                              "type": "TOP"
                                            },
                                            "0JIva4IFSm6Xm7i38g8uUA": {
                                              "id": "0JIva4IFSm6Xm7i38g8uUA",
                                              "vdid": "HyCocPERRAAEOSzTOspyaw",
                                              "name": "OR Transition Expression Operator",
                                              "description": "Returns Boolean true iff any suboperations return true.",
                                              "type": "TOP"
                                            },
                                            "TLSHkl73SO-utuzM7dyN2g": {
                                              "id": "TLSHkl73SO-utuzM7dyN2g",
                                              "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                              "name": "NOT Transition Expression Operator",
                                              "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                              "type": "TOP"
                                            },
                                            "e89cwnP4Qd6MocAhzdOJgw": {
                                              "id": "e89cwnP4Qd6MocAhzdOJgw",
                                              "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                              "name": "Always returns Boolean true unconditionally.",
                                              "description": "Always returns true.",
                                              "type": "TOP"
                                            }
                                          },
                                          "jQxlhOe-RDilxY0sNIierQ": {
                                            "id": "jQxlhOe-RDilxY0sNIierQ",
                                            "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                            "name": "Holarchy Core Memory Operators",
                                            "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                            "type": "CM",
                                            "oaF3-dXwQkusjD3I2o9-8g": {
                                              "id": "oaF3-dXwQkusjD3I2o9-8g",
                                              "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                              "name": "OCD Array Length Equal to Value",
                                              "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                              "type": "TOP"
                                            },
                                            "2w7n6KxdR8mdIliePJesLQ": {
                                              "id": "2w7n6KxdR8mdIliePJesLQ",
                                              "vdid": "tljozSCr53fX-AmzURPyEg",
                                              "name": "OCD Compare Values",
                                              "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                              "type": "TOP"
                                            },
                                            "UeLs9PcASwuC7KR190eYhA": {
                                              "id": "UeLs9PcASwuC7KR190eYhA",
                                              "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                              "name": "OCD Boolean Flag Is Set",
                                              "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                              "type": "TOP"
                                            },
                                            "ggsavKiARsq7rjwn-lxdfA": {
                                              "id": "ggsavKiARsq7rjwn-lxdfA",
                                              "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                              "name": "OCD Namespace Is Greater Than Value",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                              "type": "TOP"
                                            },
                                            "k7THIKKDQMKOac1Rxh9tEQ": {
                                              "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                              "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                              "name": "OCD Namespace Is Identical To Value",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                              "type": "TOP"
                                            },
                                            "XxX_a1sQS1OlJbWAYfx6tQ": {
                                              "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                              "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                              "name": "OCD Namespace Is Less Than Value",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                              "type": "TOP"
                                            },
                                            "kD1PcgqYQlm7fJatNG2ZsA": {
                                              "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                              "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                              "name": "OCD Namespace Is Truthy",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                              "type": "TOP"
                                            },
                                            "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                              "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                              "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                              "name": "OCD Read Namespace Indirect",
                                              "description": "Reads and returns the value of OCD namespace via path indirection.",
                                              "type": "ACT"
                                            },
                                            "5rFEDGLYRSiZCeChMnkCHQ": {
                                              "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                              "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                              "name": "OCD Boolean Flag Set",
                                              "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                              "type": "ACT"
                                            },
                                            "_yxWfFLnTqqN-UxRdd7W5w": {
                                              "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                              "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                              "name": "OCD Boolean Flag Clear",
                                              "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                              "type": "ACT"
                                            }
                                          }
                                        },
                                        "c2cq2OE9SiaLKahL3Mk0KA": {
                                          "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                          "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                          "name": "Holarchy Base Cell Model",
                                          "description": "A collection of low-level building blocks.",
                                          "type": "CM",
                                          "U5iIpgd8SHCk7pvaciVLTQ": {
                                            "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                            "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                            "name": "Holarchy Base Memory Mailbox Flag",
                                            "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                            "type": "CM",
                                            "z_mTe02hSWmaM1iRO1pBeA": {
                                              "id": "z_mTe02hSWmaM1iRO1pBeA",
                                              "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                              "name": "Abstract Frame Latch",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "type": "APM"
                                            },
                                            "iyvk_9vhRn2qvrjOes5v7Q": {
                                              "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                              "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                              "name": "Frame Latch: Write",
                                              "description": "Writes the value made observable by frame latch APM instance.",
                                              "type": "ACT"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "kSrV2fJ_S-aXkSmJwxYpDQ": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 30,
                              "edges": 52,
                              "artifacts": {
                                "cm": 8,
                                "apm": 1,
                                "top": 12,
                                "act": 5
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              "act": [
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "kSrV2fJ_S-aXkSmJwxYpDQ": {
                                  "id": "kSrV2fJ_S-aXkSmJwxYpDQ",
                                  "vdid": "cUVSy5xj-o41ZVhZvf81lg",
                                  "name": "@encapsule/holarchy-cm CellModel Export Test",
                                  "description": "Attempt to instantiate the exported CML using the CellModel harness.",
                                  "type": "CM",
                                  "RyMcv3MpTI-Co1EyVOIvlw": {
                                    "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                    "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                    "name": "Holarchy CML",
                                    "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                    "type": "CM",
                                    "MDVBKW89TvO9T62Ge7GmNg": {
                                      "id": "MDVBKW89TvO9T62Ge7GmNg",
                                      "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                      "name": "Holarchy Core",
                                      "description": "Holarchy core operations and actions for building derived CellModels.",
                                      "type": "CM",
                                      "orTbEFR_Q-u-qqEqP8OUBA": {
                                        "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                        "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                        "name": "Holarchy Core Cell",
                                        "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                        "type": "CM",
                                        "9tNY7o5GTUGH_xda2GhP-w": {
                                          "id": "9tNY7o5GTUGH_xda2GhP-w",
                                          "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                          "name": "Cell Process In Step Operator",
                                          "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                          "type": "TOP"
                                        },
                                        "DNAoE5L3R-mY6jLAF2S95A": {
                                          "id": "DNAoE5L3R-mY6jLAF2S95A",
                                          "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                          "name": "Holistic App Client Runtime Subprocess Action",
                                          "description": "Creates a cellular subprocess.",
                                          "type": "ACT"
                                        }
                                      },
                                      "RW8Y2O-kRNSv87yXT962wQ": {
                                        "id": "RW8Y2O-kRNSv87yXT962wQ",
                                        "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                        "name": "Holarchy Core Logic",
                                        "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                        "type": "CM",
                                        "YgABX95wR86GCYrYaDLISA": {
                                          "id": "YgABX95wR86GCYrYaDLISA",
                                          "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                          "name": "AND Transition Expression Operator",
                                          "description": "Returns Boolean true iff all suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "0JIva4IFSm6Xm7i38g8uUA": {
                                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                                          "vdid": "HyCocPERRAAEOSzTOspyaw",
                                          "name": "OR Transition Expression Operator",
                                          "description": "Returns Boolean true iff any suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "TLSHkl73SO-utuzM7dyN2g": {
                                          "id": "TLSHkl73SO-utuzM7dyN2g",
                                          "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                          "name": "NOT Transition Expression Operator",
                                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                          "type": "TOP"
                                        },
                                        "e89cwnP4Qd6MocAhzdOJgw": {
                                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                                          "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                          "name": "Always returns Boolean true unconditionally.",
                                          "description": "Always returns true.",
                                          "type": "TOP"
                                        }
                                      },
                                      "jQxlhOe-RDilxY0sNIierQ": {
                                        "id": "jQxlhOe-RDilxY0sNIierQ",
                                        "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                        "name": "Holarchy Core Memory Operators",
                                        "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                        "type": "CM",
                                        "oaF3-dXwQkusjD3I2o9-8g": {
                                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                          "name": "OCD Array Length Equal to Value",
                                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                          "type": "TOP"
                                        },
                                        "2w7n6KxdR8mdIliePJesLQ": {
                                          "id": "2w7n6KxdR8mdIliePJesLQ",
                                          "vdid": "tljozSCr53fX-AmzURPyEg",
                                          "name": "OCD Compare Values",
                                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                          "type": "TOP"
                                        },
                                        "UeLs9PcASwuC7KR190eYhA": {
                                          "id": "UeLs9PcASwuC7KR190eYhA",
                                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                          "name": "OCD Boolean Flag Is Set",
                                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                          "type": "TOP"
                                        },
                                        "ggsavKiARsq7rjwn-lxdfA": {
                                          "id": "ggsavKiARsq7rjwn-lxdfA",
                                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                          "name": "OCD Namespace Is Greater Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "k7THIKKDQMKOac1Rxh9tEQ": {
                                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                          "name": "OCD Namespace Is Identical To Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "XxX_a1sQS1OlJbWAYfx6tQ": {
                                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                          "name": "OCD Namespace Is Less Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "kD1PcgqYQlm7fJatNG2ZsA": {
                                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                          "name": "OCD Namespace Is Truthy",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                          "type": "TOP"
                                        },
                                        "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                          "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                          "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                          "name": "OCD Read Namespace Indirect",
                                          "description": "Reads and returns the value of OCD namespace via path indirection.",
                                          "type": "ACT"
                                        },
                                        "5rFEDGLYRSiZCeChMnkCHQ": {
                                          "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                          "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                          "name": "OCD Boolean Flag Set",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                          "type": "ACT"
                                        },
                                        "_yxWfFLnTqqN-UxRdd7W5w": {
                                          "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                          "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                          "name": "OCD Boolean Flag Clear",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                          "type": "ACT"
                                        }
                                      }
                                    },
                                    "c2cq2OE9SiaLKahL3Mk0KA": {
                                      "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                      "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                      "name": "Holarchy Base Cell Model",
                                      "description": "A collection of low-level building blocks.",
                                      "type": "CM",
                                      "U5iIpgd8SHCk7pvaciVLTQ": {
                                        "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                        "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                        "name": "Holarchy Base Memory Mailbox Flag",
                                        "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                        "type": "CM",
                                        "z_mTe02hSWmaM1iRO1pBeA": {
                                          "id": "z_mTe02hSWmaM1iRO1pBeA",
                                          "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                          "name": "Abstract Frame Latch",
                                          "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                          "type": "APM"
                                        },
                                        "iyvk_9vhRn2qvrjOes5v7Q": {
                                          "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                          "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                          "name": "Frame Latch: Write",
                                          "description": "Writes the value made observable by frame latch APM instance.",
                                          "type": "ACT"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "D9E7--YgRqWfqoQFz7Ckfg": {
                "harnessRequest": {
                  "id": "D9E7--YgRqWfqoQFz7Ckfg",
                  "name": "d2r2/React Client Display Adaptor CellModel Test",
                  "description": "Send the current version of the d2r2/React Client Display Adapter CellModel through the CellModel test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "UX7JquBhSZO0QyEk7u9-sw",
                            "vdid": "ORpIKRkCxGDRpRZjC99eeQ",
                            "name": "Holistic App Client Display Adapter",
                            "description": "Manages the DOM display via @encapsule/d2r2 and React.",
                            "cmat": {
                              "error": null,
                              "result": {
                                "INDEX_CM": {
                                  "type": "INDEX",
                                  "UX7JquBhSZO0QyEk7u9-sw": {
                                    "id": "UX7JquBhSZO0QyEk7u9-sw",
                                    "vdid": "ORpIKRkCxGDRpRZjC99eeQ",
                                    "name": "Holistic App Client Display Adapter",
                                    "description": "Manages the DOM display via @encapsule/d2r2 and React.",
                                    "type": "CM",
                                    "IxoJ83u0TXmG7PLUYBvsyg": {
                                      "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                      "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                      "name": "d2r2/React Client Display Adaptor",
                                      "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                      "type": "APM"
                                    },
                                    "ENIOOasYSdmJj_RXjA__hQ": {
                                      "id": "ENIOOasYSdmJj_RXjA__hQ",
                                      "vdid": "CJYfMSZautkxLcK565ZDTg",
                                      "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                      "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD.",
                                      "type": "ACT"
                                    },
                                    "RyMcv3MpTI-Co1EyVOIvlw": {
                                      "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                      "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                      "name": "Holarchy CML",
                                      "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                      "type": "CM",
                                      "MDVBKW89TvO9T62Ge7GmNg": {
                                        "id": "MDVBKW89TvO9T62Ge7GmNg",
                                        "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                        "name": "Holarchy Core",
                                        "description": "Holarchy core operations and actions for building derived CellModels.",
                                        "type": "CM",
                                        "orTbEFR_Q-u-qqEqP8OUBA": {
                                          "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                          "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                          "name": "Holarchy Core Cell",
                                          "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                          "type": "CM",
                                          "9tNY7o5GTUGH_xda2GhP-w": {
                                            "id": "9tNY7o5GTUGH_xda2GhP-w",
                                            "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                            "name": "Cell Process In Step Operator",
                                            "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                            "type": "TOP"
                                          },
                                          "DNAoE5L3R-mY6jLAF2S95A": {
                                            "id": "DNAoE5L3R-mY6jLAF2S95A",
                                            "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                            "name": "Holistic App Client Runtime Subprocess Action",
                                            "description": "Creates a cellular subprocess.",
                                            "type": "ACT"
                                          }
                                        },
                                        "RW8Y2O-kRNSv87yXT962wQ": {
                                          "id": "RW8Y2O-kRNSv87yXT962wQ",
                                          "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                          "name": "Holarchy Core Logic",
                                          "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                          "type": "CM",
                                          "YgABX95wR86GCYrYaDLISA": {
                                            "id": "YgABX95wR86GCYrYaDLISA",
                                            "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                            "name": "AND Transition Expression Operator",
                                            "description": "Returns Boolean true iff all suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "0JIva4IFSm6Xm7i38g8uUA": {
                                            "id": "0JIva4IFSm6Xm7i38g8uUA",
                                            "vdid": "HyCocPERRAAEOSzTOspyaw",
                                            "name": "OR Transition Expression Operator",
                                            "description": "Returns Boolean true iff any suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "TLSHkl73SO-utuzM7dyN2g": {
                                            "id": "TLSHkl73SO-utuzM7dyN2g",
                                            "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                            "name": "NOT Transition Expression Operator",
                                            "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                            "type": "TOP"
                                          },
                                          "e89cwnP4Qd6MocAhzdOJgw": {
                                            "id": "e89cwnP4Qd6MocAhzdOJgw",
                                            "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                            "name": "Always returns Boolean true unconditionally.",
                                            "description": "Always returns true.",
                                            "type": "TOP"
                                          }
                                        },
                                        "jQxlhOe-RDilxY0sNIierQ": {
                                          "id": "jQxlhOe-RDilxY0sNIierQ",
                                          "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                          "name": "Holarchy Core Memory Operators",
                                          "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                          "type": "CM",
                                          "oaF3-dXwQkusjD3I2o9-8g": {
                                            "id": "oaF3-dXwQkusjD3I2o9-8g",
                                            "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                            "name": "OCD Array Length Equal to Value",
                                            "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                            "type": "TOP"
                                          },
                                          "2w7n6KxdR8mdIliePJesLQ": {
                                            "id": "2w7n6KxdR8mdIliePJesLQ",
                                            "vdid": "tljozSCr53fX-AmzURPyEg",
                                            "name": "OCD Compare Values",
                                            "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                            "type": "TOP"
                                          },
                                          "UeLs9PcASwuC7KR190eYhA": {
                                            "id": "UeLs9PcASwuC7KR190eYhA",
                                            "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                            "name": "OCD Boolean Flag Is Set",
                                            "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                            "type": "TOP"
                                          },
                                          "ggsavKiARsq7rjwn-lxdfA": {
                                            "id": "ggsavKiARsq7rjwn-lxdfA",
                                            "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                            "name": "OCD Namespace Is Greater Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "k7THIKKDQMKOac1Rxh9tEQ": {
                                            "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                            "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                            "name": "OCD Namespace Is Identical To Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "XxX_a1sQS1OlJbWAYfx6tQ": {
                                            "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                            "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                            "name": "OCD Namespace Is Less Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "kD1PcgqYQlm7fJatNG2ZsA": {
                                            "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                            "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                            "name": "OCD Namespace Is Truthy",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                            "type": "TOP"
                                          },
                                          "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                            "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                            "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                            "name": "OCD Read Namespace Indirect",
                                            "description": "Reads and returns the value of OCD namespace via path indirection.",
                                            "type": "ACT"
                                          },
                                          "5rFEDGLYRSiZCeChMnkCHQ": {
                                            "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                            "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                            "name": "OCD Boolean Flag Set",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                            "type": "ACT"
                                          },
                                          "_yxWfFLnTqqN-UxRdd7W5w": {
                                            "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                            "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                            "name": "OCD Boolean Flag Clear",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                            "type": "ACT"
                                          }
                                        }
                                      },
                                      "c2cq2OE9SiaLKahL3Mk0KA": {
                                        "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                        "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                        "name": "Holarchy Base Cell Model",
                                        "description": "A collection of low-level building blocks.",
                                        "type": "CM",
                                        "U5iIpgd8SHCk7pvaciVLTQ": {
                                          "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                          "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                          "name": "Holarchy Base Memory Mailbox Flag",
                                          "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                          "type": "CM",
                                          "z_mTe02hSWmaM1iRO1pBeA": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "type": "APM"
                                          },
                                          "iyvk_9vhRn2qvrjOes5v7Q": {
                                            "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                            "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                            "name": "Frame Latch: Write",
                                            "description": "Writes the value made observable by frame latch APM instance.",
                                            "type": "ACT"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "D9E7--YgRqWfqoQFz7Ckfg": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 32,
                              "edges": 56,
                              "artifacts": {
                                "cm": 8,
                                "apm": 2,
                                "top": 12,
                                "act": 6
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                  "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                  "name": "d2r2/React Client Display Adaptor",
                                  "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                  "process": {
                                    "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default APM process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Initialize",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_invariants",
                                        "p": {
                                          "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_inputs",
                                        "p": {
                                          "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialized",
                                        "p": {
                                          "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rehydrate",
                                        "p": {
                                          "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "hydrate"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "render",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "render"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rendering",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "ready",
                                        "p": {
                                          "description": "Waiting for next clock signal to re-render client application view.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "cell": {
                                                    "atStep": {
                                                      "path": "#.//.//.//.//",
                                                      "step": "boot1_start_kernel"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait_invariants"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_invariants",
                                          "v": "wait_inputs"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "and": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.ComponentRouter"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.DOMElement"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_inputs",
                                          "v": "initialized"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "rehydrate"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value.options.rehydrate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 1,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rehydrate",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "render",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rendering",
                                          "v": "ready"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "not": {
                                              "holarchy": {
                                                "cm": {
                                                  "operators": {
                                                    "ocd": {
                                                      "isNamespaceTruthy": {
                                                        "path": "#.private.renderPending"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "ready",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "opmi": {
                                                    "atStep": {
                                                      "path": "#.inputs.clock",
                                                      "step": "updated"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              "act": [
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                },
                                {
                                  "id": "ENIOOasYSdmJj_RXjA__hQ",
                                  "vdid": "CJYfMSZautkxLcK565ZDTg",
                                  "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                  "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "UX7JquBhSZO0QyEk7u9-sw": {
                                  "id": "UX7JquBhSZO0QyEk7u9-sw",
                                  "vdid": "ORpIKRkCxGDRpRZjC99eeQ",
                                  "name": "Holistic App Client Display Adapter",
                                  "description": "Manages the DOM display via @encapsule/d2r2 and React.",
                                  "type": "CM",
                                  "IxoJ83u0TXmG7PLUYBvsyg": {
                                    "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                    "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                    "name": "d2r2/React Client Display Adaptor",
                                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                    "type": "APM"
                                  },
                                  "ENIOOasYSdmJj_RXjA__hQ": {
                                    "id": "ENIOOasYSdmJj_RXjA__hQ",
                                    "vdid": "CJYfMSZautkxLcK565ZDTg",
                                    "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                    "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD.",
                                    "type": "ACT"
                                  },
                                  "RyMcv3MpTI-Co1EyVOIvlw": {
                                    "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                    "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                    "name": "Holarchy CML",
                                    "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                    "type": "CM",
                                    "MDVBKW89TvO9T62Ge7GmNg": {
                                      "id": "MDVBKW89TvO9T62Ge7GmNg",
                                      "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                      "name": "Holarchy Core",
                                      "description": "Holarchy core operations and actions for building derived CellModels.",
                                      "type": "CM",
                                      "orTbEFR_Q-u-qqEqP8OUBA": {
                                        "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                        "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                        "name": "Holarchy Core Cell",
                                        "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                        "type": "CM",
                                        "9tNY7o5GTUGH_xda2GhP-w": {
                                          "id": "9tNY7o5GTUGH_xda2GhP-w",
                                          "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                          "name": "Cell Process In Step Operator",
                                          "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                          "type": "TOP"
                                        },
                                        "DNAoE5L3R-mY6jLAF2S95A": {
                                          "id": "DNAoE5L3R-mY6jLAF2S95A",
                                          "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                          "name": "Holistic App Client Runtime Subprocess Action",
                                          "description": "Creates a cellular subprocess.",
                                          "type": "ACT"
                                        }
                                      },
                                      "RW8Y2O-kRNSv87yXT962wQ": {
                                        "id": "RW8Y2O-kRNSv87yXT962wQ",
                                        "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                        "name": "Holarchy Core Logic",
                                        "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                        "type": "CM",
                                        "YgABX95wR86GCYrYaDLISA": {
                                          "id": "YgABX95wR86GCYrYaDLISA",
                                          "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                          "name": "AND Transition Expression Operator",
                                          "description": "Returns Boolean true iff all suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "0JIva4IFSm6Xm7i38g8uUA": {
                                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                                          "vdid": "HyCocPERRAAEOSzTOspyaw",
                                          "name": "OR Transition Expression Operator",
                                          "description": "Returns Boolean true iff any suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "TLSHkl73SO-utuzM7dyN2g": {
                                          "id": "TLSHkl73SO-utuzM7dyN2g",
                                          "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                          "name": "NOT Transition Expression Operator",
                                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                          "type": "TOP"
                                        },
                                        "e89cwnP4Qd6MocAhzdOJgw": {
                                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                                          "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                          "name": "Always returns Boolean true unconditionally.",
                                          "description": "Always returns true.",
                                          "type": "TOP"
                                        }
                                      },
                                      "jQxlhOe-RDilxY0sNIierQ": {
                                        "id": "jQxlhOe-RDilxY0sNIierQ",
                                        "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                        "name": "Holarchy Core Memory Operators",
                                        "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                        "type": "CM",
                                        "oaF3-dXwQkusjD3I2o9-8g": {
                                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                          "name": "OCD Array Length Equal to Value",
                                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                          "type": "TOP"
                                        },
                                        "2w7n6KxdR8mdIliePJesLQ": {
                                          "id": "2w7n6KxdR8mdIliePJesLQ",
                                          "vdid": "tljozSCr53fX-AmzURPyEg",
                                          "name": "OCD Compare Values",
                                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                          "type": "TOP"
                                        },
                                        "UeLs9PcASwuC7KR190eYhA": {
                                          "id": "UeLs9PcASwuC7KR190eYhA",
                                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                          "name": "OCD Boolean Flag Is Set",
                                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                          "type": "TOP"
                                        },
                                        "ggsavKiARsq7rjwn-lxdfA": {
                                          "id": "ggsavKiARsq7rjwn-lxdfA",
                                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                          "name": "OCD Namespace Is Greater Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "k7THIKKDQMKOac1Rxh9tEQ": {
                                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                          "name": "OCD Namespace Is Identical To Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "XxX_a1sQS1OlJbWAYfx6tQ": {
                                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                          "name": "OCD Namespace Is Less Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "kD1PcgqYQlm7fJatNG2ZsA": {
                                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                          "name": "OCD Namespace Is Truthy",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                          "type": "TOP"
                                        },
                                        "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                          "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                          "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                          "name": "OCD Read Namespace Indirect",
                                          "description": "Reads and returns the value of OCD namespace via path indirection.",
                                          "type": "ACT"
                                        },
                                        "5rFEDGLYRSiZCeChMnkCHQ": {
                                          "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                          "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                          "name": "OCD Boolean Flag Set",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                          "type": "ACT"
                                        },
                                        "_yxWfFLnTqqN-UxRdd7W5w": {
                                          "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                          "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                          "name": "OCD Boolean Flag Clear",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                          "type": "ACT"
                                        }
                                      }
                                    },
                                    "c2cq2OE9SiaLKahL3Mk0KA": {
                                      "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                      "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                      "name": "Holarchy Base Cell Model",
                                      "description": "A collection of low-level building blocks.",
                                      "type": "CM",
                                      "U5iIpgd8SHCk7pvaciVLTQ": {
                                        "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                        "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                        "name": "Holarchy Base Memory Mailbox Flag",
                                        "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                        "type": "CM",
                                        "z_mTe02hSWmaM1iRO1pBeA": {
                                          "id": "z_mTe02hSWmaM1iRO1pBeA",
                                          "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                          "name": "Abstract Frame Latch",
                                          "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                          "type": "APM"
                                        },
                                        "iyvk_9vhRn2qvrjOes5v7Q": {
                                          "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                          "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                          "name": "Frame Latch: Write",
                                          "description": "Writes the value made observable by frame latch APM instance.",
                                          "type": "ACT"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "fzuITg9BQbyV7jNv39Gv6w": {
                "harnessRequest": {
                  "id": "fzuITg9BQbyV7jNv39Gv6w",
                  "name": "d2r2/React Client Output Processor OPC #1",
                  "description": "Attempt to apply the d2r2/React Client Display Adaptor APM inside of an OPC instance.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "fzuITg9BQbyV7jNv39Gv6w",
                            "name": "d2r2/React Client Display Adaptor OPC #1",
                            "description": "Attempt to apply the d2r2/React Client Display Adaptor APM inside of an OPC instance.",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "d2r2ReactClientOutputProcessor": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "IxoJ83u0TXmG7PLUYBvsyg"
                                }
                              }
                            },
                            "abstractProcessModelSets": [
                              [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                  "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                  "name": "d2r2/React Client Display Adaptor",
                                  "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                  "process": {
                                    "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default APM process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Initialize",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_invariants",
                                        "p": {
                                          "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_inputs",
                                        "p": {
                                          "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialized",
                                        "p": {
                                          "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rehydrate",
                                        "p": {
                                          "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "hydrate"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "render",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "render"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rendering",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "ready",
                                        "p": {
                                          "description": "Waiting for next clock signal to re-render client application view.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "cell": {
                                                    "atStep": {
                                                      "path": "#.//.//.//.//",
                                                      "step": "boot1_start_kernel"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait_invariants"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_invariants",
                                          "v": "wait_inputs"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "and": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.ComponentRouter"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.DOMElement"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_inputs",
                                          "v": "initialized"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "rehydrate"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value.options.rehydrate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 1,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rehydrate",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "render",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rendering",
                                          "v": "ready"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "not": {
                                              "holarchy": {
                                                "cm": {
                                                  "operators": {
                                                    "ocd": {
                                                      "isNamespaceTruthy": {
                                                        "path": "#.private.renderPending"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "ready",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "opmi": {
                                                    "atStep": {
                                                      "path": "#.inputs.clock",
                                                      "step": "updated"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "transitionOperatorSets": [
                              [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ]
                            ],
                            "controllerActionSets": [
                              [
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                },
                                {
                                  "id": "ENIOOasYSdmJj_RXjA__hQ",
                                  "vdid": "CJYfMSZautkxLcK565ZDTg",
                                  "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                  "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD."
                                }
                              ]
                            ]
                          }
                        },
                        "actionRequest": []
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "fzuITg9BQbyV7jNv39Gv6w": {
                          "opcToJSON": {
                            "id": "fzuITg9BQbyV7jNv39Gv6w",
                            "name": "d2r2/React Client Display Adaptor OPC #1",
                            "description": "Attempt to apply the d2r2/React Client Display Adaptor APM inside of an OPC instance.",
                            "options": {
                              "evaluate": {
                                "maxFrames": 16,
                                "firstEvaluation": "constructor"
                              }
                            },
                            "apmMap": {
                              "z_mTe02hSWmaM1iRO1pBeA": {
                                "id": "z_mTe02hSWmaM1iRO1pBeA",
                                "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                "name": "Abstract Frame Latch",
                                "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                "process": {
                                  "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "actions": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "updated",
                                      "p": {
                                        "description": "The value managed by the frame latch has been written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "actions": {
                                                    "ocd": {
                                                      "clearBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "waiting",
                                      "p": {
                                        "description": "Frame latch value has not changed since last signalled update.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "updated"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "updated",
                                        "v": "waiting"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "waiting",
                                        "v": "updated"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "cm": {
                                              "operators": {
                                                "ocd": {
                                                  "isBooleanFlagSet": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "IxoJ83u0TXmG7PLUYBvsyg": {
                                "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                "name": "d2r2/React Client Display Adaptor",
                                "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                "process": {
                                  "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                  "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default APM process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "initialize",
                                      "p": {
                                        "description": "Initialize",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "wait_invariants",
                                      "p": {
                                        "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "wait_inputs",
                                      "p": {
                                        "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "initialized",
                                      "p": {
                                        "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "rehydrate",
                                      "p": {
                                        "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "actions": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.private.renderPending"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "holistic": {
                                                "app": {
                                                  "client": {
                                                    "cm": {
                                                      "actions": {
                                                        "d2r2ReactClientDisplayAdaptor": {
                                                          "operation": "hydrate"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "render",
                                      "p": {
                                        "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                        "actions": {
                                          "enter": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "actions": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.private.renderPending"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "holistic": {
                                                "app": {
                                                  "client": {
                                                    "cm": {
                                                      "actions": {
                                                        "d2r2ReactClientDisplayAdaptor": {
                                                          "operation": "render"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "rendering",
                                      "p": {
                                        "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    },
                                    {
                                      "u": "ready",
                                      "p": {
                                        "description": "Waiting for next clock signal to re-render client application view.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "initialize"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "cm": {
                                              "operators": {
                                                "cell": {
                                                  "atStep": {
                                                    "path": "#.//.//.//.//",
                                                    "step": "boot1_start_kernel"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "initialize",
                                        "v": "wait_invariants"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "wait_invariants",
                                        "v": "wait_inputs"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "and": [
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "operators": {
                                                    "ocd": {
                                                      "isNamespaceTruthy": {
                                                        "path": "#.inputs.ComponentRouter"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "holarchy": {
                                                "cm": {
                                                  "operators": {
                                                    "ocd": {
                                                      "isNamespaceTruthy": {
                                                        "path": "#.inputs.DOMElement"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "wait_inputs",
                                        "v": "initialized"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "cm": {
                                              "operators": {
                                                "ocd": {
                                                  "isNamespaceTruthy": {
                                                    "path": "#.inputs.clock.value"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "initialized",
                                        "v": "rehydrate"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "cm": {
                                              "operators": {
                                                "ocd": {
                                                  "isNamespaceTruthy": {
                                                    "path": "#.inputs.clock.value.options.rehydrate"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "initialized",
                                        "v": "render"
                                      },
                                      "p": {
                                        "priority": 1,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "rehydrate",
                                        "v": "rendering"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "render",
                                        "v": "rendering"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "rendering",
                                        "v": "ready"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "not": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.private.renderPending"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "ready",
                                        "v": "render"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "cm": {
                                              "operators": {
                                                "opmi": {
                                                  "atStep": {
                                                    "path": "#.inputs.clock",
                                                    "step": "updated"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.d2r2ReactClientOutputProcessor",
                                "opmiRef": {
                                  "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                  "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                  "name": "d2r2/React Client Display Adaptor",
                                  "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                  "process": {
                                    "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default APM process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Initialize",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_invariants",
                                        "p": {
                                          "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_inputs",
                                        "p": {
                                          "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialized",
                                        "p": {
                                          "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rehydrate",
                                        "p": {
                                          "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "hydrate"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "render",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "render"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rendering",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "ready",
                                        "p": {
                                          "description": "Waiting for next clock signal to re-render client application view.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "cell": {
                                                    "atStep": {
                                                      "path": "#.//.//.//.//",
                                                      "step": "boot1_start_kernel"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait_invariants"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_invariants",
                                          "v": "wait_inputs"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "and": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.ComponentRouter"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.DOMElement"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_inputs",
                                          "v": "initialized"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "rehydrate"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value.options.rehydrate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 1,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rehydrate",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "render",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rendering",
                                          "v": "ready"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "not": {
                                              "holarchy": {
                                                "cm": {
                                                  "operators": {
                                                    "ocd": {
                                                      "isNamespaceTruthy": {
                                                        "path": "#.private.renderPending"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "ready",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "opmi": {
                                                    "atStep": {
                                                      "path": "#.inputs.clock",
                                                      "step": "updated"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "specPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                "opmiRef": {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "d2r2ReactClientOutputProcessor": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "IxoJ83u0TXmG7PLUYBvsyg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [fzuITg9BQbyV7jNv39Gv6w::d2r2/React Client Display Adaptor OPC #1] Observable Controller Data Store",
                              "____description": "OPC [fzuITg9BQbyV7jNv39Gv6w::d2r2/React Client Display Adaptor OPC #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "d2r2ReactClientOutputProcessor": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "apm": "IxoJ83u0TXmG7PLUYBvsyg"
                                },
                                "____label": "d2r2/React Client Display Adaptor Memory",
                                "____description": "Shared memory definition for the d2r2/React Client Display Adaptor OPM.",
                                "inputs": {
                                  "____label": "Adaptor Inputs",
                                  "____types": "jsObject",
                                  "____defaultValue": {},
                                  "ComponentRouter": {
                                    "____label": "d2r2 <ComponentRouter/>",
                                    "____description": "A reference to previously-constructed <ComponentRouter/> instance (a React component that implements @encapsule/d2r2 dynamic layout protocol).",
                                    "____accept": [
                                      "jsNull",
                                      "jsFunction"
                                    ],
                                    "____defaultValue": null
                                  },
                                  "DOMElement": {
                                    "____label": "d2r2 Target DOM Element",
                                    "____description": "A reference to the DOM element to be be managed by the d2r2/React Client Display Adaptor (obtained with document.getElementById).",
                                    "____opaque": true,
                                    "____defaultValue": null
                                  },
                                  "clock": {
                                    "____label": "Abstract Frame Latch",
                                    "____description": "A frame latch used to trigger dynamic rerendering of the client view via d2r2 <ComponentRouter/> and Facebook React RTL's.",
                                    "____types": "jsObject",
                                    "____appdsl": {
                                      "apm": "z_mTe02hSWmaM1iRO1pBeA"
                                    },
                                    "value": {
                                      "____label": "Render Command",
                                      "____types": [
                                        "jsNull",
                                        "jsObject"
                                      ],
                                      "____defaultValue": null,
                                      "options": {
                                        "____types": "jsObject",
                                        "____defaultValue": {},
                                        "rehydrate": {
                                          "____types": "jsBoolean",
                                          "____defaultValue": false
                                        }
                                      },
                                      "pathRenderContext": {
                                        "____label": "Render Context OCD Path",
                                        "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.",
                                        "____accept": "jsString"
                                      },
                                      "pathRenderData": {
                                        "____label": "Render Data OCD Path",
                                        "____description": "Fully-qualified OCD path of the descriptor object to be deep copied and passed to <ComponentRouter/> via this.props.renderData.",
                                        "____accept": "jsString"
                                      }
                                    },
                                    "____defaultValue": {},
                                    "clock": {
                                      "____accept": "jsBoolean",
                                      "____defaultValue": false
                                    },
                                    "__apmiStep": {
                                      "____accept": "jsString",
                                      "____defaultValue": "uninitialized"
                                    }
                                  }
                                },
                                "private": {
                                  "____types": "jsObject",
                                  "____defaultValue": {},
                                  "renderCount": {
                                    "____accept": "jsNumber",
                                    "____defaultValue": -1
                                  },
                                  "renderPending": {
                                    "____accept": "jsBoolean",
                                    "____defaultValue": false
                                  }
                                },
                                "__apmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "d2r2ReactClientOutputProcessor": {
                                "inputs": {
                                  "ComponentRouter": null,
                                  "DOMElement": null,
                                  "clock": {
                                    "value": null,
                                    "clock": false,
                                    "__apmiStep": "waiting"
                                  }
                                },
                                "private": {
                                  "renderCount": -1,
                                  "renderPending": false
                                },
                                "__apmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "CMvz9x30nfjuykt8A93fQA",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                              },
                              "supportedFilters": [
                                "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "transitionDispatcherFilterMap": {
                              "YgABX95wR86GCYrYaDLISA": {
                                "filterDescriptor": {
                                  "operationID": "YgABX95wR86GCYrYaDLISA",
                                  "operationName": "AND Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff all suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "AND Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "and": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Th67oiutPj5XPCPBQs2sNg",
                                  "inputTypeVDID": "MQFe-Q8rBS3yhTg_XEijfQ",
                                  "outputTypeVIID": "4qvesBGXikOFKTURfESw5A",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "9pp-RLYcWZMBzcScqI9ncg"
                                }
                              },
                              "e89cwnP4Qd6MocAhzdOJgw": {
                                "filterDescriptor": {
                                  "operationID": "e89cwnP4Qd6MocAhzdOJgw",
                                  "operationName": "Always returns Boolean true unconditionally.",
                                  "operationDescription": "Always returns true.",
                                  "inputFilterSpec": {
                                    "____label": "Always returns Boolean true unconditionally. Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "always": {
                                        "____accept": "jsBoolean",
                                        "____inValueSet": [
                                          true
                                        ]
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "mlUI4xt2DYMMjmvmPlUqzQ",
                                  "inputTypeVDID": "0EB7_Y3i7dHCIqSTVQf8bQ",
                                  "outputTypeVIID": "gGOXfWmLkCUR1ey8s8jjGA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "7hv8ROZTdZP8DZ-c1OtJcg"
                                }
                              },
                              "9tNY7o5GTUGH_xda2GhP-w": {
                                "filterDescriptor": {
                                  "operationID": "9tNY7o5GTUGH_xda2GhP-w",
                                  "operationName": "Cell Process In Step Operator",
                                  "operationDescription": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                  "inputFilterSpec": {
                                    "____label": "Cell Process In Step Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "atStep": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "step": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "knid7eOPhDEUkIr1WhyHiw",
                                  "inputTypeVDID": "q9TocAv3KDWF1D8TwFOj0A",
                                  "outputTypeVIID": "VWoiQV-oR4XaKTrRp-c6vA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "wlRcRFbU4pO6f_ictPVicg"
                                }
                              },
                              "TLSHkl73SO-utuzM7dyN2g": {
                                "filterDescriptor": {
                                  "operationID": "TLSHkl73SO-utuzM7dyN2g",
                                  "operationName": "NOT Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                  "inputFilterSpec": {
                                    "____label": "NOT Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "not": {
                                        "____accept": "jsObject"
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "VqL0404urku_v3ZjcOkZTg",
                                  "inputTypeVDID": "KhdBS4FFA46JYJ246QpDXQ",
                                  "outputTypeVIID": "V-JP28o44DYdLwju7U90ag",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "MXgNRHS4xJPIEuycBGZEcg"
                                }
                              },
                              "oaF3-dXwQkusjD3I2o9-8g": {
                                "filterDescriptor": {
                                  "operationID": "oaF3-dXwQkusjD3I2o9-8g",
                                  "operationName": "OCD Array Length Equal to Value",
                                  "operationDescription": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                  "inputFilterSpec": {
                                    "____label": "OCD Array Length Equal to Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "array": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "length": {
                                                  "____types": "jsObject",
                                                  "equalToValue": {
                                                    "____accept": [
                                                      "jsNumber",
                                                      "jsString"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "1w1jkkL88zPbGh1huUa66A",
                                  "inputTypeVDID": "mlQwgyCDl-ST91MGpgC1VQ",
                                  "outputTypeVIID": "ll5aBQHmBVx07i4pBJMThw",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "yhC0RNrN1ZMX5F-ckUIncg"
                                }
                              },
                              "UeLs9PcASwuC7KR190eYhA": {
                                "filterDescriptor": {
                                  "operationID": "UeLs9PcASwuC7KR190eYhA",
                                  "operationName": "OCD Boolean Flag Is Set",
                                  "operationDescription": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Is Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isBooleanFlagSet": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "l0QuhcthqVCst39xt0A_SA",
                                  "inputTypeVDID": "XaY0xWS0bd69voTSU_w3aA",
                                  "outputTypeVIID": "IV0lvKVpYiaD4deX05nL1g",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "6eZxRIQnF5PpgaiccabWcg"
                                }
                              },
                              "2w7n6KxdR8mdIliePJesLQ": {
                                "filterDescriptor": {
                                  "operationID": "2w7n6KxdR8mdIliePJesLQ",
                                  "operationName": "OCD Compare Values",
                                  "operationDescription": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Compare Values Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "compare": {
                                                "____types": "jsObject",
                                                "values": {
                                                  "____types": "jsObject",
                                                  "a": {
                                                    "____label": "Operand A",
                                                    "____description": "Operand A for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "b": {
                                                    "____label": "Operand B",
                                                    "____description": "Operand B for identical operator comparison. Specifiy either value (direct) XOR path (indirect).",
                                                    "____types": "jsObject",
                                                    "value": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsNull",
                                                        "jsString",
                                                        "jsNumber",
                                                        "jsBoolean"
                                                      ]
                                                    },
                                                    "path": {
                                                      "____accept": [
                                                        "jsUndefined",
                                                        "jsString"
                                                      ]
                                                    }
                                                  },
                                                  "operator": {
                                                    "____label": "Comparison Operator",
                                                    "____description": "A string enum indicating the comparison operator to use.",
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "===",
                                                      "==",
                                                      "<",
                                                      "<=",
                                                      ">",
                                                      ">="
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "Vd7i-lH1mj84kJrcpYoR9g",
                                  "inputTypeVDID": "uXfDAJlX200_coTaw1pLtg",
                                  "outputTypeVIID": "kxjuRwQKX01DJDkjruKvXg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l5iBRNf6zpMr3-CcKjAWcg"
                                }
                              },
                              "ggsavKiARsq7rjwn-lxdfA": {
                                "filterDescriptor": {
                                  "operationID": "ggsavKiARsq7rjwn-lxdfA",
                                  "operationName": "OCD Namespace Is Greater Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Greater Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceGreaterThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "CF-H4WojwJ7B1YyWvKlnMQ",
                                  "inputTypeVDID": "LRU9vcBpToNeHesuiIxokw",
                                  "outputTypeVIID": "vevJRLqsD_7D5r52vqsYNg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "soEGROP6ipOrHwqcgR0Icg"
                                }
                              },
                              "k7THIKKDQMKOac1Rxh9tEQ": {
                                "filterDescriptor": {
                                  "operationID": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "operationName": "OCD Namespace Is Identical To Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Identical To Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceIdenticalToValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "2lapAiv6Y2wX3rSyYd_aXA",
                                  "inputTypeVDID": "9RU9alRpThHQHeu-ZIxoLg",
                                  "outputTypeVIID": "a4e-UB9BqYvz755bPVZ4AA",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "aCc3RHCjwpMQ7XKc0o4mcg"
                                }
                              },
                              "XxX_a1sQS1OlJbWAYfx6tQ": {
                                "filterDescriptor": {
                                  "operationID": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "operationName": "OCD Namespace Is Less Than Value",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Less Than Value Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceLessThanValue": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____accept": [
                                                    "jsString",
                                                    "jsNumber"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SdjtRCNawPzfg3fuyxpeog",
                                  "inputTypeVDID": "ZuD2TKtYUqU87dkAt67RVA",
                                  "outputTypeVIID": "C3a0V2HEKW7fH5xudFSe2Q",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "l9RzRDh_y5NJEa-c2o72cg"
                                }
                              },
                              "kD1PcgqYQlm7fJatNG2ZsA": {
                                "filterDescriptor": {
                                  "operationID": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "operationName": "OCD Namespace Is Truthy",
                                  "operationDescription": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Namespace Is Truthy Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "operators": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "isNamespaceTruthy": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "SPYSm6CWX2bR_YovYBc5vA",
                                  "inputTypeVDID": "IqY0aMK0bZrZvoSd7_w3IQ",
                                  "outputTypeVIID": "XJAeGf11HNVoWr_Aw6IxpQ",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "vqWEROJwL5P3HeKc3FBvcg"
                                }
                              },
                              "0JIva4IFSm6Xm7i38g8uUA": {
                                "filterDescriptor": {
                                  "operationID": "0JIva4IFSm6Xm7i38g8uUA",
                                  "operationName": "OR Transition Expression Operator",
                                  "operationDescription": "Returns Boolean true iff any suboperations return true.",
                                  "inputFilterSpec": {
                                    "____label": "OR Transition Expression Operator Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "transitionDispatcher": {
                                        "____label": "OPC Transition Dispatcher",
                                        "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                        "____accept": "jsObject"
                                      }
                                    },
                                    "operatorRequest": {
                                      "____types": "jsObject",
                                      "or": {
                                        "____types": "jsArray",
                                        "operandOperatorVariant": {
                                          "____accept": "jsObject"
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsBoolean"
                                  },
                                  "inputTypeVIID": "BIKphTRxk84K8Rl5zYJ-FQ",
                                  "inputTypeVDID": "0Xe392MJsGr0KO6YF3c80A",
                                  "outputTypeVIID": "703oxzDhgbWqvMb1deWsLg",
                                  "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                                  "operationVDID": "4ImARIUqM5NmuBqcOBs-cg"
                                }
                              }
                            },
                            "actionDispatcher": {
                              "filterDescriptor": {
                                "operationID": "wrunGlOdZ3wYaSqSMDIMWw",
                                "operationName": "Discriminator Filter",
                                "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                "inputTypeVIID": "PffAteWr2hEEZr-vV0AvBg",
                                "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "outputTypeVIID": "XA9ZhoogX110A0sxkNpE8Q",
                                "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                "operationVDID": "e4r0E4A7NVfITI7t3nAUtA"
                              },
                              "supportedFilters": [
                                "[5rFEDGLYRSiZCeChMnkCHQ::OCD Boolean Flag Set]",
                                "[DNAoE5L3R-mY6jLAF2S95A::Holistic App Client Runtime Subprocess Action]",
                                "[ENIOOasYSdmJj_RXjA__hQ::d2r2/React Client Display Adaptor: Rydrate/Render]",
                                "[KX0V_aQ3RzG01tzBS24MGw::OPC Intrinsic NOOP Action]",
                                "[S1GqYjTtSQazSxkIL9vtpA::OPC Intrinsic Status Action]",
                                "[Ve_kEFkGSMSgOqUWu9Yo_w::OCD Read Namespace Indirect]",
                                "[_yxWfFLnTqqN-UxRdd7W5w::OCD Boolean Flag Clear]",
                                "[iyvk_9vhRn2qvrjOes5v7Q::Frame Latch: Write]"
                              ],
                              "options": {
                                "action": "getFilter"
                              }
                            },
                            "actionDispatcherFilterMap": {
                              "iyvk_9vhRn2qvrjOes5v7Q": {
                                "filterDescriptor": {
                                  "operationID": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "operationName": "Frame Latch: Write",
                                  "operationDescription": "Writes the value made observable by frame latch APM instance.",
                                  "inputFilterSpec": {
                                    "____label": "Frame Latch: Write Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "frameLatch": {
                                              "____types": "jsObject",
                                              "write": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____label": "Frame Latch Bound Namespace Path",
                                                  "____accept": "jsString"
                                                },
                                                "value": {
                                                  "____label": "Write Value",
                                                  "____opaque": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____label": "Write Frame Latch Result",
                                    "____description": "This is generically a reference to the value written to the frame latch indicated by 'path'.",
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "dOV6tM17rLvrsqbIM4LzCg",
                                  "inputTypeVDID": "ReMEnCXFT3yFkJ3JX6oz3g",
                                  "outputTypeVIID": "LPeeiMV42LNeAhthe2myDQ",
                                  "outputTypeVDID": "8-d-OpyoAkX4G5bt5_5T_Q",
                                  "operationVDID": "E7NA-ISmB6dh6uB3b1wMSw"
                                }
                              },
                              "DNAoE5L3R-mY6jLAF2S95A": {
                                "filterDescriptor": {
                                  "operationID": "DNAoE5L3R-mY6jLAF2S95A",
                                  "operationName": "Holistic App Client Runtime Subprocess Action",
                                  "operationDescription": "Creates a cellular subprocess.",
                                  "inputFilterSpec": {
                                    "____label": "Holistic App Client Runtime Subprocess Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "cell": {
                                              "____types": "jsObject",
                                              "process": {
                                                "____types": "jsObject",
                                                "create": {
                                                  "____types": "jsObject",
                                                  "apmBindingPath": {
                                                    "____accept": "jsString"
                                                  },
                                                  "ocdInitData": {
                                                    "____accept": "jsObject",
                                                    "____defaultValue": {}
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____types": "jsObject",
                                    "apmBindingPath": {
                                      "____accept": "jsString"
                                    },
                                    "processID": {
                                      "____accept": "jsString"
                                    }
                                  },
                                  "inputTypeVIID": "0cct1u09r0aOFKgpIMxVQg",
                                  "inputTypeVDID": "wignRGwP30We8f90DNa5Nw",
                                  "outputTypeVIID": "T_Gb_5QUX2zxjS-xY9wvCQ",
                                  "outputTypeVDID": "x1YL5_hRGHfO54xljPnY3g",
                                  "operationVDID": "1HnEbWLPE1ARGRnlL6LLYw"
                                }
                              },
                              "_yxWfFLnTqqN-UxRdd7W5w": {
                                "filterDescriptor": {
                                  "operationID": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "operationName": "OCD Boolean Flag Clear",
                                  "operationDescription": "Set the Boolean-type OCD namespace specified by path to value false.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Clear Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "clearBooleanFlag": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "Q26xScNwSEHmeE4xjO_vtg",
                                  "inputTypeVDID": "9JJ6pBweTCwI2oO98eA5jA",
                                  "outputTypeVIID": "_Jrf_S2nEWwsSx89q6ealg",
                                  "outputTypeVDID": "xHanI1kT9ivLTVhizlh1ng",
                                  "operationVDID": "22s0kmR4PDHNH1MwaETpSA"
                                }
                              },
                              "5rFEDGLYRSiZCeChMnkCHQ": {
                                "filterDescriptor": {
                                  "operationID": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "operationName": "OCD Boolean Flag Set",
                                  "operationDescription": "Set the Boolean-type OCD namespace specified by path to value true.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Boolean Flag Set Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "setBooleanFlag": {
                                                "____types": "jsObject",
                                                "path": {
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "YJSR1JZOriuhfXfKbnMV4Q",
                                  "inputTypeVDID": "0SvJjLbCiM4zgfkcsCtG9w",
                                  "outputTypeVIID": "kyxCxyo_W507HuHlFVvwIQ",
                                  "outputTypeVDID": "xHanI1kT9ivLTVhizlh1ng",
                                  "operationVDID": "bCv1ksN_4DF7HKQweU68SA"
                                }
                              },
                              "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                "filterDescriptor": {
                                  "operationID": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "operationName": "OCD Read Namespace Indirect",
                                  "operationDescription": "Reads and returns the value of OCD namespace via path indirection.",
                                  "inputFilterSpec": {
                                    "____label": "OCD Read Namespace Indirect Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "cm": {
                                          "____types": "jsObject",
                                          "actions": {
                                            "____types": "jsObject",
                                            "ocd": {
                                              "____types": "jsObject",
                                              "readNamespaceIndirect": {
                                                "____types": "jsObject",
                                                "path2": {
                                                  "____label": "Target Path Namespace Path",
                                                  "____description": "The OCD path of the string namespace containing the OCD path of the target namespace to read.",
                                                  "____accept": "jsString"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "r0nWow8E0BIohA7UDujmMw",
                                  "inputTypeVDID": "IOgWXFaAcQ5ZA6pPH8_2xg",
                                  "outputTypeVIID": "QKKFgPFZL00DATFNfFLfiQ",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "0IU7E_qFb1e52MDt_6IqtA"
                                }
                              },
                              "ENIOOasYSdmJj_RXjA__hQ": {
                                "filterDescriptor": {
                                  "operationID": "ENIOOasYSdmJj_RXjA__hQ",
                                  "operationName": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                  "operationDescription": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD.",
                                  "inputFilterSpec": {
                                    "____label": "d2r2/React Client Display Adaptor: Rydrate/Render Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holistic": {
                                        "____types": "jsObject",
                                        "app": {
                                          "____types": "jsObject",
                                          "client": {
                                            "____types": "jsObject",
                                            "cm": {
                                              "____types": "jsObject",
                                              "actions": {
                                                "____types": "jsObject",
                                                "d2r2ReactClientDisplayAdaptor": {
                                                  "____types": "jsObject",
                                                  "operation": {
                                                    "____accept": "jsString",
                                                    "____inValueSet": [
                                                      "hydrate",
                                                      "render"
                                                    ],
                                                    "____defaultValue": "render"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____accept": "jsUndefined"
                                  },
                                  "inputTypeVIID": "FOgSosceAcgixkQPtRIdcw",
                                  "inputTypeVDID": "01WNB74t-WVWtSUeEd6WUQ",
                                  "outputTypeVIID": "b4sB-x0S_Ht89mR-mn0gRw",
                                  "outputTypeVDID": "xHanI1kT9ivLTVhizlh1ng",
                                  "operationVDID": "F74tkr5DDDFSVKwwOG8DSA"
                                }
                              },
                              "KX0V_aQ3RzG01tzBS24MGw": {
                                "filterDescriptor": {
                                  "operationID": "KX0V_aQ3RzG01tzBS24MGw",
                                  "operationName": "OPC Intrinsic NOOP Action",
                                  "operationDescription": "OPC-intrinsic performs no operation (noop). When invoked via OPC.act, the effect is to perform no read/write operations on OPC-instanced shared memory. And, then perform an evaluation.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic NOOP Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "noop": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "txJFSr26_WFausq9BG5NZg",
                                  "inputTypeVDID": "BiObVoNbI4_uMMaTBVkFXQ",
                                  "outputTypeVIID": "kuQ7tcKRU28cS2Qj0GX17A",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "x0rQE0TkE1dfHMftLnWXtA"
                                }
                              },
                              "S1GqYjTtSQazSxkIL9vtpA": {
                                "filterDescriptor": {
                                  "operationID": "S1GqYjTtSQazSxkIL9vtpA",
                                  "operationName": "OPC Intrinsic Status Action",
                                  "operationDescription": "OPC-intrinsic performs a retrieval of transitive OPC instance status.",
                                  "inputFilterSpec": {
                                    "____label": "OPC Intrinsic Status Action Request",
                                    "____types": "jsObject",
                                    "context": {
                                      "____label": "OPC Context Descriptor",
                                      "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                      "____types": "jsObject",
                                      "apmBindingPath": {
                                        "____label": "APM Binding Path",
                                        "____description": "Fully-qualified dot-delimited path to the current APM instance's associated data in the OCD instance.",
                                        "____accept": "jsString"
                                      },
                                      "ocdi": {
                                        "____label": "OCD Store Instance",
                                        "____description": "A reference to the OCD store instance managed by OPC.",
                                        "____accept": "jsObject"
                                      },
                                      "act": {
                                        "____label": "OPC.act Method",
                                        "____description": "A reference to ObservableProcessController.act method.",
                                        "____accept": "jsFunction"
                                      }
                                    },
                                    "actionRequest": {
                                      "____types": "jsObject",
                                      "holarchy": {
                                        "____types": "jsObject",
                                        "opc": {
                                          "____types": "jsObject",
                                          "status": {
                                            "____accept": "jsBoolean",
                                            "____inValueSet": [
                                              true
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "outputFilterSpec": {
                                    "____opaque": true
                                  },
                                  "inputTypeVIID": "vncGN9bjl9Mmy3r-EUnmKg",
                                  "inputTypeVDID": "es2e3G-BC0wtoR59QSPlgg",
                                  "outputTypeVIID": "A0mnQJBJD4gdX6rrM6Txtw",
                                  "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                  "operationVDID": "LolDE0qGUVe0PlPtvVfktA"
                                }
                              }
                            },
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "bindings": 6,
                                    "frames": 3,
                                    "errors": 3,
                                    "transitions": 2
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 2,
                                        "transitions": 1,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [
                                          "6KIVQm2l_Kkuh0qvYBQ-nw"
                                        ],
                                        "errors": [
                                          "Qf5B_mFgYWCyRbJFtNW01Q"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "Qf5B_mFgYWCyRbJFtNW01Q": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.d2r2ReactClientOutputProcessor",
                                            "specPath": "~.d2r2ReactClientOutputProcessor"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                            "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                            "name": "d2r2/React Client Display Adaptor",
                                            "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                            "process": {
                                              "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                              "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default APM process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "initialize",
                                                  "p": {
                                                    "description": "Initialize",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "wait_invariants",
                                                  "p": {
                                                    "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "wait_inputs",
                                                  "p": {
                                                    "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "initialized",
                                                  "p": {
                                                    "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "rehydrate",
                                                  "p": {
                                                    "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.private.renderPending"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holistic": {
                                                            "app": {
                                                              "client": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "d2r2ReactClientDisplayAdaptor": {
                                                                      "operation": "hydrate"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "render",
                                                  "p": {
                                                    "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.private.renderPending"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holistic": {
                                                            "app": {
                                                              "client": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "d2r2ReactClientDisplayAdaptor": {
                                                                      "operation": "render"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "rendering",
                                                  "p": {
                                                    "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "ready",
                                                  "p": {
                                                    "description": "Waiting for next clock signal to re-render client application view.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "initialize"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "cell": {
                                                              "atStep": {
                                                                "path": "#.//.//.//.//",
                                                                "step": "boot1_start_kernel"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialize",
                                                    "v": "wait_invariants"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "wait_invariants",
                                                    "v": "wait_inputs"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "and": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isNamespaceTruthy": {
                                                                    "path": "#.inputs.ComponentRouter"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isNamespaceTruthy": {
                                                                    "path": "#.inputs.DOMElement"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "wait_inputs",
                                                    "v": "initialized"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isNamespaceTruthy": {
                                                                "path": "#.inputs.clock.value"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialized",
                                                    "v": "rehydrate"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isNamespaceTruthy": {
                                                                "path": "#.inputs.clock.value.options.rehydrate"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialized",
                                                    "v": "render"
                                                  },
                                                  "p": {
                                                    "priority": 1,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "rehydrate",
                                                    "v": "rendering"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "render",
                                                    "v": "rendering"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "rendering",
                                                    "v": "ready"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "not": {
                                                        "holarchy": {
                                                          "cm": {
                                                            "operators": {
                                                              "ocd": {
                                                                "isNamespaceTruthy": {
                                                                  "path": "#.private.renderPending"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "ready",
                                                    "v": "render"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "opmi": {
                                                              "atStep": {
                                                                "path": "#.inputs.clock",
                                                                "step": "updated"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.d2r2ReactClientOutputProcessor",
                                                    "ocdi": {
                                                      "d2r2ReactClientOutputProcessor": {
                                                        "inputs": {
                                                          "ComponentRouter": null,
                                                          "DOMElement": null,
                                                          "clock": {
                                                            "value": null,
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "private": {
                                                          "renderCount": -1,
                                                          "renderPending": false
                                                        },
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "holarchy": {
                                                      "cm": {
                                                        "operators": {
                                                          "cell": {
                                                            "atStep": {
                                                              "path": "#.//.//.//.//",
                                                              "step": "boot1_start_kernel"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator request rejected by MDR phase 2 router. The selected TransitionOperator filter [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator] rejected the request with error: Filter [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator] failed while performing main operation. Filter [RNUkdw8VT8WLz5H_i-SwYg::Data Path Resolve Filter] failed while performing main operation. Invalid dataPath '#.//.//.//.//' references namespace at or above the anonymous '~' namespace."
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      },
                                      "6KIVQm2l_Kkuh0qvYBQ-nw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                            "specPath": "~.d2r2ReactClientOutputProcessor.inputs.clock"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "process": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "Frame latch value has not changed since last signalled update.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "transitioned",
                                          "finishStep": "updated",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                                    "ocdi": {
                                                      "d2r2ReactClientOutputProcessor": {
                                                        "inputs": {
                                                          "ComponentRouter": null,
                                                          "DOMElement": null,
                                                          "clock": {
                                                            "value": null,
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "private": {
                                                          "renderCount": -1,
                                                          "renderPending": false
                                                        },
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "holarchy": {
                                                    "cm": {
                                                      "actions": {
                                                        "ocd": {
                                                          "setBooleanFlag": {
                                                            "path": "#.clock"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": {}
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": {
                                              "error": null,
                                              "result": "updated"
                                            }
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 2,
                                        "transitions": 1,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [
                                          "6KIVQm2l_Kkuh0qvYBQ-nw"
                                        ],
                                        "errors": [
                                          "Qf5B_mFgYWCyRbJFtNW01Q"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "Qf5B_mFgYWCyRbJFtNW01Q": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.d2r2ReactClientOutputProcessor",
                                            "specPath": "~.d2r2ReactClientOutputProcessor"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                            "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                            "name": "d2r2/React Client Display Adaptor",
                                            "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                            "process": {
                                              "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                              "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default APM process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "initialize",
                                                  "p": {
                                                    "description": "Initialize",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "wait_invariants",
                                                  "p": {
                                                    "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "wait_inputs",
                                                  "p": {
                                                    "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "initialized",
                                                  "p": {
                                                    "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "rehydrate",
                                                  "p": {
                                                    "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.private.renderPending"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holistic": {
                                                            "app": {
                                                              "client": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "d2r2ReactClientDisplayAdaptor": {
                                                                      "operation": "hydrate"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "render",
                                                  "p": {
                                                    "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.private.renderPending"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holistic": {
                                                            "app": {
                                                              "client": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "d2r2ReactClientDisplayAdaptor": {
                                                                      "operation": "render"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "rendering",
                                                  "p": {
                                                    "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "ready",
                                                  "p": {
                                                    "description": "Waiting for next clock signal to re-render client application view.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "initialize"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "cell": {
                                                              "atStep": {
                                                                "path": "#.//.//.//.//",
                                                                "step": "boot1_start_kernel"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialize",
                                                    "v": "wait_invariants"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "wait_invariants",
                                                    "v": "wait_inputs"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "and": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isNamespaceTruthy": {
                                                                    "path": "#.inputs.ComponentRouter"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isNamespaceTruthy": {
                                                                    "path": "#.inputs.DOMElement"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "wait_inputs",
                                                    "v": "initialized"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isNamespaceTruthy": {
                                                                "path": "#.inputs.clock.value"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialized",
                                                    "v": "rehydrate"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isNamespaceTruthy": {
                                                                "path": "#.inputs.clock.value.options.rehydrate"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialized",
                                                    "v": "render"
                                                  },
                                                  "p": {
                                                    "priority": 1,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "rehydrate",
                                                    "v": "rendering"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "render",
                                                    "v": "rendering"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "rendering",
                                                    "v": "ready"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "not": {
                                                        "holarchy": {
                                                          "cm": {
                                                            "operators": {
                                                              "ocd": {
                                                                "isNamespaceTruthy": {
                                                                  "path": "#.private.renderPending"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "ready",
                                                    "v": "render"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "opmi": {
                                                              "atStep": {
                                                                "path": "#.inputs.clock",
                                                                "step": "updated"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.d2r2ReactClientOutputProcessor",
                                                    "ocdi": {
                                                      "d2r2ReactClientOutputProcessor": {
                                                        "inputs": {
                                                          "ComponentRouter": null,
                                                          "DOMElement": null,
                                                          "clock": {
                                                            "value": null,
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "private": {
                                                          "renderCount": -1,
                                                          "renderPending": false
                                                        },
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "holarchy": {
                                                      "cm": {
                                                        "operators": {
                                                          "cell": {
                                                            "atStep": {
                                                              "path": "#.//.//.//.//",
                                                              "step": "boot1_start_kernel"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator request rejected by MDR phase 2 router. The selected TransitionOperator filter [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator] rejected the request with error: Filter [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator] failed while performing main operation. Filter [RNUkdw8VT8WLz5H_i-SwYg::Data Path Resolve Filter] failed while performing main operation. Invalid dataPath '#.//.//.//.//' references namespace at or above the anonymous '~' namespace."
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      },
                                      "6KIVQm2l_Kkuh0qvYBQ-nw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                            "specPath": "~.d2r2ReactClientOutputProcessor.inputs.clock"
                                          },
                                          "initialStep": "updated",
                                          "apmRef": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "process": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "Frame latch value has not changed since last signalled update.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "transitioned",
                                          "finishStep": "waiting",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                                    "ocdi": {
                                                      "d2r2ReactClientOutputProcessor": {
                                                        "inputs": {
                                                          "ComponentRouter": null,
                                                          "DOMElement": null,
                                                          "clock": {
                                                            "value": null,
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "private": {
                                                          "renderCount": -1,
                                                          "renderPending": false
                                                        },
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": true
                                                }
                                              }
                                            ],
                                            "p2_exit": [
                                              {
                                                "request": {
                                                  "holarchy": {
                                                    "cm": {
                                                      "actions": {
                                                        "ocd": {
                                                          "clearBooleanFlag": {
                                                            "path": "#.clock"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": {}
                                                }
                                              }
                                            ],
                                            "p3_enter": [],
                                            "p4_finalize": {
                                              "error": null,
                                              "result": "waiting"
                                            }
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 2,
                                        "transitions": 0,
                                        "errors": 1
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": [
                                          "Qf5B_mFgYWCyRbJFtNW01Q"
                                        ]
                                      }
                                    },
                                    "bindings": {
                                      "Qf5B_mFgYWCyRbJFtNW01Q": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.d2r2ReactClientOutputProcessor",
                                            "specPath": "~.d2r2ReactClientOutputProcessor"
                                          },
                                          "initialStep": "uninitialized",
                                          "apmRef": {
                                            "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                            "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                            "name": "d2r2/React Client Display Adaptor",
                                            "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                            "process": {
                                              "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                              "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default APM process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "initialize",
                                                  "p": {
                                                    "description": "Initialize",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "wait_invariants",
                                                  "p": {
                                                    "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "wait_inputs",
                                                  "p": {
                                                    "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "initialized",
                                                  "p": {
                                                    "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "rehydrate",
                                                  "p": {
                                                    "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.private.renderPending"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holistic": {
                                                            "app": {
                                                              "client": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "d2r2ReactClientDisplayAdaptor": {
                                                                      "operation": "hydrate"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "render",
                                                  "p": {
                                                    "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                                    "actions": {
                                                      "enter": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.private.renderPending"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holistic": {
                                                            "app": {
                                                              "client": {
                                                                "cm": {
                                                                  "actions": {
                                                                    "d2r2ReactClientDisplayAdaptor": {
                                                                      "operation": "render"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "rendering",
                                                  "p": {
                                                    "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "ready",
                                                  "p": {
                                                    "description": "Waiting for next clock signal to re-render client application view.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "initialize"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "cell": {
                                                              "atStep": {
                                                                "path": "#.//.//.//.//",
                                                                "step": "boot1_start_kernel"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialize",
                                                    "v": "wait_invariants"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "wait_invariants",
                                                    "v": "wait_inputs"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "and": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isNamespaceTruthy": {
                                                                    "path": "#.inputs.ComponentRouter"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "operators": {
                                                                "ocd": {
                                                                  "isNamespaceTruthy": {
                                                                    "path": "#.inputs.DOMElement"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "wait_inputs",
                                                    "v": "initialized"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isNamespaceTruthy": {
                                                                "path": "#.inputs.clock.value"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialized",
                                                    "v": "rehydrate"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isNamespaceTruthy": {
                                                                "path": "#.inputs.clock.value.options.rehydrate"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "initialized",
                                                    "v": "render"
                                                  },
                                                  "p": {
                                                    "priority": 1,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "rehydrate",
                                                    "v": "rendering"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "render",
                                                    "v": "rendering"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "rendering",
                                                    "v": "ready"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "not": {
                                                        "holarchy": {
                                                          "cm": {
                                                            "operators": {
                                                              "ocd": {
                                                                "isNamespaceTruthy": {
                                                                  "path": "#.private.renderPending"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "ready",
                                                    "v": "render"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "opmi": {
                                                              "atStep": {
                                                                "path": "#.inputs.clock",
                                                                "step": "updated"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.d2r2ReactClientOutputProcessor",
                                                    "ocdi": {
                                                      "d2r2ReactClientOutputProcessor": {
                                                        "inputs": {
                                                          "ComponentRouter": null,
                                                          "DOMElement": null,
                                                          "clock": {
                                                            "value": null,
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "private": {
                                                          "renderCount": -1,
                                                          "renderPending": false
                                                        },
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "holarchy": {
                                                      "cm": {
                                                        "operators": {
                                                          "cell": {
                                                            "atStep": {
                                                              "path": "#.//.//.//.//",
                                                              "step": "boot1_start_kernel"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": "TransitionOperator request rejected by MDR phase 2 router. The selected TransitionOperator filter [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator] rejected the request with error: Filter [9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator] failed while performing main operation. Filter [RNUkdw8VT8WLz5H_i-SwYg::Data Path Resolve Filter] failed while performing main operation. Invalid dataPath '#.//.//.//.//' references namespace at or above the anonymous '~' namespace."
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      },
                                      "6KIVQm2l_Kkuh0qvYBQ-nw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                            "specPath": "~.d2r2ReactClientOutputProcessor.inputs.clock"
                                          },
                                          "initialStep": "waiting",
                                          "apmRef": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "process": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "cm": {
                                                              "actions": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "Frame latch value has not changed since last signalled update.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "cm": {
                                                          "operators": {
                                                            "ocd": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "noop",
                                          "finishStep": "waiting",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "apmBindingPath": "~.d2r2ReactClientOutputProcessor.inputs.clock",
                                                    "ocdi": {
                                                      "d2r2ReactClientOutputProcessor": {
                                                        "inputs": {
                                                          "ComponentRouter": null,
                                                          "DOMElement": null,
                                                          "clock": {
                                                            "value": null,
                                                            "clock": false,
                                                            "__apmiStep": "waiting"
                                                          }
                                                        },
                                                        "private": {
                                                          "renderCount": -1,
                                                          "renderPending": false
                                                        },
                                                        "__apmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {
                                                      "filterDescriptor": {
                                                        "operationID": "CMvz9x30nfjuykt8A93fQA",
                                                        "operationName": "Discriminator Filter",
                                                        "operationDescription": "Retrieves a reference to the subfilter that should be used to process this request.",
                                                        "inputTypeVIID": "rAnCjiiPqJOIUCy0gsVhQw",
                                                        "inputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "outputTypeVIID": "s-TrKZuNdOqWlJnPbeR13w",
                                                        "outputTypeVDID": "dHR0dNnZ2dlUVFRUyMjIyA",
                                                        "operationVDID": "8m70E8lpNVeOdI7tp3YUtA"
                                                      },
                                                      "supportedFilters": [
                                                        "[0JIva4IFSm6Xm7i38g8uUA::OR Transition Expression Operator]",
                                                        "[2w7n6KxdR8mdIliePJesLQ::OCD Compare Values]",
                                                        "[9tNY7o5GTUGH_xda2GhP-w::Cell Process In Step Operator]",
                                                        "[TLSHkl73SO-utuzM7dyN2g::NOT Transition Expression Operator]",
                                                        "[UeLs9PcASwuC7KR190eYhA::OCD Boolean Flag Is Set]",
                                                        "[XxX_a1sQS1OlJbWAYfx6tQ::OCD Namespace Is Less Than Value]",
                                                        "[YgABX95wR86GCYrYaDLISA::AND Transition Expression Operator]",
                                                        "[e89cwnP4Qd6MocAhzdOJgw::Always returns Boolean true unconditionally.]",
                                                        "[ggsavKiARsq7rjwn-lxdfA::OCD Namespace Is Greater Than Value]",
                                                        "[k7THIKKDQMKOac1Rxh9tEQ::OCD Namespace Is Identical To Value]",
                                                        "[kD1PcgqYQlm7fJatNG2ZsA::OCD Namespace Is Truthy]",
                                                        "[oaF3-dXwQkusjD3I2o9-8g::OCD Array Length Equal to Value]"
                                                      ],
                                                      "options": {
                                                        "action": "getFilter"
                                                      }
                                                    }
                                                  },
                                                  "operatorRequest": {
                                                    "holarchy": {
                                                      "cm": {
                                                        "operators": {
                                                          "ocd": {
                                                            "isBooleanFlagSet": {
                                                              "path": "#.clock"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                },
                                                "response": {
                                                  "error": null,
                                                  "result": false
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 0,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": []
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "y3Jy2d56QI63admJOy1tZw": {
                "harnessRequest": {
                  "id": "y3Jy2d56QI63admJOy1tZw",
                  "name": "DOM Location Processor APM #1",
                  "description": "Attempt to instantiate the current DOM Location Processor APM via our test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "qzMWhMstQ4Ki06O75y5hMA",
                            "vdid": "y1PAdwv_lpQOn16GN-JevA",
                            "name": "DOM Location Processor",
                            "description": "Abstracts monitoring and setting the window.location and hashroute.",
                            "cmat": {
                              "error": null,
                              "result": {
                                "INDEX_CM": {
                                  "type": "INDEX",
                                  "qzMWhMstQ4Ki06O75y5hMA": {
                                    "id": "qzMWhMstQ4Ki06O75y5hMA",
                                    "vdid": "y1PAdwv_lpQOn16GN-JevA",
                                    "name": "DOM Location Processor",
                                    "description": "Abstracts monitoring and setting the window.location and hashroute.",
                                    "type": "CM",
                                    "-1Ptaq_zTUa8Gfv_3ODtDg": {
                                      "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                                      "vdid": "dhd1UlVDm9EWryeg4T_FJw",
                                      "name": "DOM Location Processor",
                                      "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                      "type": "APM"
                                    },
                                    "TlGPCf7uSf2cZMGZCcU85A": {
                                      "id": "TlGPCf7uSf2cZMGZCcU85A",
                                      "vdid": "134XV9KkzwK2X1tD0xJbBA",
                                      "name": "DOM Client Location Proccessor: Initialize",
                                      "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj.",
                                      "type": "ACT"
                                    },
                                    "peTmTek_SB64-ofd_PSGjg": {
                                      "id": "peTmTek_SB64-ofd_PSGjg",
                                      "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                                      "name": "DOM Client Location Processor: 'hashchange'",
                                      "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details.",
                                      "type": "ACT"
                                    },
                                    "RyMcv3MpTI-Co1EyVOIvlw": {
                                      "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                      "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                      "name": "Holarchy CML",
                                      "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                      "type": "CM",
                                      "MDVBKW89TvO9T62Ge7GmNg": {
                                        "id": "MDVBKW89TvO9T62Ge7GmNg",
                                        "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                        "name": "Holarchy Core",
                                        "description": "Holarchy core operations and actions for building derived CellModels.",
                                        "type": "CM",
                                        "orTbEFR_Q-u-qqEqP8OUBA": {
                                          "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                          "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                          "name": "Holarchy Core Cell",
                                          "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                          "type": "CM",
                                          "9tNY7o5GTUGH_xda2GhP-w": {
                                            "id": "9tNY7o5GTUGH_xda2GhP-w",
                                            "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                            "name": "Cell Process In Step Operator",
                                            "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                            "type": "TOP"
                                          },
                                          "DNAoE5L3R-mY6jLAF2S95A": {
                                            "id": "DNAoE5L3R-mY6jLAF2S95A",
                                            "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                            "name": "Holistic App Client Runtime Subprocess Action",
                                            "description": "Creates a cellular subprocess.",
                                            "type": "ACT"
                                          }
                                        },
                                        "RW8Y2O-kRNSv87yXT962wQ": {
                                          "id": "RW8Y2O-kRNSv87yXT962wQ",
                                          "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                          "name": "Holarchy Core Logic",
                                          "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                          "type": "CM",
                                          "YgABX95wR86GCYrYaDLISA": {
                                            "id": "YgABX95wR86GCYrYaDLISA",
                                            "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                            "name": "AND Transition Expression Operator",
                                            "description": "Returns Boolean true iff all suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "0JIva4IFSm6Xm7i38g8uUA": {
                                            "id": "0JIva4IFSm6Xm7i38g8uUA",
                                            "vdid": "HyCocPERRAAEOSzTOspyaw",
                                            "name": "OR Transition Expression Operator",
                                            "description": "Returns Boolean true iff any suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "TLSHkl73SO-utuzM7dyN2g": {
                                            "id": "TLSHkl73SO-utuzM7dyN2g",
                                            "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                            "name": "NOT Transition Expression Operator",
                                            "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                            "type": "TOP"
                                          },
                                          "e89cwnP4Qd6MocAhzdOJgw": {
                                            "id": "e89cwnP4Qd6MocAhzdOJgw",
                                            "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                            "name": "Always returns Boolean true unconditionally.",
                                            "description": "Always returns true.",
                                            "type": "TOP"
                                          }
                                        },
                                        "jQxlhOe-RDilxY0sNIierQ": {
                                          "id": "jQxlhOe-RDilxY0sNIierQ",
                                          "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                          "name": "Holarchy Core Memory Operators",
                                          "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                          "type": "CM",
                                          "oaF3-dXwQkusjD3I2o9-8g": {
                                            "id": "oaF3-dXwQkusjD3I2o9-8g",
                                            "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                            "name": "OCD Array Length Equal to Value",
                                            "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                            "type": "TOP"
                                          },
                                          "2w7n6KxdR8mdIliePJesLQ": {
                                            "id": "2w7n6KxdR8mdIliePJesLQ",
                                            "vdid": "tljozSCr53fX-AmzURPyEg",
                                            "name": "OCD Compare Values",
                                            "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                            "type": "TOP"
                                          },
                                          "UeLs9PcASwuC7KR190eYhA": {
                                            "id": "UeLs9PcASwuC7KR190eYhA",
                                            "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                            "name": "OCD Boolean Flag Is Set",
                                            "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                            "type": "TOP"
                                          },
                                          "ggsavKiARsq7rjwn-lxdfA": {
                                            "id": "ggsavKiARsq7rjwn-lxdfA",
                                            "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                            "name": "OCD Namespace Is Greater Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "k7THIKKDQMKOac1Rxh9tEQ": {
                                            "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                            "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                            "name": "OCD Namespace Is Identical To Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "XxX_a1sQS1OlJbWAYfx6tQ": {
                                            "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                            "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                            "name": "OCD Namespace Is Less Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "kD1PcgqYQlm7fJatNG2ZsA": {
                                            "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                            "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                            "name": "OCD Namespace Is Truthy",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                            "type": "TOP"
                                          },
                                          "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                            "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                            "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                            "name": "OCD Read Namespace Indirect",
                                            "description": "Reads and returns the value of OCD namespace via path indirection.",
                                            "type": "ACT"
                                          },
                                          "5rFEDGLYRSiZCeChMnkCHQ": {
                                            "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                            "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                            "name": "OCD Boolean Flag Set",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                            "type": "ACT"
                                          },
                                          "_yxWfFLnTqqN-UxRdd7W5w": {
                                            "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                            "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                            "name": "OCD Boolean Flag Clear",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                            "type": "ACT"
                                          }
                                        }
                                      },
                                      "c2cq2OE9SiaLKahL3Mk0KA": {
                                        "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                        "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                        "name": "Holarchy Base Cell Model",
                                        "description": "A collection of low-level building blocks.",
                                        "type": "CM",
                                        "U5iIpgd8SHCk7pvaciVLTQ": {
                                          "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                          "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                          "name": "Holarchy Base Memory Mailbox Flag",
                                          "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                          "type": "CM",
                                          "z_mTe02hSWmaM1iRO1pBeA": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "type": "APM"
                                          },
                                          "iyvk_9vhRn2qvrjOes5v7Q": {
                                            "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                            "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                            "name": "Frame Latch: Write",
                                            "description": "Writes the value made observable by frame latch APM instance.",
                                            "type": "ACT"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "y3Jy2d56QI63admJOy1tZw": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 33,
                              "edges": 58,
                              "artifacts": {
                                "cm": 8,
                                "apm": 2,
                                "top": 12,
                                "act": 7
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                                  "vdid": "dhd1UlVDm9EWryeg4T_FJw",
                                  "name": "DOM Location Processor",
                                  "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                  "process": {
                                    "name": "[-1Ptaq_zTUa8Gfv_3ODtDg::DOM Location Processor] APM Digraph",
                                    "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Registering hashchange DOM event callback.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "DOMLocationProcessor": {
                                                            "initialize": true
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": [
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "DOMLocationProcessor": {
                                                            "notifyEvent": {
                                                              "hashchange": true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait",
                                        "p": {
                                          "description": "Waiting for DOM hashchange event.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "update",
                                        "p": {
                                          "description": "The observable browser location has been updated. Information about the current location, and who set it is available in this model's output namespace.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#._private.updateObservers"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "cell": {
                                                    "atStep": {
                                                      "path": "#.//.//.//.//",
                                                      "step": "boot1_start_kernel"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait",
                                          "v": "update"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#._private.updateObservers"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "update",
                                          "v": "wait"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              "act": [
                                {
                                  "id": "TlGPCf7uSf2cZMGZCcU85A",
                                  "vdid": "134XV9KkzwK2X1tD0xJbBA",
                                  "name": "DOM Client Location Proccessor: Initialize",
                                  "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj."
                                },
                                {
                                  "id": "peTmTek_SB64-ofd_PSGjg",
                                  "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                                  "name": "DOM Client Location Processor: 'hashchange'",
                                  "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details."
                                },
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "qzMWhMstQ4Ki06O75y5hMA": {
                                  "id": "qzMWhMstQ4Ki06O75y5hMA",
                                  "vdid": "y1PAdwv_lpQOn16GN-JevA",
                                  "name": "DOM Location Processor",
                                  "description": "Abstracts monitoring and setting the window.location and hashroute.",
                                  "type": "CM",
                                  "-1Ptaq_zTUa8Gfv_3ODtDg": {
                                    "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                                    "vdid": "dhd1UlVDm9EWryeg4T_FJw",
                                    "name": "DOM Location Processor",
                                    "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                    "type": "APM"
                                  },
                                  "TlGPCf7uSf2cZMGZCcU85A": {
                                    "id": "TlGPCf7uSf2cZMGZCcU85A",
                                    "vdid": "134XV9KkzwK2X1tD0xJbBA",
                                    "name": "DOM Client Location Proccessor: Initialize",
                                    "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj.",
                                    "type": "ACT"
                                  },
                                  "peTmTek_SB64-ofd_PSGjg": {
                                    "id": "peTmTek_SB64-ofd_PSGjg",
                                    "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                                    "name": "DOM Client Location Processor: 'hashchange'",
                                    "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details.",
                                    "type": "ACT"
                                  },
                                  "RyMcv3MpTI-Co1EyVOIvlw": {
                                    "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                    "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                    "name": "Holarchy CML",
                                    "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                    "type": "CM",
                                    "MDVBKW89TvO9T62Ge7GmNg": {
                                      "id": "MDVBKW89TvO9T62Ge7GmNg",
                                      "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                      "name": "Holarchy Core",
                                      "description": "Holarchy core operations and actions for building derived CellModels.",
                                      "type": "CM",
                                      "orTbEFR_Q-u-qqEqP8OUBA": {
                                        "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                        "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                        "name": "Holarchy Core Cell",
                                        "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                        "type": "CM",
                                        "9tNY7o5GTUGH_xda2GhP-w": {
                                          "id": "9tNY7o5GTUGH_xda2GhP-w",
                                          "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                          "name": "Cell Process In Step Operator",
                                          "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                          "type": "TOP"
                                        },
                                        "DNAoE5L3R-mY6jLAF2S95A": {
                                          "id": "DNAoE5L3R-mY6jLAF2S95A",
                                          "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                          "name": "Holistic App Client Runtime Subprocess Action",
                                          "description": "Creates a cellular subprocess.",
                                          "type": "ACT"
                                        }
                                      },
                                      "RW8Y2O-kRNSv87yXT962wQ": {
                                        "id": "RW8Y2O-kRNSv87yXT962wQ",
                                        "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                        "name": "Holarchy Core Logic",
                                        "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                        "type": "CM",
                                        "YgABX95wR86GCYrYaDLISA": {
                                          "id": "YgABX95wR86GCYrYaDLISA",
                                          "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                          "name": "AND Transition Expression Operator",
                                          "description": "Returns Boolean true iff all suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "0JIva4IFSm6Xm7i38g8uUA": {
                                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                                          "vdid": "HyCocPERRAAEOSzTOspyaw",
                                          "name": "OR Transition Expression Operator",
                                          "description": "Returns Boolean true iff any suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "TLSHkl73SO-utuzM7dyN2g": {
                                          "id": "TLSHkl73SO-utuzM7dyN2g",
                                          "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                          "name": "NOT Transition Expression Operator",
                                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                          "type": "TOP"
                                        },
                                        "e89cwnP4Qd6MocAhzdOJgw": {
                                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                                          "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                          "name": "Always returns Boolean true unconditionally.",
                                          "description": "Always returns true.",
                                          "type": "TOP"
                                        }
                                      },
                                      "jQxlhOe-RDilxY0sNIierQ": {
                                        "id": "jQxlhOe-RDilxY0sNIierQ",
                                        "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                        "name": "Holarchy Core Memory Operators",
                                        "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                        "type": "CM",
                                        "oaF3-dXwQkusjD3I2o9-8g": {
                                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                          "name": "OCD Array Length Equal to Value",
                                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                          "type": "TOP"
                                        },
                                        "2w7n6KxdR8mdIliePJesLQ": {
                                          "id": "2w7n6KxdR8mdIliePJesLQ",
                                          "vdid": "tljozSCr53fX-AmzURPyEg",
                                          "name": "OCD Compare Values",
                                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                          "type": "TOP"
                                        },
                                        "UeLs9PcASwuC7KR190eYhA": {
                                          "id": "UeLs9PcASwuC7KR190eYhA",
                                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                          "name": "OCD Boolean Flag Is Set",
                                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                          "type": "TOP"
                                        },
                                        "ggsavKiARsq7rjwn-lxdfA": {
                                          "id": "ggsavKiARsq7rjwn-lxdfA",
                                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                          "name": "OCD Namespace Is Greater Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "k7THIKKDQMKOac1Rxh9tEQ": {
                                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                          "name": "OCD Namespace Is Identical To Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "XxX_a1sQS1OlJbWAYfx6tQ": {
                                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                          "name": "OCD Namespace Is Less Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "kD1PcgqYQlm7fJatNG2ZsA": {
                                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                          "name": "OCD Namespace Is Truthy",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                          "type": "TOP"
                                        },
                                        "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                          "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                          "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                          "name": "OCD Read Namespace Indirect",
                                          "description": "Reads and returns the value of OCD namespace via path indirection.",
                                          "type": "ACT"
                                        },
                                        "5rFEDGLYRSiZCeChMnkCHQ": {
                                          "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                          "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                          "name": "OCD Boolean Flag Set",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                          "type": "ACT"
                                        },
                                        "_yxWfFLnTqqN-UxRdd7W5w": {
                                          "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                          "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                          "name": "OCD Boolean Flag Clear",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                          "type": "ACT"
                                        }
                                      }
                                    },
                                    "c2cq2OE9SiaLKahL3Mk0KA": {
                                      "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                      "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                      "name": "Holarchy Base Cell Model",
                                      "description": "A collection of low-level building blocks.",
                                      "type": "CM",
                                      "U5iIpgd8SHCk7pvaciVLTQ": {
                                        "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                        "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                        "name": "Holarchy Base Memory Mailbox Flag",
                                        "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                        "type": "CM",
                                        "z_mTe02hSWmaM1iRO1pBeA": {
                                          "id": "z_mTe02hSWmaM1iRO1pBeA",
                                          "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                          "name": "Abstract Frame Latch",
                                          "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                          "type": "APM"
                                        },
                                        "iyvk_9vhRn2qvrjOes5v7Q": {
                                          "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                          "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                          "name": "Frame Latch: Write",
                                          "description": "Writes the value made observable by frame latch APM instance.",
                                          "type": "ACT"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "sThxzN9-QuKCgErSNYhcQQ": {
                "harnessRequest": {
                  "id": "sThxzN9-QuKCgErSNYhcQQ",
                  "name": "Holistic App Client Runtime CellModel Test",
                  "description": "Instantiate the Holistic App Client Runtime CellModel through the CellModel test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "ENENGxq1TkCa6Sk9YXaLlw",
                            "vdid": "rCwXeH2xZNdHwg_XOiLo1w",
                            "name": "Holistic App Client Runtime",
                            "description": "Holistic client application core runtime.",
                            "cmat": {
                              "error": null,
                              "result": {
                                "INDEX_CM": {
                                  "type": "INDEX",
                                  "ENENGxq1TkCa6Sk9YXaLlw": {
                                    "id": "ENENGxq1TkCa6Sk9YXaLlw",
                                    "vdid": "rCwXeH2xZNdHwg_XOiLo1w",
                                    "name": "Holistic App Client Runtime",
                                    "description": "Holistic client application core runtime.",
                                    "type": "CM",
                                    "PPL45jw5RDWSMNsB97WIWg": {
                                      "id": "PPL45jw5RDWSMNsB97WIWg",
                                      "vdid": "wMdKGGmfJUznN092sBj2xw",
                                      "name": "Holistic Client App Runtime Kernel",
                                      "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                      "type": "APM"
                                    },
                                    "JwE4LMvpRGC3Jsg1RDjJ1Q": {
                                      "id": "JwE4LMvpRGC3Jsg1RDjJ1Q",
                                      "vdid": "ZERdngvXY8Z8kA5jLip_Hw",
                                      "name": "Holistic App Client Hook Events",
                                      "description": "Hooks DOM events on behalf of the Holistic App Client Runtime APM.",
                                      "type": "ACT"
                                    },
                                    "h-auSE-OSP2TG1jh_3EQ1Q": {
                                      "id": "h-auSE-OSP2TG1jh_3EQ1Q",
                                      "vdid": "8iKdC1jZzmzrTHnmTDpoKw",
                                      "name": "Holistic App Client Runtime Receive DOM Event",
                                      "description": "ControllerAction that signals the HolisticAppClientRuntime CM that the window.onload event has occurred.",
                                      "type": "ACT"
                                    },
                                    "RyMcv3MpTI-Co1EyVOIvlw": {
                                      "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                      "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                      "name": "Holarchy CML",
                                      "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                      "type": "CM",
                                      "MDVBKW89TvO9T62Ge7GmNg": {
                                        "id": "MDVBKW89TvO9T62Ge7GmNg",
                                        "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                        "name": "Holarchy Core",
                                        "description": "Holarchy core operations and actions for building derived CellModels.",
                                        "type": "CM",
                                        "orTbEFR_Q-u-qqEqP8OUBA": {
                                          "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                          "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                          "name": "Holarchy Core Cell",
                                          "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                          "type": "CM",
                                          "9tNY7o5GTUGH_xda2GhP-w": {
                                            "id": "9tNY7o5GTUGH_xda2GhP-w",
                                            "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                            "name": "Cell Process In Step Operator",
                                            "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                            "type": "TOP"
                                          },
                                          "DNAoE5L3R-mY6jLAF2S95A": {
                                            "id": "DNAoE5L3R-mY6jLAF2S95A",
                                            "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                            "name": "Holistic App Client Runtime Subprocess Action",
                                            "description": "Creates a cellular subprocess.",
                                            "type": "ACT"
                                          }
                                        },
                                        "RW8Y2O-kRNSv87yXT962wQ": {
                                          "id": "RW8Y2O-kRNSv87yXT962wQ",
                                          "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                          "name": "Holarchy Core Logic",
                                          "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                          "type": "CM",
                                          "YgABX95wR86GCYrYaDLISA": {
                                            "id": "YgABX95wR86GCYrYaDLISA",
                                            "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                            "name": "AND Transition Expression Operator",
                                            "description": "Returns Boolean true iff all suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "0JIva4IFSm6Xm7i38g8uUA": {
                                            "id": "0JIva4IFSm6Xm7i38g8uUA",
                                            "vdid": "HyCocPERRAAEOSzTOspyaw",
                                            "name": "OR Transition Expression Operator",
                                            "description": "Returns Boolean true iff any suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "TLSHkl73SO-utuzM7dyN2g": {
                                            "id": "TLSHkl73SO-utuzM7dyN2g",
                                            "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                            "name": "NOT Transition Expression Operator",
                                            "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                            "type": "TOP"
                                          },
                                          "e89cwnP4Qd6MocAhzdOJgw": {
                                            "id": "e89cwnP4Qd6MocAhzdOJgw",
                                            "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                            "name": "Always returns Boolean true unconditionally.",
                                            "description": "Always returns true.",
                                            "type": "TOP"
                                          }
                                        },
                                        "jQxlhOe-RDilxY0sNIierQ": {
                                          "id": "jQxlhOe-RDilxY0sNIierQ",
                                          "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                          "name": "Holarchy Core Memory Operators",
                                          "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                          "type": "CM",
                                          "oaF3-dXwQkusjD3I2o9-8g": {
                                            "id": "oaF3-dXwQkusjD3I2o9-8g",
                                            "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                            "name": "OCD Array Length Equal to Value",
                                            "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                            "type": "TOP"
                                          },
                                          "2w7n6KxdR8mdIliePJesLQ": {
                                            "id": "2w7n6KxdR8mdIliePJesLQ",
                                            "vdid": "tljozSCr53fX-AmzURPyEg",
                                            "name": "OCD Compare Values",
                                            "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                            "type": "TOP"
                                          },
                                          "UeLs9PcASwuC7KR190eYhA": {
                                            "id": "UeLs9PcASwuC7KR190eYhA",
                                            "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                            "name": "OCD Boolean Flag Is Set",
                                            "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                            "type": "TOP"
                                          },
                                          "ggsavKiARsq7rjwn-lxdfA": {
                                            "id": "ggsavKiARsq7rjwn-lxdfA",
                                            "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                            "name": "OCD Namespace Is Greater Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "k7THIKKDQMKOac1Rxh9tEQ": {
                                            "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                            "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                            "name": "OCD Namespace Is Identical To Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "XxX_a1sQS1OlJbWAYfx6tQ": {
                                            "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                            "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                            "name": "OCD Namespace Is Less Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "kD1PcgqYQlm7fJatNG2ZsA": {
                                            "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                            "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                            "name": "OCD Namespace Is Truthy",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                            "type": "TOP"
                                          },
                                          "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                            "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                            "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                            "name": "OCD Read Namespace Indirect",
                                            "description": "Reads and returns the value of OCD namespace via path indirection.",
                                            "type": "ACT"
                                          },
                                          "5rFEDGLYRSiZCeChMnkCHQ": {
                                            "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                            "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                            "name": "OCD Boolean Flag Set",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                            "type": "ACT"
                                          },
                                          "_yxWfFLnTqqN-UxRdd7W5w": {
                                            "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                            "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                            "name": "OCD Boolean Flag Clear",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                            "type": "ACT"
                                          }
                                        }
                                      },
                                      "c2cq2OE9SiaLKahL3Mk0KA": {
                                        "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                        "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                        "name": "Holarchy Base Cell Model",
                                        "description": "A collection of low-level building blocks.",
                                        "type": "CM",
                                        "U5iIpgd8SHCk7pvaciVLTQ": {
                                          "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                          "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                          "name": "Holarchy Base Memory Mailbox Flag",
                                          "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                          "type": "CM",
                                          "z_mTe02hSWmaM1iRO1pBeA": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "type": "APM"
                                          },
                                          "iyvk_9vhRn2qvrjOes5v7Q": {
                                            "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                            "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                            "name": "Frame Latch: Write",
                                            "description": "Writes the value made observable by frame latch APM instance.",
                                            "type": "ACT"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "sThxzN9-QuKCgErSNYhcQQ": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 33,
                              "edges": 58,
                              "artifacts": {
                                "cm": 8,
                                "apm": 2,
                                "top": 12,
                                "act": 7
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "PPL45jw5RDWSMNsB97WIWg",
                                  "vdid": "wMdKGGmfJUznN092sBj2xw",
                                  "name": "Holistic Client App Runtime Kernel",
                                  "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                  "process": {
                                    "name": "[PPL45jw5RDWSMNsB97WIWg::Holistic Client App Runtime Kernel] APM Digraph",
                                    "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot0_hook_events",
                                        "p": {
                                          "description": "Hooking DOM events pertinent to tracking the lifecycle of this instance of the client application running inside the user's browser.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "HolisticAppRuntime": {
                                                          "actions": {
                                                            "_private": {
                                                              "hookEvents": true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot1_start_kernel",
                                        "p": {
                                          "description": "Start core client app kernel subsystems.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "cell": {
                                                        "process": {
                                                          "create": {
                                                            "apmBindingPath": "#.PPL45jw5RDWSMNsB97WIWg._private.subprocesses.viewProcessor",
                                                            "ocdInitData": {}
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot2_query_derived",
                                        "p": {
                                          "description": "Query the derived client app for information required to initialize the core client app runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot3_wait_kernel",
                                        "p": {
                                          "description": "Wait for the core client app kernel subsystems to become available.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot4_config_derived",
                                        "p": {
                                          "description": "Configure the derived application runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot5_wait_browser",
                                        "p": {
                                          "description": "Wait for the browser to finish loading the HTML document and its referenced external resources (scripts, CSS, images, fonts, JSON, ...",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot6_deserialize_app",
                                        "p": {
                                          "description": "Access the boot ROM embedded in the hosting HTML document to get the suspended process state of the derived application.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot7_load_app_memory",
                                        "p": {
                                          "description": "Load the deserialized app into the OCD to initialize the client app runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot8_init_app_view",
                                        "p": {
                                          "description": "Initialize the view and d2r2/React display models. Performs a d2r2/ReactDOM.hydrate operation ultimately.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot9_start_app",
                                        "p": {
                                          "description": "Start the client application runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "running",
                                        "p": {
                                          "description": "The client application is online and awaiting input from external actors.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "error_process_boot_failure",
                                        "p": {
                                          "description": "Client application process boot failed due to unrecoverable error(s).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "error_process_resume_failure",
                                        "p": {
                                          "description": "Client application process resume failured due to unrecoverable error(s).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "error_process_runtime_failure",
                                        "p": {
                                          "description": "Client application process crashed at runtime due to unexpected and unrecoverable error(s).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "boot0_hook_events"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot0_hook_events",
                                          "v": "boot1_start_kernel"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot1_start_kernel",
                                          "v": "boot2_query_derived"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot2_query_derived",
                                          "v": "boot3_wait_kernel"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot3_wait_kernel",
                                          "v": "boot4_config_derived"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot4_config_derived",
                                          "v": "boot5_wait_browser"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot5_wait_browser",
                                          "v": "boot6_deserialize_app"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.PPL45jw5RDWSMNsB97WIWg._private.windowLoaded"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              "act": [
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "JwE4LMvpRGC3Jsg1RDjJ1Q",
                                  "vdid": "ZERdngvXY8Z8kA5jLip_Hw",
                                  "name": "Holistic App Client Hook Events",
                                  "description": "Hooks DOM events on behalf of the Holistic App Client Runtime APM."
                                },
                                {
                                  "id": "h-auSE-OSP2TG1jh_3EQ1Q",
                                  "vdid": "8iKdC1jZzmzrTHnmTDpoKw",
                                  "name": "Holistic App Client Runtime Receive DOM Event",
                                  "description": "ControllerAction that signals the HolisticAppClientRuntime CM that the window.onload event has occurred."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "ENENGxq1TkCa6Sk9YXaLlw": {
                                  "id": "ENENGxq1TkCa6Sk9YXaLlw",
                                  "vdid": "rCwXeH2xZNdHwg_XOiLo1w",
                                  "name": "Holistic App Client Runtime",
                                  "description": "Holistic client application core runtime.",
                                  "type": "CM",
                                  "PPL45jw5RDWSMNsB97WIWg": {
                                    "id": "PPL45jw5RDWSMNsB97WIWg",
                                    "vdid": "wMdKGGmfJUznN092sBj2xw",
                                    "name": "Holistic Client App Runtime Kernel",
                                    "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                    "type": "APM"
                                  },
                                  "JwE4LMvpRGC3Jsg1RDjJ1Q": {
                                    "id": "JwE4LMvpRGC3Jsg1RDjJ1Q",
                                    "vdid": "ZERdngvXY8Z8kA5jLip_Hw",
                                    "name": "Holistic App Client Hook Events",
                                    "description": "Hooks DOM events on behalf of the Holistic App Client Runtime APM.",
                                    "type": "ACT"
                                  },
                                  "h-auSE-OSP2TG1jh_3EQ1Q": {
                                    "id": "h-auSE-OSP2TG1jh_3EQ1Q",
                                    "vdid": "8iKdC1jZzmzrTHnmTDpoKw",
                                    "name": "Holistic App Client Runtime Receive DOM Event",
                                    "description": "ControllerAction that signals the HolisticAppClientRuntime CM that the window.onload event has occurred.",
                                    "type": "ACT"
                                  },
                                  "RyMcv3MpTI-Co1EyVOIvlw": {
                                    "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                    "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                    "name": "Holarchy CML",
                                    "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                    "type": "CM",
                                    "MDVBKW89TvO9T62Ge7GmNg": {
                                      "id": "MDVBKW89TvO9T62Ge7GmNg",
                                      "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                      "name": "Holarchy Core",
                                      "description": "Holarchy core operations and actions for building derived CellModels.",
                                      "type": "CM",
                                      "orTbEFR_Q-u-qqEqP8OUBA": {
                                        "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                        "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                        "name": "Holarchy Core Cell",
                                        "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                        "type": "CM",
                                        "9tNY7o5GTUGH_xda2GhP-w": {
                                          "id": "9tNY7o5GTUGH_xda2GhP-w",
                                          "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                          "name": "Cell Process In Step Operator",
                                          "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                          "type": "TOP"
                                        },
                                        "DNAoE5L3R-mY6jLAF2S95A": {
                                          "id": "DNAoE5L3R-mY6jLAF2S95A",
                                          "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                          "name": "Holistic App Client Runtime Subprocess Action",
                                          "description": "Creates a cellular subprocess.",
                                          "type": "ACT"
                                        }
                                      },
                                      "RW8Y2O-kRNSv87yXT962wQ": {
                                        "id": "RW8Y2O-kRNSv87yXT962wQ",
                                        "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                        "name": "Holarchy Core Logic",
                                        "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                        "type": "CM",
                                        "YgABX95wR86GCYrYaDLISA": {
                                          "id": "YgABX95wR86GCYrYaDLISA",
                                          "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                          "name": "AND Transition Expression Operator",
                                          "description": "Returns Boolean true iff all suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "0JIva4IFSm6Xm7i38g8uUA": {
                                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                                          "vdid": "HyCocPERRAAEOSzTOspyaw",
                                          "name": "OR Transition Expression Operator",
                                          "description": "Returns Boolean true iff any suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "TLSHkl73SO-utuzM7dyN2g": {
                                          "id": "TLSHkl73SO-utuzM7dyN2g",
                                          "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                          "name": "NOT Transition Expression Operator",
                                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                          "type": "TOP"
                                        },
                                        "e89cwnP4Qd6MocAhzdOJgw": {
                                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                                          "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                          "name": "Always returns Boolean true unconditionally.",
                                          "description": "Always returns true.",
                                          "type": "TOP"
                                        }
                                      },
                                      "jQxlhOe-RDilxY0sNIierQ": {
                                        "id": "jQxlhOe-RDilxY0sNIierQ",
                                        "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                        "name": "Holarchy Core Memory Operators",
                                        "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                        "type": "CM",
                                        "oaF3-dXwQkusjD3I2o9-8g": {
                                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                          "name": "OCD Array Length Equal to Value",
                                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                          "type": "TOP"
                                        },
                                        "2w7n6KxdR8mdIliePJesLQ": {
                                          "id": "2w7n6KxdR8mdIliePJesLQ",
                                          "vdid": "tljozSCr53fX-AmzURPyEg",
                                          "name": "OCD Compare Values",
                                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                          "type": "TOP"
                                        },
                                        "UeLs9PcASwuC7KR190eYhA": {
                                          "id": "UeLs9PcASwuC7KR190eYhA",
                                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                          "name": "OCD Boolean Flag Is Set",
                                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                          "type": "TOP"
                                        },
                                        "ggsavKiARsq7rjwn-lxdfA": {
                                          "id": "ggsavKiARsq7rjwn-lxdfA",
                                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                          "name": "OCD Namespace Is Greater Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "k7THIKKDQMKOac1Rxh9tEQ": {
                                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                          "name": "OCD Namespace Is Identical To Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "XxX_a1sQS1OlJbWAYfx6tQ": {
                                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                          "name": "OCD Namespace Is Less Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "kD1PcgqYQlm7fJatNG2ZsA": {
                                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                          "name": "OCD Namespace Is Truthy",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                          "type": "TOP"
                                        },
                                        "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                          "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                          "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                          "name": "OCD Read Namespace Indirect",
                                          "description": "Reads and returns the value of OCD namespace via path indirection.",
                                          "type": "ACT"
                                        },
                                        "5rFEDGLYRSiZCeChMnkCHQ": {
                                          "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                          "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                          "name": "OCD Boolean Flag Set",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                          "type": "ACT"
                                        },
                                        "_yxWfFLnTqqN-UxRdd7W5w": {
                                          "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                          "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                          "name": "OCD Boolean Flag Clear",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                          "type": "ACT"
                                        }
                                      }
                                    },
                                    "c2cq2OE9SiaLKahL3Mk0KA": {
                                      "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                      "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                      "name": "Holarchy Base Cell Model",
                                      "description": "A collection of low-level building blocks.",
                                      "type": "CM",
                                      "U5iIpgd8SHCk7pvaciVLTQ": {
                                        "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                        "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                        "name": "Holarchy Base Memory Mailbox Flag",
                                        "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                        "type": "CM",
                                        "z_mTe02hSWmaM1iRO1pBeA": {
                                          "id": "z_mTe02hSWmaM1iRO1pBeA",
                                          "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                          "name": "Abstract Frame Latch",
                                          "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                          "type": "APM"
                                        },
                                        "iyvk_9vhRn2qvrjOes5v7Q": {
                                          "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                          "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                          "name": "Frame Latch: Write",
                                          "description": "Writes the value made observable by frame latch APM instance.",
                                          "type": "ACT"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "VyQv8NaWTAuoY0daxO9mzQ": {
                "harnessRequest": {
                  "id": "VyQv8NaWTAuoY0daxO9mzQ",
                  "name": "Holistic Client App View CellModel Test",
                  "description": "Instantiate Holistic App Client View CellModel through the CellModel test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "vrmv3WMRQXql7Bx3DDEIDw",
                            "vdid": "KCkDSzCkBWX7sXu-2UL7yg",
                            "name": "Holistic Client App View Manager",
                            "description": "Provides management of client view cells in a holistic client app.",
                            "cmat": {
                              "error": null,
                              "result": {
                                "INDEX_CM": {
                                  "type": "INDEX",
                                  "vrmv3WMRQXql7Bx3DDEIDw": {
                                    "id": "vrmv3WMRQXql7Bx3DDEIDw",
                                    "vdid": "KCkDSzCkBWX7sXu-2UL7yg",
                                    "name": "Holistic Client App View Manager",
                                    "description": "Provides management of client view cells in a holistic client app.",
                                    "type": "CM",
                                    "Hsu-43zBRgqHItCPWPiBng": {
                                      "id": "Hsu-43zBRgqHItCPWPiBng",
                                      "vdid": "OWua2vzX9aOS549fLUzD2g",
                                      "name": "Holistic Client App View Processor",
                                      "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                      "type": "APM"
                                    },
                                    "RyMcv3MpTI-Co1EyVOIvlw": {
                                      "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                      "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                      "name": "Holarchy CML",
                                      "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                      "type": "CM",
                                      "MDVBKW89TvO9T62Ge7GmNg": {
                                        "id": "MDVBKW89TvO9T62Ge7GmNg",
                                        "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                        "name": "Holarchy Core",
                                        "description": "Holarchy core operations and actions for building derived CellModels.",
                                        "type": "CM",
                                        "orTbEFR_Q-u-qqEqP8OUBA": {
                                          "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                          "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                          "name": "Holarchy Core Cell",
                                          "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                          "type": "CM",
                                          "9tNY7o5GTUGH_xda2GhP-w": {
                                            "id": "9tNY7o5GTUGH_xda2GhP-w",
                                            "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                            "name": "Cell Process In Step Operator",
                                            "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                            "type": "TOP"
                                          },
                                          "DNAoE5L3R-mY6jLAF2S95A": {
                                            "id": "DNAoE5L3R-mY6jLAF2S95A",
                                            "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                            "name": "Holistic App Client Runtime Subprocess Action",
                                            "description": "Creates a cellular subprocess.",
                                            "type": "ACT"
                                          }
                                        },
                                        "RW8Y2O-kRNSv87yXT962wQ": {
                                          "id": "RW8Y2O-kRNSv87yXT962wQ",
                                          "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                          "name": "Holarchy Core Logic",
                                          "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                          "type": "CM",
                                          "YgABX95wR86GCYrYaDLISA": {
                                            "id": "YgABX95wR86GCYrYaDLISA",
                                            "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                            "name": "AND Transition Expression Operator",
                                            "description": "Returns Boolean true iff all suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "0JIva4IFSm6Xm7i38g8uUA": {
                                            "id": "0JIva4IFSm6Xm7i38g8uUA",
                                            "vdid": "HyCocPERRAAEOSzTOspyaw",
                                            "name": "OR Transition Expression Operator",
                                            "description": "Returns Boolean true iff any suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "TLSHkl73SO-utuzM7dyN2g": {
                                            "id": "TLSHkl73SO-utuzM7dyN2g",
                                            "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                            "name": "NOT Transition Expression Operator",
                                            "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                            "type": "TOP"
                                          },
                                          "e89cwnP4Qd6MocAhzdOJgw": {
                                            "id": "e89cwnP4Qd6MocAhzdOJgw",
                                            "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                            "name": "Always returns Boolean true unconditionally.",
                                            "description": "Always returns true.",
                                            "type": "TOP"
                                          }
                                        },
                                        "jQxlhOe-RDilxY0sNIierQ": {
                                          "id": "jQxlhOe-RDilxY0sNIierQ",
                                          "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                          "name": "Holarchy Core Memory Operators",
                                          "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                          "type": "CM",
                                          "oaF3-dXwQkusjD3I2o9-8g": {
                                            "id": "oaF3-dXwQkusjD3I2o9-8g",
                                            "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                            "name": "OCD Array Length Equal to Value",
                                            "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                            "type": "TOP"
                                          },
                                          "2w7n6KxdR8mdIliePJesLQ": {
                                            "id": "2w7n6KxdR8mdIliePJesLQ",
                                            "vdid": "tljozSCr53fX-AmzURPyEg",
                                            "name": "OCD Compare Values",
                                            "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                            "type": "TOP"
                                          },
                                          "UeLs9PcASwuC7KR190eYhA": {
                                            "id": "UeLs9PcASwuC7KR190eYhA",
                                            "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                            "name": "OCD Boolean Flag Is Set",
                                            "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                            "type": "TOP"
                                          },
                                          "ggsavKiARsq7rjwn-lxdfA": {
                                            "id": "ggsavKiARsq7rjwn-lxdfA",
                                            "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                            "name": "OCD Namespace Is Greater Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "k7THIKKDQMKOac1Rxh9tEQ": {
                                            "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                            "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                            "name": "OCD Namespace Is Identical To Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "XxX_a1sQS1OlJbWAYfx6tQ": {
                                            "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                            "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                            "name": "OCD Namespace Is Less Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "kD1PcgqYQlm7fJatNG2ZsA": {
                                            "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                            "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                            "name": "OCD Namespace Is Truthy",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                            "type": "TOP"
                                          },
                                          "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                            "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                            "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                            "name": "OCD Read Namespace Indirect",
                                            "description": "Reads and returns the value of OCD namespace via path indirection.",
                                            "type": "ACT"
                                          },
                                          "5rFEDGLYRSiZCeChMnkCHQ": {
                                            "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                            "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                            "name": "OCD Boolean Flag Set",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                            "type": "ACT"
                                          },
                                          "_yxWfFLnTqqN-UxRdd7W5w": {
                                            "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                            "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                            "name": "OCD Boolean Flag Clear",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                            "type": "ACT"
                                          }
                                        }
                                      },
                                      "c2cq2OE9SiaLKahL3Mk0KA": {
                                        "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                        "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                        "name": "Holarchy Base Cell Model",
                                        "description": "A collection of low-level building blocks.",
                                        "type": "CM",
                                        "U5iIpgd8SHCk7pvaciVLTQ": {
                                          "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                          "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                          "name": "Holarchy Base Memory Mailbox Flag",
                                          "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                          "type": "CM",
                                          "z_mTe02hSWmaM1iRO1pBeA": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "type": "APM"
                                          },
                                          "iyvk_9vhRn2qvrjOes5v7Q": {
                                            "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                            "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                            "name": "Frame Latch: Write",
                                            "description": "Writes the value made observable by frame latch APM instance.",
                                            "type": "ACT"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "VyQv8NaWTAuoY0daxO9mzQ": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 31,
                              "edges": 54,
                              "artifacts": {
                                "cm": 8,
                                "apm": 2,
                                "top": 12,
                                "act": 5
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Hsu-43zBRgqHItCPWPiBng",
                                  "vdid": "OWua2vzX9aOS549fLUzD2g",
                                  "name": "Holistic Client App View Processor",
                                  "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                  "process": {
                                    "name": "[Hsu-43zBRgqHItCPWPiBng::Holistic Client App View Processor] APM Digraph",
                                    "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Performing initialization actions.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_invariants",
                                        "p": {
                                          "description": "Waiting for invariant inputs to be satisfied.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_app_config",
                                        "p": {
                                          "description": "Waiting for the client application runtime to be configured.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_server_route",
                                        "p": {
                                          "description": "Waiting for the DOM Location Processor to signal the client application's server-specified route (location.href).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_app_resume",
                                        "p": {
                                          "description": "Waiting for the App Client Runtime to resume the client application runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rehydrate",
                                        "p": {
                                          "description": "Use data from the server to rehydate the server-rendered d2r2/React view.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "ready",
                                        "p": {
                                          "description": "View is interactive and up-to-date.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "update",
                                        "p": {
                                          "description": "Update the client application's view model to incorporate changes in underlying data and model state.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "render",
                                        "p": {
                                          "description": "Send the updated view to the d2r2/React Display Adaptor.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait_invariants"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_invariants",
                                          "v": "wait_app_config"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              "act": [
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "vrmv3WMRQXql7Bx3DDEIDw": {
                                  "id": "vrmv3WMRQXql7Bx3DDEIDw",
                                  "vdid": "KCkDSzCkBWX7sXu-2UL7yg",
                                  "name": "Holistic Client App View Manager",
                                  "description": "Provides management of client view cells in a holistic client app.",
                                  "type": "CM",
                                  "Hsu-43zBRgqHItCPWPiBng": {
                                    "id": "Hsu-43zBRgqHItCPWPiBng",
                                    "vdid": "OWua2vzX9aOS549fLUzD2g",
                                    "name": "Holistic Client App View Processor",
                                    "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                    "type": "APM"
                                  },
                                  "RyMcv3MpTI-Co1EyVOIvlw": {
                                    "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                    "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                    "name": "Holarchy CML",
                                    "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                    "type": "CM",
                                    "MDVBKW89TvO9T62Ge7GmNg": {
                                      "id": "MDVBKW89TvO9T62Ge7GmNg",
                                      "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                      "name": "Holarchy Core",
                                      "description": "Holarchy core operations and actions for building derived CellModels.",
                                      "type": "CM",
                                      "orTbEFR_Q-u-qqEqP8OUBA": {
                                        "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                        "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                        "name": "Holarchy Core Cell",
                                        "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                        "type": "CM",
                                        "9tNY7o5GTUGH_xda2GhP-w": {
                                          "id": "9tNY7o5GTUGH_xda2GhP-w",
                                          "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                          "name": "Cell Process In Step Operator",
                                          "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                          "type": "TOP"
                                        },
                                        "DNAoE5L3R-mY6jLAF2S95A": {
                                          "id": "DNAoE5L3R-mY6jLAF2S95A",
                                          "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                          "name": "Holistic App Client Runtime Subprocess Action",
                                          "description": "Creates a cellular subprocess.",
                                          "type": "ACT"
                                        }
                                      },
                                      "RW8Y2O-kRNSv87yXT962wQ": {
                                        "id": "RW8Y2O-kRNSv87yXT962wQ",
                                        "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                        "name": "Holarchy Core Logic",
                                        "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                        "type": "CM",
                                        "YgABX95wR86GCYrYaDLISA": {
                                          "id": "YgABX95wR86GCYrYaDLISA",
                                          "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                          "name": "AND Transition Expression Operator",
                                          "description": "Returns Boolean true iff all suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "0JIva4IFSm6Xm7i38g8uUA": {
                                          "id": "0JIva4IFSm6Xm7i38g8uUA",
                                          "vdid": "HyCocPERRAAEOSzTOspyaw",
                                          "name": "OR Transition Expression Operator",
                                          "description": "Returns Boolean true iff any suboperations return true.",
                                          "type": "TOP"
                                        },
                                        "TLSHkl73SO-utuzM7dyN2g": {
                                          "id": "TLSHkl73SO-utuzM7dyN2g",
                                          "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                          "name": "NOT Transition Expression Operator",
                                          "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                          "type": "TOP"
                                        },
                                        "e89cwnP4Qd6MocAhzdOJgw": {
                                          "id": "e89cwnP4Qd6MocAhzdOJgw",
                                          "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                          "name": "Always returns Boolean true unconditionally.",
                                          "description": "Always returns true.",
                                          "type": "TOP"
                                        }
                                      },
                                      "jQxlhOe-RDilxY0sNIierQ": {
                                        "id": "jQxlhOe-RDilxY0sNIierQ",
                                        "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                        "name": "Holarchy Core Memory Operators",
                                        "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                        "type": "CM",
                                        "oaF3-dXwQkusjD3I2o9-8g": {
                                          "id": "oaF3-dXwQkusjD3I2o9-8g",
                                          "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                          "name": "OCD Array Length Equal to Value",
                                          "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                          "type": "TOP"
                                        },
                                        "2w7n6KxdR8mdIliePJesLQ": {
                                          "id": "2w7n6KxdR8mdIliePJesLQ",
                                          "vdid": "tljozSCr53fX-AmzURPyEg",
                                          "name": "OCD Compare Values",
                                          "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                          "type": "TOP"
                                        },
                                        "UeLs9PcASwuC7KR190eYhA": {
                                          "id": "UeLs9PcASwuC7KR190eYhA",
                                          "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                          "name": "OCD Boolean Flag Is Set",
                                          "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                          "type": "TOP"
                                        },
                                        "ggsavKiARsq7rjwn-lxdfA": {
                                          "id": "ggsavKiARsq7rjwn-lxdfA",
                                          "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                          "name": "OCD Namespace Is Greater Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "k7THIKKDQMKOac1Rxh9tEQ": {
                                          "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                          "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                          "name": "OCD Namespace Is Identical To Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "XxX_a1sQS1OlJbWAYfx6tQ": {
                                          "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                          "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                          "name": "OCD Namespace Is Less Than Value",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                          "type": "TOP"
                                        },
                                        "kD1PcgqYQlm7fJatNG2ZsA": {
                                          "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                          "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                          "name": "OCD Namespace Is Truthy",
                                          "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                          "type": "TOP"
                                        },
                                        "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                          "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                          "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                          "name": "OCD Read Namespace Indirect",
                                          "description": "Reads and returns the value of OCD namespace via path indirection.",
                                          "type": "ACT"
                                        },
                                        "5rFEDGLYRSiZCeChMnkCHQ": {
                                          "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                          "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                          "name": "OCD Boolean Flag Set",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                          "type": "ACT"
                                        },
                                        "_yxWfFLnTqqN-UxRdd7W5w": {
                                          "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                          "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                          "name": "OCD Boolean Flag Clear",
                                          "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                          "type": "ACT"
                                        }
                                      }
                                    },
                                    "c2cq2OE9SiaLKahL3Mk0KA": {
                                      "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                      "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                      "name": "Holarchy Base Cell Model",
                                      "description": "A collection of low-level building blocks.",
                                      "type": "CM",
                                      "U5iIpgd8SHCk7pvaciVLTQ": {
                                        "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                        "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                        "name": "Holarchy Base Memory Mailbox Flag",
                                        "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                        "type": "CM",
                                        "z_mTe02hSWmaM1iRO1pBeA": {
                                          "id": "z_mTe02hSWmaM1iRO1pBeA",
                                          "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                          "name": "Abstract Frame Latch",
                                          "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                          "type": "APM"
                                        },
                                        "iyvk_9vhRn2qvrjOes5v7Q": {
                                          "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                          "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                          "name": "Frame Latch: Write",
                                          "description": "Writes the value made observable by frame latch APM instance.",
                                          "type": "ACT"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "c65zrhI3Ejco_Sj9nPKc8g": {
              "7Hehip1DT5Kn0QEyEJMPhA": {
                "harnessRequest": {
                  "id": "7Hehip1DT5Kn0QEyEJMPhA",
                  "name": "Holistic App Client CellModel Test",
                  "description": "Instantiate HolisticAppClient CellModel through the CellModel test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "CellModel": {
                          "constructorRequest": {
                            "id": "JatYSE8JQj6GxT8AOsbssQ",
                            "vdid": "kgh37vAkod1IRW60gSIVmA",
                            "name": "Holistic App Client Kernel",
                            "description": "Provides core HTML5 client application runtime kernel services as an extensible celluar process.",
                            "cmat": {
                              "error": null,
                              "result": {
                                "INDEX_CM": {
                                  "type": "INDEX",
                                  "JatYSE8JQj6GxT8AOsbssQ": {
                                    "id": "JatYSE8JQj6GxT8AOsbssQ",
                                    "vdid": "kgh37vAkod1IRW60gSIVmA",
                                    "name": "Holistic App Client Kernel",
                                    "description": "Provides core HTML5 client application runtime kernel services as an extensible celluar process.",
                                    "type": "CM",
                                    "ENENGxq1TkCa6Sk9YXaLlw": {
                                      "id": "ENENGxq1TkCa6Sk9YXaLlw",
                                      "vdid": "rCwXeH2xZNdHwg_XOiLo1w",
                                      "name": "Holistic App Client Runtime",
                                      "description": "Holistic client application core runtime.",
                                      "type": "CM",
                                      "PPL45jw5RDWSMNsB97WIWg": {
                                        "id": "PPL45jw5RDWSMNsB97WIWg",
                                        "vdid": "wMdKGGmfJUznN092sBj2xw",
                                        "name": "Holistic Client App Runtime Kernel",
                                        "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                        "type": "APM"
                                      },
                                      "JwE4LMvpRGC3Jsg1RDjJ1Q": {
                                        "id": "JwE4LMvpRGC3Jsg1RDjJ1Q",
                                        "vdid": "ZERdngvXY8Z8kA5jLip_Hw",
                                        "name": "Holistic App Client Hook Events",
                                        "description": "Hooks DOM events on behalf of the Holistic App Client Runtime APM.",
                                        "type": "ACT"
                                      },
                                      "h-auSE-OSP2TG1jh_3EQ1Q": {
                                        "id": "h-auSE-OSP2TG1jh_3EQ1Q",
                                        "vdid": "8iKdC1jZzmzrTHnmTDpoKw",
                                        "name": "Holistic App Client Runtime Receive DOM Event",
                                        "description": "ControllerAction that signals the HolisticAppClientRuntime CM that the window.onload event has occurred.",
                                        "type": "ACT"
                                      },
                                      "RyMcv3MpTI-Co1EyVOIvlw": {
                                        "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                        "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                        "name": "Holarchy CML",
                                        "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                        "type": "CM",
                                        "MDVBKW89TvO9T62Ge7GmNg": {
                                          "id": "MDVBKW89TvO9T62Ge7GmNg",
                                          "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                          "name": "Holarchy Core",
                                          "description": "Holarchy core operations and actions for building derived CellModels.",
                                          "type": "CM",
                                          "orTbEFR_Q-u-qqEqP8OUBA": {
                                            "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                            "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                            "name": "Holarchy Core Cell",
                                            "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                            "type": "CM",
                                            "9tNY7o5GTUGH_xda2GhP-w": {
                                              "id": "9tNY7o5GTUGH_xda2GhP-w",
                                              "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                              "name": "Cell Process In Step Operator",
                                              "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                              "type": "TOP"
                                            },
                                            "DNAoE5L3R-mY6jLAF2S95A": {
                                              "id": "DNAoE5L3R-mY6jLAF2S95A",
                                              "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                              "name": "Holistic App Client Runtime Subprocess Action",
                                              "description": "Creates a cellular subprocess.",
                                              "type": "ACT"
                                            }
                                          },
                                          "RW8Y2O-kRNSv87yXT962wQ": {
                                            "id": "RW8Y2O-kRNSv87yXT962wQ",
                                            "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                            "name": "Holarchy Core Logic",
                                            "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                            "type": "CM",
                                            "YgABX95wR86GCYrYaDLISA": {
                                              "id": "YgABX95wR86GCYrYaDLISA",
                                              "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                              "name": "AND Transition Expression Operator",
                                              "description": "Returns Boolean true iff all suboperations return true.",
                                              "type": "TOP"
                                            },
                                            "0JIva4IFSm6Xm7i38g8uUA": {
                                              "id": "0JIva4IFSm6Xm7i38g8uUA",
                                              "vdid": "HyCocPERRAAEOSzTOspyaw",
                                              "name": "OR Transition Expression Operator",
                                              "description": "Returns Boolean true iff any suboperations return true.",
                                              "type": "TOP"
                                            },
                                            "TLSHkl73SO-utuzM7dyN2g": {
                                              "id": "TLSHkl73SO-utuzM7dyN2g",
                                              "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                              "name": "NOT Transition Expression Operator",
                                              "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                              "type": "TOP"
                                            },
                                            "e89cwnP4Qd6MocAhzdOJgw": {
                                              "id": "e89cwnP4Qd6MocAhzdOJgw",
                                              "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                              "name": "Always returns Boolean true unconditionally.",
                                              "description": "Always returns true.",
                                              "type": "TOP"
                                            }
                                          },
                                          "jQxlhOe-RDilxY0sNIierQ": {
                                            "id": "jQxlhOe-RDilxY0sNIierQ",
                                            "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                            "name": "Holarchy Core Memory Operators",
                                            "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                            "type": "CM",
                                            "oaF3-dXwQkusjD3I2o9-8g": {
                                              "id": "oaF3-dXwQkusjD3I2o9-8g",
                                              "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                              "name": "OCD Array Length Equal to Value",
                                              "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                              "type": "TOP"
                                            },
                                            "2w7n6KxdR8mdIliePJesLQ": {
                                              "id": "2w7n6KxdR8mdIliePJesLQ",
                                              "vdid": "tljozSCr53fX-AmzURPyEg",
                                              "name": "OCD Compare Values",
                                              "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                              "type": "TOP"
                                            },
                                            "UeLs9PcASwuC7KR190eYhA": {
                                              "id": "UeLs9PcASwuC7KR190eYhA",
                                              "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                              "name": "OCD Boolean Flag Is Set",
                                              "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                              "type": "TOP"
                                            },
                                            "ggsavKiARsq7rjwn-lxdfA": {
                                              "id": "ggsavKiARsq7rjwn-lxdfA",
                                              "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                              "name": "OCD Namespace Is Greater Than Value",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                              "type": "TOP"
                                            },
                                            "k7THIKKDQMKOac1Rxh9tEQ": {
                                              "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                              "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                              "name": "OCD Namespace Is Identical To Value",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                              "type": "TOP"
                                            },
                                            "XxX_a1sQS1OlJbWAYfx6tQ": {
                                              "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                              "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                              "name": "OCD Namespace Is Less Than Value",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                              "type": "TOP"
                                            },
                                            "kD1PcgqYQlm7fJatNG2ZsA": {
                                              "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                              "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                              "name": "OCD Namespace Is Truthy",
                                              "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                              "type": "TOP"
                                            },
                                            "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                              "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                              "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                              "name": "OCD Read Namespace Indirect",
                                              "description": "Reads and returns the value of OCD namespace via path indirection.",
                                              "type": "ACT"
                                            },
                                            "5rFEDGLYRSiZCeChMnkCHQ": {
                                              "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                              "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                              "name": "OCD Boolean Flag Set",
                                              "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                              "type": "ACT"
                                            },
                                            "_yxWfFLnTqqN-UxRdd7W5w": {
                                              "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                              "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                              "name": "OCD Boolean Flag Clear",
                                              "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                              "type": "ACT"
                                            }
                                          }
                                        },
                                        "c2cq2OE9SiaLKahL3Mk0KA": {
                                          "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                          "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                          "name": "Holarchy Base Cell Model",
                                          "description": "A collection of low-level building blocks.",
                                          "type": "CM",
                                          "U5iIpgd8SHCk7pvaciVLTQ": {
                                            "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                            "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                            "name": "Holarchy Base Memory Mailbox Flag",
                                            "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                            "type": "CM",
                                            "z_mTe02hSWmaM1iRO1pBeA": {
                                              "id": "z_mTe02hSWmaM1iRO1pBeA",
                                              "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                              "name": "Abstract Frame Latch",
                                              "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                              "type": "APM"
                                            },
                                            "iyvk_9vhRn2qvrjOes5v7Q": {
                                              "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                              "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                              "name": "Frame Latch: Write",
                                              "description": "Writes the value made observable by frame latch APM instance.",
                                              "type": "ACT"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "qzMWhMstQ4Ki06O75y5hMA": {
                                      "id": "qzMWhMstQ4Ki06O75y5hMA",
                                      "vdid": "y1PAdwv_lpQOn16GN-JevA",
                                      "name": "DOM Location Processor",
                                      "description": "Abstracts monitoring and setting the window.location and hashroute.",
                                      "type": "CM",
                                      "-1Ptaq_zTUa8Gfv_3ODtDg": {
                                        "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                                        "vdid": "dhd1UlVDm9EWryeg4T_FJw",
                                        "name": "DOM Location Processor",
                                        "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                        "type": "APM"
                                      },
                                      "TlGPCf7uSf2cZMGZCcU85A": {
                                        "id": "TlGPCf7uSf2cZMGZCcU85A",
                                        "vdid": "134XV9KkzwK2X1tD0xJbBA",
                                        "name": "DOM Client Location Proccessor: Initialize",
                                        "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj.",
                                        "type": "ACT"
                                      },
                                      "peTmTek_SB64-ofd_PSGjg": {
                                        "id": "peTmTek_SB64-ofd_PSGjg",
                                        "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                                        "name": "DOM Client Location Processor: 'hashchange'",
                                        "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details.",
                                        "type": "ACT"
                                      }
                                    },
                                    "vrmv3WMRQXql7Bx3DDEIDw": {
                                      "id": "vrmv3WMRQXql7Bx3DDEIDw",
                                      "vdid": "KCkDSzCkBWX7sXu-2UL7yg",
                                      "name": "Holistic Client App View Manager",
                                      "description": "Provides management of client view cells in a holistic client app.",
                                      "type": "CM",
                                      "Hsu-43zBRgqHItCPWPiBng": {
                                        "id": "Hsu-43zBRgqHItCPWPiBng",
                                        "vdid": "OWua2vzX9aOS549fLUzD2g",
                                        "name": "Holistic Client App View Processor",
                                        "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                        "type": "APM"
                                      }
                                    },
                                    "UX7JquBhSZO0QyEk7u9-sw": {
                                      "id": "UX7JquBhSZO0QyEk7u9-sw",
                                      "vdid": "ORpIKRkCxGDRpRZjC99eeQ",
                                      "name": "Holistic App Client Display Adapter",
                                      "description": "Manages the DOM display via @encapsule/d2r2 and React.",
                                      "type": "CM",
                                      "IxoJ83u0TXmG7PLUYBvsyg": {
                                        "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                        "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                        "name": "d2r2/React Client Display Adaptor",
                                        "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                        "type": "APM"
                                      },
                                      "ENIOOasYSdmJj_RXjA__hQ": {
                                        "id": "ENIOOasYSdmJj_RXjA__hQ",
                                        "vdid": "CJYfMSZautkxLcK565ZDTg",
                                        "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                        "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD.",
                                        "type": "ACT"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "FAvFLw0XQN6yomNs13r21g": {
                        "7Hehip1DT5Kn0QEyEJMPhA": {
                          "isValid": true,
                          "summary": {
                            "counts": {
                              "vertices": 43,
                              "edges": 81,
                              "artifacts": {
                                "cm": 12,
                                "apm": 5,
                                "top": 12,
                                "act": 10
                              }
                            }
                          },
                          "opcConfig": {
                            "error": null,
                            "result": {
                              "apm": [
                                {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                  "name": "Abstract Frame Latch",
                                  "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                  "process": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Abstract Frame Latch] APM Digraph",
                                    "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "Frame latch value has not changed since last signalled update.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                                  "vdid": "dhd1UlVDm9EWryeg4T_FJw",
                                  "name": "DOM Location Processor",
                                  "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                  "process": {
                                    "name": "[-1Ptaq_zTUa8Gfv_3ODtDg::DOM Location Processor] APM Digraph",
                                    "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Registering hashchange DOM event callback.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "DOMLocationProcessor": {
                                                            "initialize": true
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": [
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "DOMLocationProcessor": {
                                                            "notifyEvent": {
                                                              "hashchange": true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait",
                                        "p": {
                                          "description": "Waiting for DOM hashchange event.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "update",
                                        "p": {
                                          "description": "The observable browser location has been updated. Information about the current location, and who set it is available in this model's output namespace.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#._private.updateObservers"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "cell": {
                                                    "atStep": {
                                                      "path": "#.//.//.//.//",
                                                      "step": "boot1_start_kernel"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait",
                                          "v": "update"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#._private.updateObservers"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "update",
                                          "v": "wait"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "PPL45jw5RDWSMNsB97WIWg",
                                  "vdid": "wMdKGGmfJUznN092sBj2xw",
                                  "name": "Holistic Client App Runtime Kernel",
                                  "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                  "process": {
                                    "name": "[PPL45jw5RDWSMNsB97WIWg::Holistic Client App Runtime Kernel] APM Digraph",
                                    "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot0_hook_events",
                                        "p": {
                                          "description": "Hooking DOM events pertinent to tracking the lifecycle of this instance of the client application running inside the user's browser.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "HolisticAppRuntime": {
                                                          "actions": {
                                                            "_private": {
                                                              "hookEvents": true
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot1_start_kernel",
                                        "p": {
                                          "description": "Start core client app kernel subsystems.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "cell": {
                                                        "process": {
                                                          "create": {
                                                            "apmBindingPath": "#.PPL45jw5RDWSMNsB97WIWg._private.subprocesses.viewProcessor",
                                                            "ocdInitData": {}
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot2_query_derived",
                                        "p": {
                                          "description": "Query the derived client app for information required to initialize the core client app runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot3_wait_kernel",
                                        "p": {
                                          "description": "Wait for the core client app kernel subsystems to become available.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot4_config_derived",
                                        "p": {
                                          "description": "Configure the derived application runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot5_wait_browser",
                                        "p": {
                                          "description": "Wait for the browser to finish loading the HTML document and its referenced external resources (scripts, CSS, images, fonts, JSON, ...",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot6_deserialize_app",
                                        "p": {
                                          "description": "Access the boot ROM embedded in the hosting HTML document to get the suspended process state of the derived application.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot7_load_app_memory",
                                        "p": {
                                          "description": "Load the deserialized app into the OCD to initialize the client app runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot8_init_app_view",
                                        "p": {
                                          "description": "Initialize the view and d2r2/React display models. Performs a d2r2/ReactDOM.hydrate operation ultimately.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "boot9_start_app",
                                        "p": {
                                          "description": "Start the client application runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "running",
                                        "p": {
                                          "description": "The client application is online and awaiting input from external actors.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "error_process_boot_failure",
                                        "p": {
                                          "description": "Client application process boot failed due to unrecoverable error(s).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "error_process_resume_failure",
                                        "p": {
                                          "description": "Client application process resume failured due to unrecoverable error(s).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "error_process_runtime_failure",
                                        "p": {
                                          "description": "Client application process crashed at runtime due to unexpected and unrecoverable error(s).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "boot0_hook_events"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot0_hook_events",
                                          "v": "boot1_start_kernel"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot1_start_kernel",
                                          "v": "boot2_query_derived"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot2_query_derived",
                                          "v": "boot3_wait_kernel"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot3_wait_kernel",
                                          "v": "boot4_config_derived"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot4_config_derived",
                                          "v": "boot5_wait_browser"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "boot5_wait_browser",
                                          "v": "boot6_deserialize_app"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.PPL45jw5RDWSMNsB97WIWg._private.windowLoaded"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "Hsu-43zBRgqHItCPWPiBng",
                                  "vdid": "OWua2vzX9aOS549fLUzD2g",
                                  "name": "Holistic Client App View Processor",
                                  "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                  "process": {
                                    "name": "[Hsu-43zBRgqHItCPWPiBng::Holistic Client App View Processor] APM Digraph",
                                    "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Performing initialization actions.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_invariants",
                                        "p": {
                                          "description": "Waiting for invariant inputs to be satisfied.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_app_config",
                                        "p": {
                                          "description": "Waiting for the client application runtime to be configured.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_server_route",
                                        "p": {
                                          "description": "Waiting for the DOM Location Processor to signal the client application's server-specified route (location.href).",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_app_resume",
                                        "p": {
                                          "description": "Waiting for the App Client Runtime to resume the client application runtime.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rehydrate",
                                        "p": {
                                          "description": "Use data from the server to rehydate the server-rendered d2r2/React view.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "ready",
                                        "p": {
                                          "description": "View is interactive and up-to-date.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "update",
                                        "p": {
                                          "description": "Update the client application's view model to incorporate changes in underlying data and model state.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "render",
                                        "p": {
                                          "description": "Send the updated view to the d2r2/React Display Adaptor.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait_invariants"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_invariants",
                                          "v": "wait_app_config"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                  "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                  "name": "d2r2/React Client Display Adaptor",
                                  "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                  "process": {
                                    "name": "[IxoJ83u0TXmG7PLUYBvsyg::d2r2/React Client Display Adaptor] APM Digraph",
                                    "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default APM process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialize",
                                        "p": {
                                          "description": "Initialize",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_invariants",
                                        "p": {
                                          "description": "Waiting for d2r2 ComponentRouter instance (how to render), and DOM element (where to render) invariants to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "wait_inputs",
                                        "p": {
                                          "description": "Invariants have been satisfied. Waiting for initial d2d2 ComponentRouter render data context to be specified.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "initialized",
                                        "p": {
                                          "description": "Preparing for initial render operation. Determining if we rehyrdate server-rendered view. Or, replace it.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rehydrate",
                                        "p": {
                                          "description": "Rehydrating the specified d2r2 ComponentRouter render data context to reconstruct server-rendered d2r2 ComponentRouter render data context in the client application.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "hydrate"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "render",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context to refresh layout and client-side React component mountings.",
                                          "actions": {
                                            "enter": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "actions": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.private.renderPending"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holistic": {
                                                  "app": {
                                                    "client": {
                                                      "cm": {
                                                        "actions": {
                                                          "d2r2ReactClientDisplayAdaptor": {
                                                            "operation": "render"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "rendering",
                                        "p": {
                                          "description": "Rendering the specified d2r2 ComponentRouter render data context. Please wait for the operation to complete.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      },
                                      {
                                        "u": "ready",
                                        "p": {
                                          "description": "Waiting for next clock signal to re-render client application view.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "initialize"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "cell": {
                                                    "atStep": {
                                                      "path": "#.//.//.//.//",
                                                      "step": "boot1_start_kernel"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialize",
                                          "v": "wait_invariants"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_invariants",
                                          "v": "wait_inputs"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "and": [
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.ComponentRouter"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "holarchy": {
                                                  "cm": {
                                                    "operators": {
                                                      "ocd": {
                                                        "isNamespaceTruthy": {
                                                          "path": "#.inputs.DOMElement"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "wait_inputs",
                                          "v": "initialized"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "rehydrate"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "ocd": {
                                                    "isNamespaceTruthy": {
                                                      "path": "#.inputs.clock.value.options.rehydrate"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "initialized",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 1,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rehydrate",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "render",
                                          "v": "rendering"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "rendering",
                                          "v": "ready"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "not": {
                                              "holarchy": {
                                                "cm": {
                                                  "operators": {
                                                    "ocd": {
                                                      "isNamespaceTruthy": {
                                                        "path": "#.private.renderPending"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "ready",
                                          "v": "render"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "cm": {
                                                "operators": {
                                                  "opmi": {
                                                    "atStep": {
                                                      "path": "#.inputs.clock",
                                                      "step": "updated"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "top": [
                                {
                                  "id": "YgABX95wR86GCYrYaDLISA",
                                  "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                  "name": "AND Transition Expression Operator",
                                  "description": "Returns Boolean true iff all suboperations return true."
                                },
                                {
                                  "id": "e89cwnP4Qd6MocAhzdOJgw",
                                  "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                  "name": "Always returns Boolean true unconditionally.",
                                  "description": "Always returns true."
                                },
                                {
                                  "id": "9tNY7o5GTUGH_xda2GhP-w",
                                  "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                  "name": "Cell Process In Step Operator",
                                  "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step."
                                },
                                {
                                  "id": "TLSHkl73SO-utuzM7dyN2g",
                                  "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                  "name": "NOT Transition Expression Operator",
                                  "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to)."
                                },
                                {
                                  "id": "oaF3-dXwQkusjD3I2o9-8g",
                                  "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                  "name": "OCD Array Length Equal to Value",
                                  "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect)."
                                },
                                {
                                  "id": "UeLs9PcASwuC7KR190eYhA",
                                  "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                  "name": "OCD Boolean Flag Is Set",
                                  "description": "Returns Boolean true iff the indicated Boolean flag namespace is true."
                                },
                                {
                                  "id": "2w7n6KxdR8mdIliePJesLQ",
                                  "vdid": "tljozSCr53fX-AmzURPyEg",
                                  "name": "OCD Compare Values",
                                  "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator."
                                },
                                {
                                  "id": "ggsavKiARsq7rjwn-lxdfA",
                                  "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                  "name": "OCD Namespace Is Greater Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                  "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                  "name": "OCD Namespace Is Identical To Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                  "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                  "name": "OCD Namespace Is Less Than Value",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only."
                                },
                                {
                                  "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                  "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                  "name": "OCD Namespace Is Truthy",
                                  "description": "Returns Boolean true iff the indicated OCD namespace is truthy."
                                },
                                {
                                  "id": "0JIva4IFSm6Xm7i38g8uUA",
                                  "vdid": "HyCocPERRAAEOSzTOspyaw",
                                  "name": "OR Transition Expression Operator",
                                  "description": "Returns Boolean true iff any suboperations return true."
                                }
                              ],
                              "act": [
                                {
                                  "id": "TlGPCf7uSf2cZMGZCcU85A",
                                  "vdid": "134XV9KkzwK2X1tD0xJbBA",
                                  "name": "DOM Client Location Proccessor: Initialize",
                                  "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj."
                                },
                                {
                                  "id": "peTmTek_SB64-ofd_PSGjg",
                                  "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                                  "name": "DOM Client Location Processor: 'hashchange'",
                                  "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details."
                                },
                                {
                                  "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                  "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                  "name": "Frame Latch: Write",
                                  "description": "Writes the value made observable by frame latch APM instance."
                                },
                                {
                                  "id": "JwE4LMvpRGC3Jsg1RDjJ1Q",
                                  "vdid": "ZERdngvXY8Z8kA5jLip_Hw",
                                  "name": "Holistic App Client Hook Events",
                                  "description": "Hooks DOM events on behalf of the Holistic App Client Runtime APM."
                                },
                                {
                                  "id": "h-auSE-OSP2TG1jh_3EQ1Q",
                                  "vdid": "8iKdC1jZzmzrTHnmTDpoKw",
                                  "name": "Holistic App Client Runtime Receive DOM Event",
                                  "description": "ControllerAction that signals the HolisticAppClientRuntime CM that the window.onload event has occurred."
                                },
                                {
                                  "id": "DNAoE5L3R-mY6jLAF2S95A",
                                  "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                  "name": "Holistic App Client Runtime Subprocess Action",
                                  "description": "Creates a cellular subprocess."
                                },
                                {
                                  "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                  "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                  "name": "OCD Boolean Flag Clear",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value false."
                                },
                                {
                                  "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                  "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                  "name": "OCD Boolean Flag Set",
                                  "description": "Set the Boolean-type OCD namespace specified by path to value true."
                                },
                                {
                                  "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                  "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                  "name": "OCD Read Namespace Indirect",
                                  "description": "Reads and returns the value of OCD namespace via path indirection."
                                },
                                {
                                  "id": "ENIOOasYSdmJj_RXjA__hQ",
                                  "vdid": "CJYfMSZautkxLcK565ZDTg",
                                  "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                  "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD."
                                }
                              ]
                            }
                          },
                          "cmat": {
                            "error": null,
                            "result": {
                              "INDEX_CM": {
                                "type": "INDEX",
                                "JatYSE8JQj6GxT8AOsbssQ": {
                                  "id": "JatYSE8JQj6GxT8AOsbssQ",
                                  "vdid": "kgh37vAkod1IRW60gSIVmA",
                                  "name": "Holistic App Client Kernel",
                                  "description": "Provides core HTML5 client application runtime kernel services as an extensible celluar process.",
                                  "type": "CM",
                                  "ENENGxq1TkCa6Sk9YXaLlw": {
                                    "id": "ENENGxq1TkCa6Sk9YXaLlw",
                                    "vdid": "rCwXeH2xZNdHwg_XOiLo1w",
                                    "name": "Holistic App Client Runtime",
                                    "description": "Holistic client application core runtime.",
                                    "type": "CM",
                                    "PPL45jw5RDWSMNsB97WIWg": {
                                      "id": "PPL45jw5RDWSMNsB97WIWg",
                                      "vdid": "wMdKGGmfJUznN092sBj2xw",
                                      "name": "Holistic Client App Runtime Kernel",
                                      "description": "This model manages, tracks, and controls the lifecycle of the client application.",
                                      "type": "APM"
                                    },
                                    "JwE4LMvpRGC3Jsg1RDjJ1Q": {
                                      "id": "JwE4LMvpRGC3Jsg1RDjJ1Q",
                                      "vdid": "ZERdngvXY8Z8kA5jLip_Hw",
                                      "name": "Holistic App Client Hook Events",
                                      "description": "Hooks DOM events on behalf of the Holistic App Client Runtime APM.",
                                      "type": "ACT"
                                    },
                                    "h-auSE-OSP2TG1jh_3EQ1Q": {
                                      "id": "h-auSE-OSP2TG1jh_3EQ1Q",
                                      "vdid": "8iKdC1jZzmzrTHnmTDpoKw",
                                      "name": "Holistic App Client Runtime Receive DOM Event",
                                      "description": "ControllerAction that signals the HolisticAppClientRuntime CM that the window.onload event has occurred.",
                                      "type": "ACT"
                                    },
                                    "RyMcv3MpTI-Co1EyVOIvlw": {
                                      "id": "RyMcv3MpTI-Co1EyVOIvlw",
                                      "vdid": "jvDAuukUNBDWiEOkP_jMiw",
                                      "name": "Holarchy CML",
                                      "description": "Holarchy Cell Model Library (CML) provides cellular process primitive operations, actions, and cell models for re-use in higher-order cell models.",
                                      "type": "CM",
                                      "MDVBKW89TvO9T62Ge7GmNg": {
                                        "id": "MDVBKW89TvO9T62Ge7GmNg",
                                        "vdid": "Fv5DQJkP3LlV0ZTBBl7ewg",
                                        "name": "Holarchy Core",
                                        "description": "Holarchy core operations and actions for building derived CellModels.",
                                        "type": "CM",
                                        "orTbEFR_Q-u-qqEqP8OUBA": {
                                          "id": "orTbEFR_Q-u-qqEqP8OUBA",
                                          "vdid": "FkVD0gBsGz-CWFexH1mfQQ",
                                          "name": "Holarchy Core Cell",
                                          "description": "Shared low-level TransitionOperator and ControllerAction's for interacting with cell processes running inside of an ObservableProcessController instance.",
                                          "type": "CM",
                                          "9tNY7o5GTUGH_xda2GhP-w": {
                                            "id": "9tNY7o5GTUGH_xda2GhP-w",
                                            "vdid": "zmPeG6lSvXidCjr_XyENrQ",
                                            "name": "Cell Process In Step Operator",
                                            "description": "Returns Boolean true iff the indicated APM instance is in the indicated process step.",
                                            "type": "TOP"
                                          },
                                          "DNAoE5L3R-mY6jLAF2S95A": {
                                            "id": "DNAoE5L3R-mY6jLAF2S95A",
                                            "vdid": "wEdiiwOhWCBVJKi8E838yg",
                                            "name": "Holistic App Client Runtime Subprocess Action",
                                            "description": "Creates a cellular subprocess.",
                                            "type": "ACT"
                                          }
                                        },
                                        "RW8Y2O-kRNSv87yXT962wQ": {
                                          "id": "RW8Y2O-kRNSv87yXT962wQ",
                                          "vdid": "mlLkUyUw6k6a4xH_0jOWJw",
                                          "name": "Holarchy Core Logic",
                                          "description": "A collection of TranitionOperator plug-ins that implement generic logic functions AND, OR, NOT, TRUE.",
                                          "type": "CM",
                                          "YgABX95wR86GCYrYaDLISA": {
                                            "id": "YgABX95wR86GCYrYaDLISA",
                                            "vdid": "5Wiq9QRF5UgklCeaWl6BWQ",
                                            "name": "AND Transition Expression Operator",
                                            "description": "Returns Boolean true iff all suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "0JIva4IFSm6Xm7i38g8uUA": {
                                            "id": "0JIva4IFSm6Xm7i38g8uUA",
                                            "vdid": "HyCocPERRAAEOSzTOspyaw",
                                            "name": "OR Transition Expression Operator",
                                            "description": "Returns Boolean true iff any suboperations return true.",
                                            "type": "TOP"
                                          },
                                          "TLSHkl73SO-utuzM7dyN2g": {
                                            "id": "TLSHkl73SO-utuzM7dyN2g",
                                            "vdid": "MLN5p6fYf0FFTMRIix5okQ",
                                            "name": "NOT Transition Expression Operator",
                                            "description": "Returns Boolean true iff the suboperator returns false (i.e. it logically complements or inverts whatever operator it's applied to).",
                                            "type": "TOP"
                                          },
                                          "e89cwnP4Qd6MocAhzdOJgw": {
                                            "id": "e89cwnP4Qd6MocAhzdOJgw",
                                            "vdid": "Kusn29BqLDgEihAN7rnt-w",
                                            "name": "Always returns Boolean true unconditionally.",
                                            "description": "Always returns true.",
                                            "type": "TOP"
                                          }
                                        },
                                        "jQxlhOe-RDilxY0sNIierQ": {
                                          "id": "jQxlhOe-RDilxY0sNIierQ",
                                          "vdid": "DBtb1VQvd9xXX2QbPHHsow",
                                          "name": "Holarchy Core Memory Operators",
                                          "description": "A collection of TransitionOperator plug-ins that perform logical comparisons operatations on cell processs memory.",
                                          "type": "CM",
                                          "oaF3-dXwQkusjD3I2o9-8g": {
                                            "id": "oaF3-dXwQkusjD3I2o9-8g",
                                            "vdid": "rR6j6vgEL4edaMFT9p0Kug",
                                            "name": "OCD Array Length Equal to Value",
                                            "description": "Returns Boolean true iff the length of the array stored at OCD path equals the specified numerical value (direct or indirect).",
                                            "type": "TOP"
                                          },
                                          "2w7n6KxdR8mdIliePJesLQ": {
                                            "id": "2w7n6KxdR8mdIliePJesLQ",
                                            "vdid": "tljozSCr53fX-AmzURPyEg",
                                            "name": "OCD Compare Values",
                                            "description": "Returns Boolean true iff operand A and B values compare using the indicated comparison operator.",
                                            "type": "TOP"
                                          },
                                          "UeLs9PcASwuC7KR190eYhA": {
                                            "id": "UeLs9PcASwuC7KR190eYhA",
                                            "vdid": "AvEsDNEdHzM-EAtRzKGrbg",
                                            "name": "OCD Boolean Flag Is Set",
                                            "description": "Returns Boolean true iff the indicated Boolean flag namespace is true.",
                                            "type": "TOP"
                                          },
                                          "ggsavKiARsq7rjwn-lxdfA": {
                                            "id": "ggsavKiARsq7rjwn-lxdfA",
                                            "vdid": "zo88N4oEjk34PxGoXmyTUA",
                                            "name": "OCD Namespace Is Greater Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is greater than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "k7THIKKDQMKOac1Rxh9tEQ": {
                                            "id": "k7THIKKDQMKOac1Rxh9tEQ",
                                            "vdid": "uinvGdItUIySJ4gEw7c2uQ",
                                            "name": "OCD Namespace Is Identical To Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is identical (i.e. strictly equal (===)) to the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "XxX_a1sQS1OlJbWAYfx6tQ": {
                                            "id": "XxX_a1sQS1OlJbWAYfx6tQ",
                                            "vdid": "6DCD8gfsCpkJ1sJ50kP1xg",
                                            "name": "OCD Namespace Is Less Than Value",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is less than the indicated value. Limited to number and string value comparisons only.",
                                            "type": "TOP"
                                          },
                                          "kD1PcgqYQlm7fJatNG2ZsA": {
                                            "id": "kD1PcgqYQlm7fJatNG2ZsA",
                                            "vdid": "cNihhVrtDPl_5j7cSfcRug",
                                            "name": "OCD Namespace Is Truthy",
                                            "description": "Returns Boolean true iff the indicated OCD namespace is truthy.",
                                            "type": "TOP"
                                          },
                                          "Ve_kEFkGSMSgOqUWu9Yo_w": {
                                            "id": "Ve_kEFkGSMSgOqUWu9Yo_w",
                                            "vdid": "DPKyvFjaLnWwv-4AP4IYQw",
                                            "name": "OCD Read Namespace Indirect",
                                            "description": "Reads and returns the value of OCD namespace via path indirection.",
                                            "type": "ACT"
                                          },
                                          "5rFEDGLYRSiZCeChMnkCHQ": {
                                            "id": "5rFEDGLYRSiZCeChMnkCHQ",
                                            "vdid": "fVjcSINW5Ps8rS2jRnBhLQ",
                                            "name": "OCD Boolean Flag Set",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value true.",
                                            "type": "ACT"
                                          },
                                          "_yxWfFLnTqqN-UxRdd7W5w": {
                                            "id": "_yxWfFLnTqqN-UxRdd7W5w",
                                            "vdid": "3DsbArVA3LNYWuE7ucmIpQ",
                                            "name": "OCD Boolean Flag Clear",
                                            "description": "Set the Boolean-type OCD namespace specified by path to value false.",
                                            "type": "ACT"
                                          }
                                        }
                                      },
                                      "c2cq2OE9SiaLKahL3Mk0KA": {
                                        "id": "c2cq2OE9SiaLKahL3Mk0KA",
                                        "vdid": "ia-9dXeNHA8FVhIixkkTjw",
                                        "name": "Holarchy Base Cell Model",
                                        "description": "A collection of low-level building blocks.",
                                        "type": "CM",
                                        "U5iIpgd8SHCk7pvaciVLTQ": {
                                          "id": "U5iIpgd8SHCk7pvaciVLTQ",
                                          "vdid": "TEoUGKUxJpCtMjmiWRgR1Q",
                                          "name": "Holarchy Base Memory Mailbox Flag",
                                          "description": "A primitive cell process that signals (via process step transition) when some actor has put a message in the mailbox namespace.",
                                          "type": "CM",
                                          "z_mTe02hSWmaM1iRO1pBeA": {
                                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                                            "vdid": "9jOpGkKIURycWGDA5Nnxsg",
                                            "name": "Abstract Frame Latch",
                                            "description": "Frame latch provides a way to create a value and attach a model that transitions between waiting and updated process steps whenever the value is written. This allows consumers of the value (other OPM typically) to monitor frame latch process to know when the value is updated so that they can read the new value and do whatever they need to with it.",
                                            "type": "APM"
                                          },
                                          "iyvk_9vhRn2qvrjOes5v7Q": {
                                            "id": "iyvk_9vhRn2qvrjOes5v7Q",
                                            "vdid": "Mm1h1iJOaeH77h6HYA9wxg",
                                            "name": "Frame Latch: Write",
                                            "description": "Writes the value made observable by frame latch APM instance.",
                                            "type": "ACT"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "qzMWhMstQ4Ki06O75y5hMA": {
                                    "id": "qzMWhMstQ4Ki06O75y5hMA",
                                    "vdid": "y1PAdwv_lpQOn16GN-JevA",
                                    "name": "DOM Location Processor",
                                    "description": "Abstracts monitoring and setting the window.location and hashroute.",
                                    "type": "CM",
                                    "-1Ptaq_zTUa8Gfv_3ODtDg": {
                                      "id": "-1Ptaq_zTUa8Gfv_3ODtDg",
                                      "vdid": "dhd1UlVDm9EWryeg4T_FJw",
                                      "name": "DOM Location Processor",
                                      "description": "Hooks and monitors DOM location events and publishes them via an observable frame latch. Also, provids programmatic control over DOM location.",
                                      "type": "APM"
                                    },
                                    "TlGPCf7uSf2cZMGZCcU85A": {
                                      "id": "TlGPCf7uSf2cZMGZCcU85A",
                                      "vdid": "134XV9KkzwK2X1tD0xJbBA",
                                      "name": "DOM Client Location Proccessor: Initialize",
                                      "description": "Adds a listener to the brower's 'hashchange' event and redirects subsequent event callbacks to the ControllerAction peTmTek_SB64-ofd_PSGj.",
                                      "type": "ACT"
                                    },
                                    "peTmTek_SB64-ofd_PSGjg": {
                                      "id": "peTmTek_SB64-ofd_PSGjg",
                                      "vdid": "hkoKsJ4KqLqhFDM8MG8ACg",
                                      "name": "DOM Client Location Processor: 'hashchange'",
                                      "description": "Accepts info about the 'hashchange' event and encapsulates the details of updating the DOM Client Locaiton Processor APM memory to record the event details.",
                                      "type": "ACT"
                                    }
                                  },
                                  "vrmv3WMRQXql7Bx3DDEIDw": {
                                    "id": "vrmv3WMRQXql7Bx3DDEIDw",
                                    "vdid": "KCkDSzCkBWX7sXu-2UL7yg",
                                    "name": "Holistic Client App View Manager",
                                    "description": "Provides management of client view cells in a holistic client app.",
                                    "type": "CM",
                                    "Hsu-43zBRgqHItCPWPiBng": {
                                      "id": "Hsu-43zBRgqHItCPWPiBng",
                                      "vdid": "OWua2vzX9aOS549fLUzD2g",
                                      "name": "Holistic Client App View Processor",
                                      "description": "Encapsulates the high-level details of selecting, creating, and updating d2r2/React Client Display Adaptor update signals.",
                                      "type": "APM"
                                    }
                                  },
                                  "UX7JquBhSZO0QyEk7u9-sw": {
                                    "id": "UX7JquBhSZO0QyEk7u9-sw",
                                    "vdid": "ORpIKRkCxGDRpRZjC99eeQ",
                                    "name": "Holistic App Client Display Adapter",
                                    "description": "Manages the DOM display via @encapsule/d2r2 and React.",
                                    "type": "CM",
                                    "IxoJ83u0TXmG7PLUYBvsyg": {
                                      "id": "IxoJ83u0TXmG7PLUYBvsyg",
                                      "vdid": "guj8_A0Z2pydtetwzFwaqA",
                                      "name": "d2r2/React Client Display Adaptor",
                                      "description": "Manages the details of initializing and dynamically updating the client application view (DOM display surface) via @encapsule/d2r2 and Facebook React.",
                                      "type": "APM"
                                    },
                                    "ENIOOasYSdmJj_RXjA__hQ": {
                                      "id": "ENIOOasYSdmJj_RXjA__hQ",
                                      "vdid": "CJYfMSZautkxLcK565ZDTg",
                                      "name": "d2r2/React Client Display Adaptor: Rydrate/Render",
                                      "description": "Rehydrate and/or render/re-render client application view via d2r2/React transport using context and render data obtained from specified input paths in the OCD.",
                                      "type": "ACT"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  }
}
