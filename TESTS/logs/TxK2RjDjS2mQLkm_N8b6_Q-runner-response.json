{
  "error": null,
  "result": {
    "XkT3fzhYT0izLU_P2WF54Q": {
      "summary": {
        "requests": 41,
        "runnerStats": {
          "dispatched": [
            "197ZsgbfRRGGMWqhwmaBDg",
            "4nw2B9oVQYm1ZspZqotrRA",
            "6TPB7tz4TQaGJYaRAhl_gQ",
            "8167V4JrSc-47BMNONdxvQ",
            "8UqseWhbQLSnDnKqu6eVpA",
            "AhfYIOp_RQmS-a37emkj9A",
            "ChcuyPLCSQCsICTprPzfog",
            "DipB21oZR5ihBCYESC5HWw",
            "ElMglky8TBGkzkd6W4690A",
            "ErHlg9R3SSaonNJr4mBi-g",
            "FxMOqQPARcGcMZ24x2tq7A",
            "H2zMrBw4TBie5A2mwH4BRg",
            "HwB8EphzRkSG7AeoISMctQ",
            "IRyR4YazRuWiZp9Rzj6-WA",
            "LC56jkxeQJ2mgWfwGklLEQ",
            "Pe4ks7bQQ9KQee1T8qTRHw",
            "QvEwWTkbT8G_SQsmWmg2zQ",
            "T-apDENPTAO6iQShA-2qBQ",
            "UHqiKKLkTMmLBGXI4lRxEA",
            "VwWYI4ReSTSfqSnoVXXC-w",
            "VxYuiGoHRfuKRHp7PBik7Q",
            "X5zbSBkaQeG6Wft5cGVRwg",
            "YdzP0ZKMTme24BBJcyKevA",
            "ZbwxkWJgTEKjxXpYX0_h7Q",
            "ak8rhTiORTWXueau74RlHA",
            "cQ3Z1fhsTICqkY3uKQXaFQ",
            "dirl1VuNQCmBrzbJXWMTtA",
            "fzc39RvNTLmHF5UNn_-Fng",
            "gwtkQR51TYm93K32K6QHNA",
            "iQ5RngZ0QNyH67mVrlwo4w",
            "juolo4dqSgKdLEYLoHJJ1Q",
            "l_P652EhQU6_z7afrV-PMQ",
            "nCoUIS0RTlmuKUSpimee7A",
            "np4M1LDWSyeNXOmFYJulhA",
            "rxFiX7H-TDG0GsxqtRekoA",
            "sBB6rshGQu2f7S5rA2x9eg",
            "sO15Cox_SVqcCgyrOllAwQ",
            "stn1B2JRSkOkFxuyejzGjQ",
            "uZN6-qpIQO6CkwmLDWtMCw",
            "waM_L9rTT6ySTY4ja__K3g"
          ],
          "rejected": [
            "zxKqk_YOTme-e0AExJUhmg"
          ],
          "errors": [
            "UHqiKKLkTMmLBGXI4lRxEA",
            "ak8rhTiORTWXueau74RlHA",
            "cQ3Z1fhsTICqkY3uKQXaFQ"
          ]
        },
        "runnerEval": {
          "neutral": [],
          "pass": {
            "expected": [],
            "actual": []
          },
          "fail": {
            "expected": [],
            "actual": []
          }
        }
      },
      "harnessEvalDescriptors": [
        {
          "dosRgxmiR66ongCbJB78ow": {
            "000000000000000000": {
              "zxKqk_YOTme-e0AExJUhmg": {
                "harnessRequest": {
                  "id": "zxKqk_YOTme-e0AExJUhmg",
                  "name": "Bad message test #1",
                  "description": "Send a message that we know there's no harness registered to handle.",
                  "vectorRequest": {
                    "bogusMessage": {
                      "message": "Hello, is anyone there?"
                    }
                  }
                },
                "harnessResponse": {
                  "error": "Runner cannot locate a harness filter to process this request type: Filter [2gJUyOugIdK5gEqhu1OWug::Discriminator Filter] failed while performing main operation. Unrecognized request format. Request signature must match one of filter set {[DUGjLpXu6s7PYw43guW2jg::Harness Proxy::<F1zguurrS9-fcdvLk7TCrg::Holodeck Runner Test Harness #1>], [SaPQhpVtKhQvT4xWAqtmXg::Harness Proxy::<X2q-YtvCTrWx7csHq8R8Tw::TransitionOperator Harness>], [V4rhwuR97Sdl5q9h1CIHTg::Harness Proxy::<0xHlX_WKQ3y-3CFQ0DDx1w::ControllerAction Harness>], [XsVRVdrxTNvzPj7OQrDwAg::Harness Proxy::<mC3pPO5wS3SxvhgZgMjsJQ::ObservableProcessModel Harness>], [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>], [bvj2u51Uw5_SD1TRZNpwXA::Harness Proxy::<54MiSgQdSiukMX4fIZJimg::ObservableProcessControler Harness>], [kFKvLRgHKYYDMExB7PQjIA::Harness Proxy::<d8zMijUSTZiQlbk__HX6gA::Holodeck Runner Test Harness #2>], [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>], [zwXafDUZ8sI7qTaRy-pjLg::Harness Proxy::<TLUZ3YPUTXK8fXhh6t3-Ew::Holodeck Runner Test #5>]}."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "DUGjLpXu6s7PYw43guW2jg": {
              "IRyR4YazRuWiZp9Rzj6-WA": {
                "harnessRequest": {
                  "id": "IRyR4YazRuWiZp9Rzj6-WA",
                  "name": "Call test harness #1",
                  "description": "Attempt to call the harness-filter-1 test harness plug-in.",
                  "vectorRequest": {
                    "testMessage1": "This request should get routed to harness-filter-1."
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "F1zguurrS9-fcdvLk7TCrg": {
                        "IRyR4YazRuWiZp9Rzj6-WA": "This request should get routed to harness-filter-1."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "kFKvLRgHKYYDMExB7PQjIA": {
              "sBB6rshGQu2f7S5rA2x9eg": {
                "harnessRequest": {
                  "id": "sBB6rshGQu2f7S5rA2x9eg",
                  "name": "Call test harness #2",
                  "description": "Attempt to call the harness-filter-2 test harness plug-in.",
                  "vectorRequest": {
                    "testMessage2": "This request should get routed to harness-filter-2."
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "d8zMijUSTZiQlbk__HX6gA": {
                        "sBB6rshGQu2f7S5rA2x9eg": "This request should get routed to harness-filter-2."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "YKGvFlRJKQNp0UxWWe4jwA": {
              "ak8rhTiORTWXueau74RlHA": {
                "harnessRequest": {
                  "id": "ak8rhTiORTWXueau74RlHA",
                  "name": "Call test harness #3 (incomplete message)",
                  "description": "Attempt to call the harness-filter-3 test harness plug-in w/incomplete request mesage.",
                  "vectorRequest": {
                    "testMessage3": {
                      "superflous": [
                        "This array is not included in the harness-filter-3 test harness input spec so it's simply clipped off by the harness input filter stage and never passed to the harness bodyFunction.",
                        "We know that our harness filter test examples all have a fairly predictable harnessRequest signature. Here we use knowledge of how arccore.discriminator works inside to craft a",
                        "a test that routes through discriminator to select the harness. But, when called the harness rejects the harnessRequest because although it was sufficient to get through arccore.discrminator,",
                        "(because after seeing testMessage3 discrminator knows it can only be harness-filter-3) it was nonetheless insufficiently complete to pass harness input spec."
                      ]
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>] failed while normalizing request input. Error at path '~.vectorRequest.testMessage3.message': Value of type 'jsUndefined' not in allowed type set [jsString].",
                  "result": null
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "YKGvFlRJKQNp0UxWWe4jwA": {
              "cQ3Z1fhsTICqkY3uKQXaFQ": {
                "harnessRequest": {
                  "id": "cQ3Z1fhsTICqkY3uKQXaFQ",
                  "name": "Call test harness #3 (complete message signalling force error)",
                  "description": "Attempt to call harness-filter-3 signalling that its implementation should return a response.error.",
                  "vectorRequest": {
                    "testMessage3": {
                      "message": "error"
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [YKGvFlRJKQNp0UxWWe4jwA::Harness Proxy::<EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3>] failed while performing main operation. Error attempting to dispatch plug-in harness filter [EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3]: Filter [EmU3C0AASciHnBpz-xMmgA::Holodeck Runner Test Harness #3] failed while performing main operation. We were asked to report an error."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "YKGvFlRJKQNp0UxWWe4jwA": {
              "LC56jkxeQJ2mgWfwGklLEQ": {
                "harnessRequest": {
                  "id": "LC56jkxeQJ2mgWfwGklLEQ",
                  "name": "Call test harness #3 (valid message)",
                  "description": "Attempt to call harness-filter-3 with a valid message.",
                  "vectorRequest": {
                    "testMessage3": {
                      "message": "This message should be delivered and returned by harness-filter-3."
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "EmU3C0AASciHnBpz-xMmgA": {
                        "LC56jkxeQJ2mgWfwGklLEQ": "This message should be delivered and returned by harness-filter-3."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "z1d1czVQoTY7MjDsy97Paw": {
              "UHqiKKLkTMmLBGXI4lRxEA": {
                "harnessRequest": {
                  "id": "UHqiKKLkTMmLBGXI4lRxEA",
                  "name": "Call test harness #4",
                  "description": "Call test harness #4 which is hardwired to throw an exception. This confirms baseline for holodeck's harness factory's handling of bad developer input.",
                  "vectorRequest": {
                    "testMessage4": {
                      "thisIsOpqaue": "so i can do wahtever i want... and it doesn't matter anyway. the harness is hard-wired to explode."
                    }
                  }
                },
                "harnessResponse": {
                  "error": "The harness filter registered to handle this message type rejected your request with an error: Filter [z1d1czVQoTY7MjDsy97Paw::Harness Proxy::<z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4>] failed while performing main operation. Error attempting to dispatch plug-in harness filter [z8JzdpB0RcC-_AlfPQRxdQ::Holodeck Runner Test #4]: Unexpected harness filter exception: Oh, snap! (Error: Oh, snap!\n    at Object.harnessBodyFunction [as bodyFunction] (/home/cdr/code/encapsule/holistic/PLATFORM/holodeck-assets/holodeck/harnesses/harness-test-4.js:20:11)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38558)\n    at Object.bodyFunction (/home/cdr/code/encapsule/holistic/PLATFORM/holodeck/lib/holodeck-harness-factory.js:100:52)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38558)\n    at Object.bodyFunction (/home/cdr/code/encapsule/holistic/PLATFORM/holodeck/lib/holodeck-runner.js:98:42)\n    at r.value (/home/cdr/code/encapsule/holistic/node_modules/@encapsule/arccore/arc_core_lib.js:1:38558)\n    at Object.request (/home/cdr/code/encapsule/holistic/PLATFORM/holodeck/lib/holodeck-runner.js:225:45)\n    at Object.<anonymous> (/home/cdr/code/encapsule/holistic/TESTS/run-tests.js:67:39)\n    at Module._compile (internal/modules/cjs/loader.js:688:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:699:10))."
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "gwtkQR51TYm93K32K6QHNA": {
                "harnessRequest": {
                  "id": "gwtkQR51TYm93K32K6QHNA",
                  "name": "Undefined constructor request",
                  "description": "Send nothing (undefined) to OPC constructor.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "gwtkQR51TYm93K32K6QHNA": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject].",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "iQ5RngZ0QNyH67mVrlwo4w": {
                "harnessRequest": {
                  "id": "iQ5RngZ0QNyH67mVrlwo4w",
                  "name": "Barely defined constructor request",
                  "description": "Send nothing but an empty object to OPC constructor.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {}
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "iQ5RngZ0QNyH67mVrlwo4w": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while normalizing request input. Error at path '~.id': Value of type 'jsUndefined' not in allowed type set [jsString].",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "QvEwWTkbT8G_SQsmWmg2zQ": {
                "harnessRequest": {
                  "id": "QvEwWTkbT8G_SQsmWmg2zQ",
                  "name": "Minimal constructor request #1: Invalid ID",
                  "description": "Test basic constructor request variant #1 by passing a bad IRUT as the ID.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "fail"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "QvEwWTkbT8G_SQsmWmg2zQ": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Please supply a valid IRUT. Or, use the special 'demo' keyword to have a one-time-use random IRUT assigned. Expected 22-character string. Found 4-character string instead.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "l_P652EhQU6_z7afrV-PMQ": {
                "harnessRequest": {
                  "id": "l_P652EhQU6_z7afrV-PMQ",
                  "name": "Minimal constructor valid ID all default inputs",
                  "description": "Confirm default construction variant #1",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "l_P652EhQU6_z7afrV-PMQ"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "l_P652EhQU6_z7afrV-PMQ": {
                          "opcToJSON": {
                            "id": "l_P652EhQU6_z7afrV-PMQ",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [l_P652EhQU6_z7afrV-PMQ::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [l_P652EhQU6_z7afrV-PMQ::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "juolo4dqSgKdLEYLoHJJ1Q": {
                "harnessRequest": {
                  "id": "juolo4dqSgKdLEYLoHJJ1Q",
                  "name": "Miniaml constructor w/minimal valid ocdTemplateSpec",
                  "description": "Confirm minimal ocdTemplateSpec same as default construction.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "juolo4dqSgKdLEYLoHJJ1Q",
                            "name": "Valid ID w/minimal but valid custom opaque ocd template spec.",
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "juolo4dqSgKdLEYLoHJJ1Q": {
                          "opcToJSON": {
                            "id": "juolo4dqSgKdLEYLoHJJ1Q",
                            "name": "Valid ID w/minimal but valid custom opaque ocd template spec.",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [juolo4dqSgKdLEYLoHJJ1Q::Valid ID w/minimal but valid custom opaque ocd template spec.] Observable Controller Data Store",
                              "____description": "OPC [juolo4dqSgKdLEYLoHJJ1Q::Valid ID w/minimal but valid custom opaque ocd template spec.] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "dirl1VuNQCmBrzbJXWMTtA": {
                "harnessRequest": {
                  "id": "dirl1VuNQCmBrzbJXWMTtA",
                  "name": "Invalid OCD template spec #1",
                  "description": "OCD template spec must be a valid filter spec.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "dirl1VuNQCmBrzbJXWMTtA",
                            "ocdTemplateSpec": {}
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "dirl1VuNQCmBrzbJXWMTtA": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. While attempting to verify and normalize developer-defined request.ocdTemplateSpec: Filter factory failure: While examining data namespace '~.inputFilterSpec': Missing required '____accept', '____types', or '_____opaque' type constraint directive.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "ChcuyPLCSQCsICTprPzfog": {
                "harnessRequest": {
                  "id": "ChcuyPLCSQCsICTprPzfog",
                  "name": "Invalid OCD template spec #2",
                  "description": "OCD template spec ~ namespace is not allowed to use any other filter spec directives other than ____types.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "ChcuyPLCSQCsICTprPzfog",
                            "ocdTemplateSpec": {
                              "____notAQunderscoreDirective": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "ChcuyPLCSQCsICTprPzfog": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. While attempting to verify and normalize developer-defined request.ocdTemplateSpec: Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____notAQunderscoreDirective' not allowed in declaration.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "ZbwxkWJgTEKjxXpYX0_h7Q": {
                "harnessRequest": {
                  "id": "ZbwxkWJgTEKjxXpYX0_h7Q",
                  "name": "Invliad OCD template spec #3",
                  "description": "OCD template spec ~ namespace is not allowed to use the ____opaque directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "ZbwxkWJgTEKjxXpYX0_h7Q",
                            "ocdTemplateSpec": {
                              "____opaque": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "ZbwxkWJgTEKjxXpYX0_h7Q": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "ElMglky8TBGkzkd6W4690A": {
                "harnessRequest": {
                  "id": "ElMglky8TBGkzkd6W4690A",
                  "name": "Invalid OCD template spec #4",
                  "description": "OCD template spec ~ namespace is not allowed to use the ____accept directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "ElMglky8TBGkzkd6W4690A",
                            "ocdTemplateSpec": {
                              "____accept": "jsObject"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "ElMglky8TBGkzkd6W4690A": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "waM_L9rTT6ySTY4ja__K3g": {
                "harnessRequest": {
                  "id": "waM_L9rTT6ySTY4ja__K3g",
                  "name": "Invalid OCD template spec #5",
                  "description": "OCD template namespace ~ is not allowed to use an array value for the ____types directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "waM_L9rTT6ySTY4ja__K3g",
                            "ocdTemplateSpec": {
                              "____types": [
                                "jsObject"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "waM_L9rTT6ySTY4ja__K3g": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "X5zbSBkaQeG6Wft5cGVRwg": {
                "harnessRequest": {
                  "id": "X5zbSBkaQeG6Wft5cGVRwg",
                  "name": "Invalid OCD template spec #6",
                  "description": "OCD template namespace ~ is not allowed to specify any value other that jsObject for ____types directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "X5zbSBkaQeG6Wft5cGVRwg",
                            "ocdTemplateSpec": {
                              "____types": "jsString"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "X5zbSBkaQeG6Wft5cGVRwg": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "nCoUIS0RTlmuKUSpimee7A": {
                "harnessRequest": {
                  "id": "nCoUIS0RTlmuKUSpimee7A",
                  "name": "Invalid OCD template spec #7",
                  "description": "OCD template namespace ~ is only allowed to use one quanderscore directive, ____types.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "nCoUIS0RTlmuKUSpimee7A",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "____defaultValue": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "nCoUIS0RTlmuKUSpimee7A": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Rejecting OCD spec template. The root namespace must be declared with literally just the ____types: \"jsObject\" quanderscore directive; no other directives are allowed in ~ namespace.",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "FxMOqQPARcGcMZ24x2tq7A": {
                "harnessRequest": {
                  "id": "FxMOqQPARcGcMZ24x2tq7A",
                  "name": "Invalid OCD template spec #7",
                  "description": "Test our ability to extend the OPC-managed root namespace, ~.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "FxMOqQPARcGcMZ24x2tq7A",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "FxMOqQPARcGcMZ24x2tq7A": {
                          "opcToJSON": {
                            "id": "FxMOqQPARcGcMZ24x2tq7A",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [FxMOqQPARcGcMZ24x2tq7A::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [FxMOqQPARcGcMZ24x2tq7A::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdi": {
                              "testString": "Please specify a value for ~.testString."
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "fzc39RvNTLmHF5UNn_-Fng": {
                "harnessRequest": {
                  "id": "fzc39RvNTLmHF5UNn_-Fng",
                  "name": "Valid ID, ocdTemplateSpec, data",
                  "description": "Valid OPC instance + dev ocdTemplateSpec + invalid valid init data",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "fzc39RvNTLmHF5UNn_-Fng",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdInitData": {
                              "testString": 3.1415926536
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "fzc39RvNTLmHF5UNn_-Fng": {
                          "opcToJSON": {
                            "error": "ObservableProcessController::constructor failed yielding a zombie instance. Failed while processing constructor request. Filter [XXile9azSHO39alE6mMKsg::OPC Constructor Request Processor] failed while performing main operation. Unable to initialize the OPC instance's shared OCD store due to constructor failure: Filter [3aDV_cacQByO0tTzVrBxnA::OCD Constructor Request Processor] failed while normalizing request input. Error at path '~.testString': Value of type 'jsNumber' not in allowed type set [jsString].",
                            "result": false
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "DipB21oZR5ihBCYESC5HWw": {
                "harnessRequest": {
                  "id": "DipB21oZR5ihBCYESC5HWw",
                  "name": "Valid ID, ocdTemplateSpec, data",
                  "description": "Valid OPC instance + dev ocdTemplateSpec + valid init data",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "DipB21oZR5ihBCYESC5HWw",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdInitData": {
                              "testString": "Hello, World!"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "DipB21oZR5ihBCYESC5HWw": {
                          "opcToJSON": {
                            "id": "DipB21oZR5ihBCYESC5HWw",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [DipB21oZR5ihBCYESC5HWw::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [DipB21oZR5ihBCYESC5HWw::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "testString": {
                                "____label": "Test Namespace 1",
                                "____accept": "jsString",
                                "____defaultValue": "Please specify a value for ~.testString."
                              }
                            },
                            "ocdi": {
                              "testString": "Hello, World!"
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "np4M1LDWSyeNXOmFYJulhA": {
                "harnessRequest": {
                  "id": "np4M1LDWSyeNXOmFYJulhA",
                  "name": "Invalid OPC template spec binding #1",
                  "description": "Pass an OCD template spec w/invalid OPM binding IRUT",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "np4M1LDWSyeNXOmFYJulhA",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "app": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opm": "not and IRUT"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "np4M1LDWSyeNXOmFYJulhA": {
                          "opcToJSON": {
                            "id": "np4M1LDWSyeNXOmFYJulhA",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "app": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opm": "not and IRUT"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [np4M1LDWSyeNXOmFYJulhA::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [np4M1LDWSyeNXOmFYJulhA::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "app": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.app' will not be bound to OPM ID 'not and IRUT'. Invalid ID IRUT specified."
                                }
                              }
                            },
                            "ocdi": {
                              "app": {}
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.app' will not be bound to OPM ID 'not and IRUT'. Invalid ID IRUT specified.",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "197ZsgbfRRGGMWqhwmaBDg": {
                "harnessRequest": {
                  "id": "197ZsgbfRRGGMWqhwmaBDg",
                  "name": "Invalid OPC template spec binding #2",
                  "description": "OCD spec namespace bound to OPM not allowed to use ____opaque directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "197ZsgbfRRGGMWqhwmaBDg",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____opaque": true,
                                "____appdsl": {
                                  "opm": "197ZsgbfRRGGMWqhwmaBDg"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "197ZsgbfRRGGMWqhwmaBDg": {
                          "opcToJSON": {
                            "id": "197ZsgbfRRGGMWqhwmaBDg",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____opaque": true,
                                "____appdsl": {
                                  "opm": "197ZsgbfRRGGMWqhwmaBDg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [197ZsgbfRRGGMWqhwmaBDg::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [197ZsgbfRRGGMWqhwmaBDg::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____opaque": true,
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID '197ZsgbfRRGGMWqhwmaBDg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                }
                              }
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID '197ZsgbfRRGGMWqhwmaBDg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "rxFiX7H-TDG0GsxqtRekoA": {
                "harnessRequest": {
                  "id": "rxFiX7H-TDG0GsxqtRekoA",
                  "name": "Invalid OPC template spec binding #3",
                  "description": "OCD spec namespace bound to OPM not allowed to use ____accept directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "rxFiX7H-TDG0GsxqtRekoA",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____accept": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opm": "rxFiX7H-TDG0GsxqtRekoA"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "rxFiX7H-TDG0GsxqtRekoA": {
                          "opcToJSON": {
                            "id": "rxFiX7H-TDG0GsxqtRekoA",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____accept": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opm": "rxFiX7H-TDG0GsxqtRekoA"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [rxFiX7H-TDG0GsxqtRekoA::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [rxFiX7H-TDG0GsxqtRekoA::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____accept": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'rxFiX7H-TDG0GsxqtRekoA'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'rxFiX7H-TDG0GsxqtRekoA'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "Pe4ks7bQQ9KQee1T8qTRHw": {
                "harnessRequest": {
                  "id": "Pe4ks7bQQ9KQee1T8qTRHw",
                  "name": "Invalid OPC Template sepc binding #4",
                  "description": "OCD spec namespace bound to OPM not allowed to specify an array of values to ____types directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "Pe4ks7bQQ9KQee1T8qTRHw",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": [
                                  "jsObject"
                                ],
                                "____appdsl": {
                                  "opm": "Pe4ks7bQQ9KQee1T8qTRHw"
                                },
                                "____defaultValue": {}
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "Pe4ks7bQQ9KQee1T8qTRHw": {
                          "opcToJSON": {
                            "id": "Pe4ks7bQQ9KQee1T8qTRHw",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": [
                                  "jsObject"
                                ],
                                "____appdsl": {
                                  "opm": "Pe4ks7bQQ9KQee1T8qTRHw"
                                },
                                "____defaultValue": {}
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [Pe4ks7bQQ9KQee1T8qTRHw::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [Pe4ks7bQQ9KQee1T8qTRHw::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": [
                                  "jsObject"
                                ],
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'Pe4ks7bQQ9KQee1T8qTRHw'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                },
                                "____defaultValue": {}
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'Pe4ks7bQQ9KQee1T8qTRHw'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "H2zMrBw4TBie5A2mwH4BRg": {
                "harnessRequest": {
                  "id": "H2zMrBw4TBie5A2mwH4BRg",
                  "name": "Invalid OCD template spec binding #5",
                  "description": "OCD template spec namespace bound to OPM must declare ____types: \"jsObject\".",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "H2zMrBw4TBie5A2mwH4BRg",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsArray",
                                "____defaultValue": [],
                                "____appdsl": {
                                  "opm": "H2zMrBw4TBie5A2mwH4BRg"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "H2zMrBw4TBie5A2mwH4BRg": {
                          "opcToJSON": {
                            "id": "H2zMrBw4TBie5A2mwH4BRg",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsArray",
                                "____defaultValue": [],
                                "____appdsl": {
                                  "opm": "H2zMrBw4TBie5A2mwH4BRg"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [H2zMrBw4TBie5A2mwH4BRg::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [H2zMrBw4TBie5A2mwH4BRg::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsArray",
                                "____defaultValue": [],
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'H2zMrBw4TBie5A2mwH4BRg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": []
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'H2zMrBw4TBie5A2mwH4BRg'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "VxYuiGoHRfuKRHp7PBik7Q": {
                "harnessRequest": {
                  "id": "VxYuiGoHRfuKRHp7PBik7Q",
                  "name": "Invalid OCD template spec binding #6",
                  "description": "OCD template spec namespace bound to OPM must not use the ____asMap directive.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "VxYuiGoHRfuKRHp7PBik7Q",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____asMap": true,
                                "____appdsl": {
                                  "opm": "VxYuiGoHRfuKRHp7PBik7Q"
                                },
                                "mapKey": {
                                  "____accept": "jsString"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "VxYuiGoHRfuKRHp7PBik7Q": {
                          "opcToJSON": {
                            "id": "VxYuiGoHRfuKRHp7PBik7Q",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____asMap": true,
                                "____appdsl": {
                                  "opm": "VxYuiGoHRfuKRHp7PBik7Q"
                                },
                                "mapKey": {
                                  "____accept": "jsString"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [VxYuiGoHRfuKRHp7PBik7Q::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [VxYuiGoHRfuKRHp7PBik7Q::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____asMap": true,
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'VxYuiGoHRfuKRHp7PBik7Q'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\"."
                                },
                                "mapKey": {
                                  "____accept": "jsString"
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'VxYuiGoHRfuKRHp7PBik7Q'. Namespace must be a descriptor object (i.e. not a map) declared as ____types: \"jsObject\".",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "T-apDENPTAO6iQShA-2qBQ": {
                "harnessRequest": {
                  "id": "T-apDENPTAO6iQShA-2qBQ",
                  "name": "Invalid OCD template spec binding #7",
                  "description": "OCD template spec namespace bound to OPM must specify the ID of a registered OPM instance to bind.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "T-apDENPTAO6iQShA-2qBQ",
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opm": "T-apDENPTAO6iQShA-2qBQ"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "T-apDENPTAO6iQShA-2qBQ": {
                          "opcToJSON": {
                            "id": "T-apDENPTAO6iQShA-2qBQ",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opm": "T-apDENPTAO6iQShA-2qBQ"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [T-apDENPTAO6iQShA-2qBQ::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [T-apDENPTAO6iQShA-2qBQ::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "badNamespace": {
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "____appdsl": {
                                  "opcWarning": "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'T-apDENPTAO6iQShA-2qBQ'. Unknown/unregistered OPM specified."
                                }
                              }
                            },
                            "ocdi": {
                              "badNamespace": {}
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: OCD runtime spec path '~.badNamespace' will not be bound to OPM ID 'T-apDENPTAO6iQShA-2qBQ'. Unknown/unregistered OPM specified.",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "4nw2B9oVQYm1ZspZqotrRA": {
                "harnessRequest": {
                  "id": "4nw2B9oVQYm1ZspZqotrRA",
                  "name": "OCD template spec OPM binding #1",
                  "description": "OPM binding test #1: Baseline - registered OPM's but no declared bindigs.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "4nw2B9oVQYm1ZspZqotrRA",
                            "observableProcessModelSets": [
                              [
                                {
                                  "declaration": {
                                    "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                    "name": "OPM Test A",
                                    "description": "A simple test OPM",
                                    "opmDataSpec": {
                                      "____types": "jsObject"
                                    },
                                    "steps": {}
                                  },
                                  "digraph": {
                                    "name": "[_vC2O7DGTZ22R5hvxpy0WQ::OPM Test A] OPM Digraph",
                                    "description": "A simple test OPM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                },
                                {
                                  "declaration": {
                                    "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                    "name": "OPM Test B",
                                    "description": "A simple test OPM",
                                    "opmDataSpec": {
                                      "____types": "jsObject"
                                    },
                                    "steps": {}
                                  },
                                  "digraph": {
                                    "name": "[SyCUD3kpQ8mtYbV5A_4BPA::OPM Test B] OPM Digraph",
                                    "description": "A simple test OPM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                },
                                {
                                  "declaration": {
                                    "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                    "name": "OPM Test C",
                                    "description": "A simple test OPM",
                                    "opmDataSpec": {
                                      "____types": "jsObject"
                                    },
                                    "steps": {}
                                  },
                                  "digraph": {
                                    "name": "[Pkr1EErLSiiHQRt8gCaO0Q::OPM Test C] OPM Digraph",
                                    "description": "A simple test OPM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                },
                                {
                                  "declaration": {
                                    "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                    "name": "OPC Test D",
                                    "description": "A simple test OPM",
                                    "opmDataSpec": {
                                      "____types": "jsObject"
                                    },
                                    "steps": {}
                                  },
                                  "digraph": {
                                    "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] OPM Digraph",
                                    "description": "A simple test OPM",
                                    "vlist": [],
                                    "elist": []
                                  }
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "4nw2B9oVQYm1ZspZqotrRA": {
                          "opcToJSON": {
                            "id": "4nw2B9oVQYm1ZspZqotrRA",
                            "name": "Unnamed OPC",
                            "description": "Undescribed OPC",
                            "opmMap": {
                              "_vC2O7DGTZ22R5hvxpy0WQ": {
                                "declaration": {
                                  "id": "_vC2O7DGTZ22R5hvxpy0WQ",
                                  "name": "OPM Test A",
                                  "description": "A simple test OPM",
                                  "opmDataSpec": {
                                    "____types": "jsObject"
                                  },
                                  "steps": {}
                                },
                                "digraph": {
                                  "name": "[_vC2O7DGTZ22R5hvxpy0WQ::OPM Test A] OPM Digraph",
                                  "description": "A simple test OPM",
                                  "vlist": [],
                                  "elist": []
                                }
                              },
                              "SyCUD3kpQ8mtYbV5A_4BPA": {
                                "declaration": {
                                  "id": "SyCUD3kpQ8mtYbV5A_4BPA",
                                  "name": "OPM Test B",
                                  "description": "A simple test OPM",
                                  "opmDataSpec": {
                                    "____types": "jsObject"
                                  },
                                  "steps": {}
                                },
                                "digraph": {
                                  "name": "[SyCUD3kpQ8mtYbV5A_4BPA::OPM Test B] OPM Digraph",
                                  "description": "A simple test OPM",
                                  "vlist": [],
                                  "elist": []
                                }
                              },
                              "Pkr1EErLSiiHQRt8gCaO0Q": {
                                "declaration": {
                                  "id": "Pkr1EErLSiiHQRt8gCaO0Q",
                                  "name": "OPM Test C",
                                  "description": "A simple test OPM",
                                  "opmDataSpec": {
                                    "____types": "jsObject"
                                  },
                                  "steps": {}
                                },
                                "digraph": {
                                  "name": "[Pkr1EErLSiiHQRt8gCaO0Q::OPM Test C] OPM Digraph",
                                  "description": "A simple test OPM",
                                  "vlist": [],
                                  "elist": []
                                }
                              },
                              "ZFpRfMRETDqavS3EqEuv1Q": {
                                "declaration": {
                                  "id": "ZFpRfMRETDqavS3EqEuv1Q",
                                  "name": "OPC Test D",
                                  "description": "A simple test OPM",
                                  "opmDataSpec": {
                                    "____types": "jsObject"
                                  },
                                  "steps": {}
                                },
                                "digraph": {
                                  "name": "[ZFpRfMRETDqavS3EqEuv1Q::OPC Test D] OPM Digraph",
                                  "description": "A simple test OPM",
                                  "vlist": [],
                                  "elist": []
                                }
                              }
                            },
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [4nw2B9oVQYm1ZspZqotrRA::Unnamed OPC] Observable Controller Data Store",
                              "____description": "OPC [4nw2B9oVQYm1ZspZqotrRA::Unnamed OPC] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "AhfYIOp_RQmS-a37emkj9A": {
                "harnessRequest": {
                  "id": "AhfYIOp_RQmS-a37emkj9A",
                  "name": "OPC.act dispatch #1",
                  "description": "Dispatch an OPC.act method with no actions registered.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "AhfYIOp_RQmS-a37emkj9A",
                            "name": "OPC.act dispatch #1",
                            "description": "Not expected to do much..."
                          },
                          "actRequests": [
                            {
                              "bogus": "Our OPCi has no registered actions. So, by definition this request will result in an error."
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "AhfYIOp_RQmS-a37emkj9A": {
                          "opcToJSON": {
                            "id": "AhfYIOp_RQmS-a37emkj9A",
                            "name": "OPC.act dispatch #1",
                            "description": "Not expected to do much...",
                            "opmMap": {},
                            "opmiSpecPaths": [],
                            "ocdTemplateSpec": {
                              "____types": "jsObject"
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [AhfYIOp_RQmS-a37emkj9A::OPC.act dispatch #1] Observable Controller Data Store",
                              "____description": "OPC [AhfYIOp_RQmS-a37emkj9A::OPC.act dispatch #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {}
                            },
                            "ocdi": {},
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 0,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {}
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No ObservableProcessModel class instances registered!",
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": [
                            {
                              "actRequest": {
                                "bogus": "Our OPCi has no registered actions. So, by definition this request will result in an error."
                              },
                              "actResponse": {
                                "error": "No ControllerAction class instances registered!"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "V4rhwuR97Sdl5q9h1CIHTg": {
              "8UqseWhbQLSnDnKqu6eVpA": {
                "harnessRequest": {
                  "id": "8UqseWhbQLSnDnKqu6eVpA",
                  "name": "ControllerAction contructor #1",
                  "description": "Test ControllerAction class constructor #1 (undefined constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ControllerAction": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "0xHlX_WKQ3y-3CFQ0DDx1w": {
                        "8UqseWhbQLSnDnKqu6eVpA": {
                          "isValid": false,
                          "toJSON": "ControllerAction::constructor failed yielding a zombie instance. Filter [actXQlKYQ9KDriZba3t00w::Controller Action Filter Factory] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "V4rhwuR97Sdl5q9h1CIHTg": {
              "stn1B2JRSkOkFxuyejzGjQ": {
                "harnessRequest": {
                  "id": "stn1B2JRSkOkFxuyejzGjQ",
                  "name": "ControllerAction constructor #2",
                  "description": "Test ControllerAction class constructor #2 (minimal constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ControllerAction": {
                          "constructorRequest": {
                            "id": "stn1B2JRSkOkFxuyejzGjQ",
                            "name": "ControllAction Test #2",
                            "description": "A test ControllerAction plug-in filter.",
                            "actionRequestSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "action1": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "0xHlX_WKQ3y-3CFQ0DDx1w": {
                        "stn1B2JRSkOkFxuyejzGjQ": {
                          "isValid": true,
                          "toJSON": {
                            "operationID": "stn1B2JRSkOkFxuyejzGjQ",
                            "operationName": "ControllAction Test #2",
                            "operationDescription": "A test ControllerAction plug-in filter.",
                            "inputFilterSpec": {
                              "____label": "ControllAction Test #2 Request",
                              "____types": "jsObject",
                              "context": {
                                "____label": "OPC Context Descriptor",
                                "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                "____types": "jsObject",
                                "dataPath": {
                                  "____label": "OPM Binding Namespace",
                                  "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                  "____accept": "jsString"
                                },
                                "ocdi": {
                                  "____label": "OCD Store Instance",
                                  "____description": "A reference to the OCD store instance managed by OPC.",
                                  "____accept": "jsObject"
                                },
                                "act": {
                                  "____label": "OPC Action Request Dispatcher",
                                  "____description": "A reference to ObservableProcessController.act method.",
                                  "____accept": "jsFunction"
                                }
                              },
                              "actionRequest": {
                                "____types": "jsObject",
                                "test": {
                                  "____types": "jsObject",
                                  "action1": {
                                    "____accept": "jsObject"
                                  }
                                }
                              }
                            },
                            "outputFilterSpec": {
                              "____accept": "jsBoolean"
                            },
                            "inputTypeVIID": "Atx8FjZfYUxmrFTQQW7XvQ",
                            "inputTypeVDID": "PtG8ZApondPlh001CPDIdg",
                            "outputTypeVIID": "2Ct2ZVLNFcvpNEjSjPhVcA",
                            "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                            "operationVDID": "yQ2VRNtjZpPFxxOc7_h1cg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "SaPQhpVtKhQvT4xWAqtmXg": {
              "6TPB7tz4TQaGJYaRAhl_gQ": {
                "harnessRequest": {
                  "id": "6TPB7tz4TQaGJYaRAhl_gQ",
                  "name": "TransitionOperator constructor #1",
                  "description": "TransitionOperator constructor test #1 (undefined constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "TransitionOperator": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "X2q-YtvCTrWx7csHq8R8Tw": {
                        "6TPB7tz4TQaGJYaRAhl_gQ": {
                          "isValid": false,
                          "toJSON": "TransitionOperator::constructor failed yielding a zombie instance. Filter [-99RI_6HTsiQgwN2OV1xXQ::Transition Operator Filter Factory] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "SaPQhpVtKhQvT4xWAqtmXg": {
              "8167V4JrSc-47BMNONdxvQ": {
                "harnessRequest": {
                  "id": "8167V4JrSc-47BMNONdxvQ",
                  "name": "TransitionOperator constructor #2",
                  "description": "TransitionOperator constructor test #2 (minimally defined contructor)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "TransitionOperator": {
                          "constructorRequest": {
                            "id": "8167V4JrSc-47BMNONdxvQ",
                            "name": "TransitionOperator Test #2",
                            "description": "A simple test transition operator plug-in filter.",
                            "operatorRequestSpec": {
                              "____types": "jsObject",
                              "test": {
                                "____types": "jsObject",
                                "TransitionOperator1": {
                                  "____accept": "jsObject"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "X2q-YtvCTrWx7csHq8R8Tw": {
                        "8167V4JrSc-47BMNONdxvQ": {
                          "isValid": true,
                          "toJSON": {
                            "operationID": "8167V4JrSc-47BMNONdxvQ",
                            "operationName": "TransitionOperator Test #2",
                            "operationDescription": "A simple test transition operator plug-in filter.",
                            "inputFilterSpec": {
                              "____label": "TransitionOperator Test #2 Request",
                              "____types": "jsObject",
                              "context": {
                                "____label": "OPC Context Descriptor",
                                "____description": "An object containing references to OPC instance-managed runtime API's available to transition operator filters.",
                                "____types": "jsObject",
                                "namespace": {
                                  "____label": "OPM Binding Namespace",
                                  "____description": "Dot-delimited path to the current OPM instance's associated data in the OPD.",
                                  "____accept": "jsString"
                                },
                                "ocdi": {
                                  "____label": "OCD Store Instance",
                                  "____description": "A reference to the OCD store instance managed by OPC.",
                                  "____accept": "jsObject"
                                },
                                "transitionDispatcher": {
                                  "____label": "OPC Transition Dispatcher",
                                  "____description": "A reference to an OPC instance's transition operator dispatcher instance.",
                                  "____accept": "jsObject"
                                }
                              },
                              "operator": {
                                "____types": "jsObject",
                                "test": {
                                  "____types": "jsObject",
                                  "TransitionOperator1": {
                                    "____accept": "jsObject"
                                  }
                                }
                              }
                            },
                            "outputFilterSpec": {
                              "____accept": "jsBoolean"
                            },
                            "inputTypeVIID": "KANd4sK71iHrmf2JDGWXqQ",
                            "inputTypeVDID": "DAcraGvt4nuSxxbe7IuRBw",
                            "outputTypeVIID": "YsakJ46SDRmRfChsq5EIIg",
                            "outputTypeVDID": "UD3UqnNuxwSJpW-kQ0DxUA",
                            "operationVDID": "fJLtRM_jNpNlT3Sc7k2rcg"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsVRVdrxTNvzPj7OQrDwAg": {
              "ErHlg9R3SSaonNJr4mBi-g": {
                "harnessRequest": {
                  "id": "ErHlg9R3SSaonNJr4mBi-g",
                  "name": "ObservableProcessModel constructor #1",
                  "description": "ObservableProcessModel constructor test #1 (undefined constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessModel": {}
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "ErHlg9R3SSaonNJr4mBi-g": {
                          "isValid": false,
                          "toJSON": "ObservableProcessModel::constructor failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::OPM Constructor Request Processor] failed while normalizing request input. Error at path '~': Value of type 'jsUndefined' not in allowed type set [jsObject]."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsVRVdrxTNvzPj7OQrDwAg": {
              "VwWYI4ReSTSfqSnoVXXC-w": {
                "harnessRequest": {
                  "id": "VwWYI4ReSTSfqSnoVXXC-w",
                  "name": "ObservableProcessModel constructor #2",
                  "description": "ObservableProcessModel constructor test #2 (minimal constructor request)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessModel": {
                          "constructorRequest": {
                            "id": "VwWYI4ReSTSfqSnoVXXC-w",
                            "name": "OPM #2",
                            "description": "OPM instance test #2 (minimal constructor request)"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "VwWYI4ReSTSfqSnoVXXC-w": {
                          "isValid": true,
                          "toJSON": {
                            "declaration": {
                              "id": "VwWYI4ReSTSfqSnoVXXC-w",
                              "name": "OPM #2",
                              "description": "OPM instance test #2 (minimal constructor request)",
                              "opmDataSpec": {
                                "____types": "jsObject"
                              },
                              "steps": {}
                            },
                            "digraph": {
                              "name": "[VwWYI4ReSTSfqSnoVXXC-w::OPM #2] OPM Digraph",
                              "description": "OPM instance test #2 (minimal constructor request)",
                              "vlist": [],
                              "elist": []
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsVRVdrxTNvzPj7OQrDwAg": {
              "HwB8EphzRkSG7AeoISMctQ": {
                "harnessRequest": {
                  "id": "HwB8EphzRkSG7AeoISMctQ",
                  "name": "ObsevableProcessModel constructor #3",
                  "description": "ObservableProcessModel constructor test #3 (OCD test #1)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessModel": {
                          "constructorRequest": {
                            "id": "HwB8EphzRkSG7AeoISMctQ",
                            "name": "ObsevableProcessModel constructor #3",
                            "description": "ObservableProcessModel constructor test #3 (OCD test #1)",
                            "opmDataSpec": {
                              "____bullshit": true
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "HwB8EphzRkSG7AeoISMctQ": {
                          "isValid": false,
                          "toJSON": "ObservableProcessModel::constructor failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::OPM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObsevableProcessModel constructor #3' declaration. Error validating developer-specified OPM filter spec. Filter factory failure: While examining data namespace '~.inputFilterSpec': Unrecognized typemap directive '____bullshit' not allowed in declaration."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsVRVdrxTNvzPj7OQrDwAg": {
              "YdzP0ZKMTme24BBJcyKevA": {
                "harnessRequest": {
                  "id": "YdzP0ZKMTme24BBJcyKevA",
                  "name": "ObservableProcessModel constructor #4",
                  "description": "ObservableProcessModel constructor test #4 (invalid id)",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessModel": {
                          "constructorRequest": {
                            "id": "invalid",
                            "name": "ObservableProcessModel constructor #4",
                            "description": "ObservableProcessModel constructor test #4 (invalid id)"
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "YdzP0ZKMTme24BBJcyKevA": {
                          "isValid": false,
                          "toJSON": "ObservableProcessModel::constructor failed yielding a zombie instance. Filter [XoPnz1p9REe-XO3mKGII3w::OPM Constructor Request Processor] failed while performing main operation. Error while evaluating subcontroller 'ObservableProcessModel constructor #4' declaration. Error validating developer-specified id. Not an IRUT: Expected 22-character string. Found 7-character string instead."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "XsVRVdrxTNvzPj7OQrDwAg": {
              "sO15Cox_SVqcCgyrOllAwQ": {
                "harnessRequest": {
                  "id": "sO15Cox_SVqcCgyrOllAwQ",
                  "name": "Frame Latch OPM Test #1",
                  "description": "Run our Observable Frame Latch OPM declaration through the OPM test harness.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessModel": {
                          "constructorRequest": {
                            "id": "z_mTe02hSWmaM1iRO1pBeA",
                            "name": "Observable Frame Latch",
                            "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                            "opmDataSpec": {
                              "____label": "Observable Frame Latch",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "value": {
                                "____opaque": true
                              },
                              "clock": {
                                "____accept": "jsBoolean",
                                "____defaultValue": false
                              }
                            },
                            "steps": {
                              "uninitialized": {
                                "description": "Default starting process step.",
                                "transitions": [
                                  {
                                    "nextStep": "updated",
                                    "transitionIf": {
                                      "always": true
                                    }
                                  }
                                ],
                                "actions": {
                                  "exit": [
                                    {
                                      "holarchy": {
                                        "sml": {
                                          "action": {
                                            "ocd": {
                                              "setBooleanFlag": {
                                                "path": "#.clock"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "updated": {
                                "description": "The value managed by the frame latch has been written.",
                                "transitions": [
                                  {
                                    "nextStep": "waiting",
                                    "transitionIf": {
                                      "always": true
                                    }
                                  }
                                ],
                                "actions": {
                                  "exit": [
                                    {
                                      "holarchy": {
                                        "sml": {
                                          "action": {
                                            "ocd": {
                                              "clearBooleanFlag": {
                                                "path": "#.clock"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "waiting": {
                                "description": "The frame latch is waiting for value to be written.",
                                "transitions": [
                                  {
                                    "nextStep": "updated",
                                    "transitionIf": {
                                      "holarchy": {
                                        "sml": {
                                          "operator": {
                                            "isBooleanFlagSet": {
                                              "path": "#.clock"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "mC3pPO5wS3SxvhgZgMjsJQ": {
                        "sO15Cox_SVqcCgyrOllAwQ": {
                          "isValid": true,
                          "toJSON": {
                            "declaration": {
                              "id": "z_mTe02hSWmaM1iRO1pBeA",
                              "name": "Observable Frame Latch",
                              "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                              "opmDataSpec": {
                                "____label": "Observable Frame Latch",
                                "____types": "jsObject",
                                "____defaultValue": {},
                                "value": {
                                  "____opaque": true
                                },
                                "clock": {
                                  "____accept": "jsBoolean",
                                  "____defaultValue": false
                                }
                              },
                              "steps": {
                                "uninitialized": {
                                  "description": "Default starting process step.",
                                  "actions": {
                                    "enter": [],
                                    "exit": [
                                      {
                                        "holarchy": {
                                          "sml": {
                                            "action": {
                                              "ocd": {
                                                "setBooleanFlag": {
                                                  "path": "#.clock"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "transitions": [
                                    {
                                      "transitionIf": {
                                        "always": true
                                      },
                                      "nextStep": "updated"
                                    }
                                  ]
                                },
                                "updated": {
                                  "description": "The value managed by the frame latch has been written.",
                                  "actions": {
                                    "enter": [],
                                    "exit": [
                                      {
                                        "holarchy": {
                                          "sml": {
                                            "action": {
                                              "ocd": {
                                                "clearBooleanFlag": {
                                                  "path": "#.clock"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "transitions": [
                                    {
                                      "transitionIf": {
                                        "always": true
                                      },
                                      "nextStep": "waiting"
                                    }
                                  ]
                                },
                                "waiting": {
                                  "description": "The frame latch is waiting for value to be written.",
                                  "actions": {
                                    "enter": [],
                                    "exit": []
                                  },
                                  "transitions": [
                                    {
                                      "transitionIf": {
                                        "holarchy": {
                                          "sml": {
                                            "operator": {
                                              "isBooleanFlagSet": {
                                                "path": "#.clock"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "nextStep": "updated"
                                    }
                                  ]
                                }
                              }
                            },
                            "digraph": {
                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Observable Frame Latch] OPM Digraph",
                              "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                              "vlist": [
                                {
                                  "u": "uninitialized",
                                  "p": {
                                    "description": "Default starting process step.",
                                    "actions": {
                                      "enter": [],
                                      "exit": [
                                        {
                                          "holarchy": {
                                            "sml": {
                                              "action": {
                                                "ocd": {
                                                  "setBooleanFlag": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "u": "updated",
                                  "p": {
                                    "description": "The value managed by the frame latch has been written.",
                                    "actions": {
                                      "enter": [],
                                      "exit": [
                                        {
                                          "holarchy": {
                                            "sml": {
                                              "action": {
                                                "ocd": {
                                                  "clearBooleanFlag": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "u": "waiting",
                                  "p": {
                                    "description": "The frame latch is waiting for value to be written.",
                                    "actions": {
                                      "enter": [],
                                      "exit": []
                                    }
                                  }
                                }
                              ],
                              "elist": [
                                {
                                  "e": {
                                    "u": "uninitialized",
                                    "v": "updated"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "always": true
                                    }
                                  }
                                },
                                {
                                  "e": {
                                    "u": "updated",
                                    "v": "waiting"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "always": true
                                    }
                                  }
                                },
                                {
                                  "e": {
                                    "u": "waiting",
                                    "v": "updated"
                                  },
                                  "p": {
                                    "priority": 0,
                                    "operator": {
                                      "holarchy": {
                                        "sml": {
                                          "operator": {
                                            "isBooleanFlagSet": {
                                              "path": "#.clock"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "dosRgxmiR66ongCbJB78ow": {
            "bvj2u51Uw5_SD1TRZNpwXA": {
              "uZN6-qpIQO6CkwmLDWtMCw": {
                "harnessRequest": {
                  "id": "uZN6-qpIQO6CkwmLDWtMCw",
                  "name": "OPC Frame Latch Test #1",
                  "description": "Try to apply the Frame Latch OPM in an OPC system.",
                  "vectorRequest": {
                    "holistic": {
                      "holarchy": {
                        "ObservableProcessController": {
                          "constructorRequest": {
                            "id": "uZN6-qpIQO6CkwmLDWtMCw",
                            "name": "OPC Frame Latch Test #1",
                            "description": "Try to apply the Frame Latch OPM in an OPC system.",
                            "observableProcessModelSets": [
                              [
                                {
                                  "declaration": {
                                    "id": "z_mTe02hSWmaM1iRO1pBeA",
                                    "name": "Observable Frame Latch",
                                    "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                    "opmDataSpec": {
                                      "____label": "Observable Frame Latch",
                                      "____types": "jsObject",
                                      "____defaultValue": {},
                                      "value": {
                                        "____opaque": true
                                      },
                                      "clock": {
                                        "____accept": "jsBoolean",
                                        "____defaultValue": false
                                      }
                                    },
                                    "steps": {
                                      "uninitialized": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "sml": {
                                                  "action": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "always": true
                                            },
                                            "nextStep": "updated"
                                          }
                                        ]
                                      },
                                      "updated": {
                                        "description": "The value managed by the frame latch has been written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "sml": {
                                                  "action": {
                                                    "ocd": {
                                                      "clearBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "always": true
                                            },
                                            "nextStep": "waiting"
                                          }
                                        ]
                                      },
                                      "waiting": {
                                        "description": "The frame latch is waiting for value to be written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "holarchy": {
                                                "sml": {
                                                  "operator": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "nextStep": "updated"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "digraph": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Observable Frame Latch] OPM Digraph",
                                    "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "sml": {
                                                    "action": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "sml": {
                                                    "action": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "The frame latch is waiting for value to be written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "sml": {
                                                "operator": {
                                                  "isBooleanFlagSet": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "frameLatch": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "opm": "z_mTe02hSWmaM1iRO1pBeA"
                                },
                                "value": {
                                  "____accept": "jsString"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "harnessResponse": {
                  "error": null,
                  "result": {
                    "harnessOptions": {
                      "idempotent": true,
                      "gitDiffHunkSize": 0
                    },
                    "harnessDispatch": {
                      "54MiSgQdSiukMX4fIZJimg": {
                        "uZN6-qpIQO6CkwmLDWtMCw": {
                          "opcToJSON": {
                            "id": "uZN6-qpIQO6CkwmLDWtMCw",
                            "name": "OPC Frame Latch Test #1",
                            "description": "Try to apply the Frame Latch OPM in an OPC system.",
                            "opmMap": {
                              "z_mTe02hSWmaM1iRO1pBeA": {
                                "declaration": {
                                  "id": "z_mTe02hSWmaM1iRO1pBeA",
                                  "name": "Observable Frame Latch",
                                  "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                  "opmDataSpec": {
                                    "____label": "Observable Frame Latch",
                                    "____types": "jsObject",
                                    "____defaultValue": {},
                                    "value": {
                                      "____opaque": true
                                    },
                                    "clock": {
                                      "____accept": "jsBoolean",
                                      "____defaultValue": false
                                    }
                                  },
                                  "steps": {
                                    "uninitialized": {
                                      "description": "Default starting process step.",
                                      "actions": {
                                        "enter": [],
                                        "exit": [
                                          {
                                            "holarchy": {
                                              "sml": {
                                                "action": {
                                                  "ocd": {
                                                    "setBooleanFlag": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "transitions": [
                                        {
                                          "transitionIf": {
                                            "always": true
                                          },
                                          "nextStep": "updated"
                                        }
                                      ]
                                    },
                                    "updated": {
                                      "description": "The value managed by the frame latch has been written.",
                                      "actions": {
                                        "enter": [],
                                        "exit": [
                                          {
                                            "holarchy": {
                                              "sml": {
                                                "action": {
                                                  "ocd": {
                                                    "clearBooleanFlag": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "transitions": [
                                        {
                                          "transitionIf": {
                                            "always": true
                                          },
                                          "nextStep": "waiting"
                                        }
                                      ]
                                    },
                                    "waiting": {
                                      "description": "The frame latch is waiting for value to be written.",
                                      "actions": {
                                        "enter": [],
                                        "exit": []
                                      },
                                      "transitions": [
                                        {
                                          "transitionIf": {
                                            "holarchy": {
                                              "sml": {
                                                "operator": {
                                                  "isBooleanFlagSet": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "nextStep": "updated"
                                        }
                                      ]
                                    }
                                  }
                                },
                                "digraph": {
                                  "name": "[z_mTe02hSWmaM1iRO1pBeA::Observable Frame Latch] OPM Digraph",
                                  "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                  "vlist": [
                                    {
                                      "u": "uninitialized",
                                      "p": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "sml": {
                                                  "action": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "updated",
                                      "p": {
                                        "description": "The value managed by the frame latch has been written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "sml": {
                                                  "action": {
                                                    "ocd": {
                                                      "clearBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "u": "waiting",
                                      "p": {
                                        "description": "The frame latch is waiting for value to be written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        }
                                      }
                                    }
                                  ],
                                  "elist": [
                                    {
                                      "e": {
                                        "u": "uninitialized",
                                        "v": "updated"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "updated",
                                        "v": "waiting"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "always": true
                                        }
                                      }
                                    },
                                    {
                                      "e": {
                                        "u": "waiting",
                                        "v": "updated"
                                      },
                                      "p": {
                                        "priority": 0,
                                        "operator": {
                                          "holarchy": {
                                            "sml": {
                                              "operator": {
                                                "isBooleanFlagSet": {
                                                  "path": "#.clock"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "opmiSpecPaths": [
                              {
                                "specPath": "~.frameLatch",
                                "opmiRef": {
                                  "declaration": {
                                    "id": "z_mTe02hSWmaM1iRO1pBeA",
                                    "name": "Observable Frame Latch",
                                    "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                    "opmDataSpec": {
                                      "____label": "Observable Frame Latch",
                                      "____types": "jsObject",
                                      "____defaultValue": {},
                                      "value": {
                                        "____opaque": true
                                      },
                                      "clock": {
                                        "____accept": "jsBoolean",
                                        "____defaultValue": false
                                      }
                                    },
                                    "steps": {
                                      "uninitialized": {
                                        "description": "Default starting process step.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "sml": {
                                                  "action": {
                                                    "ocd": {
                                                      "setBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "always": true
                                            },
                                            "nextStep": "updated"
                                          }
                                        ]
                                      },
                                      "updated": {
                                        "description": "The value managed by the frame latch has been written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": [
                                            {
                                              "holarchy": {
                                                "sml": {
                                                  "action": {
                                                    "ocd": {
                                                      "clearBooleanFlag": {
                                                        "path": "#.clock"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "always": true
                                            },
                                            "nextStep": "waiting"
                                          }
                                        ]
                                      },
                                      "waiting": {
                                        "description": "The frame latch is waiting for value to be written.",
                                        "actions": {
                                          "enter": [],
                                          "exit": []
                                        },
                                        "transitions": [
                                          {
                                            "transitionIf": {
                                              "holarchy": {
                                                "sml": {
                                                  "operator": {
                                                    "isBooleanFlagSet": {
                                                      "path": "#.clock"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "nextStep": "updated"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "digraph": {
                                    "name": "[z_mTe02hSWmaM1iRO1pBeA::Observable Frame Latch] OPM Digraph",
                                    "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                    "vlist": [
                                      {
                                        "u": "uninitialized",
                                        "p": {
                                          "description": "Default starting process step.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "sml": {
                                                    "action": {
                                                      "ocd": {
                                                        "setBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "updated",
                                        "p": {
                                          "description": "The value managed by the frame latch has been written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": [
                                              {
                                                "holarchy": {
                                                  "sml": {
                                                    "action": {
                                                      "ocd": {
                                                        "clearBooleanFlag": {
                                                          "path": "#.clock"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "u": "waiting",
                                        "p": {
                                          "description": "The frame latch is waiting for value to be written.",
                                          "actions": {
                                            "enter": [],
                                            "exit": []
                                          }
                                        }
                                      }
                                    ],
                                    "elist": [
                                      {
                                        "e": {
                                          "u": "uninitialized",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "updated",
                                          "v": "waiting"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "always": true
                                          }
                                        }
                                      },
                                      {
                                        "e": {
                                          "u": "waiting",
                                          "v": "updated"
                                        },
                                        "p": {
                                          "priority": 0,
                                          "operator": {
                                            "holarchy": {
                                              "sml": {
                                                "operator": {
                                                  "isBooleanFlagSet": {
                                                    "path": "#.clock"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ],
                            "ocdTemplateSpec": {
                              "____types": "jsObject",
                              "frameLatch": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "opm": "z_mTe02hSWmaM1iRO1pBeA"
                                },
                                "value": {
                                  "____accept": "jsString"
                                }
                              }
                            },
                            "ocdRuntimeSpec": {
                              "____label": "OPC [uZN6-qpIQO6CkwmLDWtMCw::OPC Frame Latch Test #1] Observable Controller Data Store",
                              "____description": "OPC [uZN6-qpIQO6CkwmLDWtMCw::OPC Frame Latch Test #1] system process runtime state data managed by OPC instance.",
                              "____types": "jsObject",
                              "____defaultValue": {},
                              "frameLatch": {
                                "____types": "jsObject",
                                "____appdsl": {
                                  "opm": "z_mTe02hSWmaM1iRO1pBeA"
                                },
                                "value": {
                                  "____opaque": true
                                },
                                "____label": "Observable Frame Latch",
                                "____defaultValue": {},
                                "clock": {
                                  "____accept": "jsBoolean",
                                  "____defaultValue": false
                                },
                                "__opmiStep": {
                                  "____accept": "jsString",
                                  "____defaultValue": "uninitialized"
                                }
                              }
                            },
                            "ocdi": {
                              "frameLatch": {
                                "clock": false,
                                "__opmiStep": "uninitialized"
                              }
                            },
                            "transitionDispatcher": {},
                            "actionDispatcher": {},
                            "opcActorStack": [],
                            "evalCount": 1,
                            "lastEvalResponse": {
                              "error": null,
                              "result": {
                                "evalNumber": 0,
                                "summary": {
                                  "counts": {
                                    "frames": 1,
                                    "errors": 0,
                                    "transitions": 0
                                  }
                                },
                                "evalFrames": [
                                  {
                                    "summary": {
                                      "counts": {
                                        "bindings": 1,
                                        "transitions": 0,
                                        "errors": 0
                                      },
                                      "reports": {
                                        "transitions": [],
                                        "errors": []
                                      }
                                    },
                                    "bindings": {
                                      "rWatZg2xDbHwiPCI5s_mzw": {
                                        "evalRequest": {
                                          "dataBinding": {
                                            "dataPath": "~.frameLatch",
                                            "specPath": "~.frameLatch"
                                          },
                                          "initialStep": "uninitialized",
                                          "opmRef": {
                                            "declaration": {
                                              "id": "z_mTe02hSWmaM1iRO1pBeA",
                                              "name": "Observable Frame Latch",
                                              "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                              "opmDataSpec": {
                                                "____label": "Observable Frame Latch",
                                                "____types": "jsObject",
                                                "____defaultValue": {},
                                                "value": {
                                                  "____opaque": true
                                                },
                                                "clock": {
                                                  "____accept": "jsBoolean",
                                                  "____defaultValue": false
                                                }
                                              },
                                              "steps": {
                                                "uninitialized": {
                                                  "description": "Default starting process step.",
                                                  "actions": {
                                                    "enter": [],
                                                    "exit": [
                                                      {
                                                        "holarchy": {
                                                          "sml": {
                                                            "action": {
                                                              "ocd": {
                                                                "setBooleanFlag": {
                                                                  "path": "#.clock"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "transitions": [
                                                    {
                                                      "transitionIf": {
                                                        "always": true
                                                      },
                                                      "nextStep": "updated"
                                                    }
                                                  ]
                                                },
                                                "updated": {
                                                  "description": "The value managed by the frame latch has been written.",
                                                  "actions": {
                                                    "enter": [],
                                                    "exit": [
                                                      {
                                                        "holarchy": {
                                                          "sml": {
                                                            "action": {
                                                              "ocd": {
                                                                "clearBooleanFlag": {
                                                                  "path": "#.clock"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "transitions": [
                                                    {
                                                      "transitionIf": {
                                                        "always": true
                                                      },
                                                      "nextStep": "waiting"
                                                    }
                                                  ]
                                                },
                                                "waiting": {
                                                  "description": "The frame latch is waiting for value to be written.",
                                                  "actions": {
                                                    "enter": [],
                                                    "exit": []
                                                  },
                                                  "transitions": [
                                                    {
                                                      "transitionIf": {
                                                        "holarchy": {
                                                          "sml": {
                                                            "operator": {
                                                              "isBooleanFlagSet": {
                                                                "path": "#.clock"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "nextStep": "updated"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            "digraph": {
                                              "name": "[z_mTe02hSWmaM1iRO1pBeA::Observable Frame Latch] OPM Digraph",
                                              "description": "Observable frame latch model buffers a value in an OPM-bound namespace for one evaluation frame.",
                                              "vlist": [
                                                {
                                                  "u": "uninitialized",
                                                  "p": {
                                                    "description": "Default starting process step.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "sml": {
                                                              "action": {
                                                                "ocd": {
                                                                  "setBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "updated",
                                                  "p": {
                                                    "description": "The value managed by the frame latch has been written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": [
                                                        {
                                                          "holarchy": {
                                                            "sml": {
                                                              "action": {
                                                                "ocd": {
                                                                  "clearBooleanFlag": {
                                                                    "path": "#.clock"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "u": "waiting",
                                                  "p": {
                                                    "description": "The frame latch is waiting for value to be written.",
                                                    "actions": {
                                                      "enter": [],
                                                      "exit": []
                                                    }
                                                  }
                                                }
                                              ],
                                              "elist": [
                                                {
                                                  "e": {
                                                    "u": "uninitialized",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "updated",
                                                    "v": "waiting"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "always": true
                                                    }
                                                  }
                                                },
                                                {
                                                  "e": {
                                                    "u": "waiting",
                                                    "v": "updated"
                                                  },
                                                  "p": {
                                                    "priority": 0,
                                                    "operator": {
                                                      "holarchy": {
                                                        "sml": {
                                                          "operator": {
                                                            "isBooleanFlagSet": {
                                                              "path": "#.clock"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        "evalResponse": {
                                          "status": "error",
                                          "finishStep": "uninitialized",
                                          "phases": {
                                            "p1_toperator": [
                                              {
                                                "request": {
                                                  "context": {
                                                    "namespace": "~.frameLatch",
                                                    "ocdi": {
                                                      "frameLatch": {
                                                        "clock": false,
                                                        "__opmiStep": "uninitialized"
                                                      }
                                                    },
                                                    "transitionDispatcher": {}
                                                  },
                                                  "operator": {
                                                    "always": true
                                                  }
                                                },
                                                "response": {
                                                  "error": "No TransitionOperator class instances registered!"
                                                }
                                              }
                                            ],
                                            "p2_exit": [],
                                            "p3_enter": [],
                                            "p4_finalize": null
                                          },
                                          "errors": {
                                            "p1_toperator": 1,
                                            "p2_exit": 0,
                                            "p3_enter": 0,
                                            "p4_finalize": 0,
                                            "total": 1
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "constructionWarnings": [
                              "WARNING: No TransitionOperator class instances have been registered!",
                              "WARNING: No ControllerAction class instances have been registered!"
                            ]
                          },
                          "actionEvaluations": []
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  }
}
